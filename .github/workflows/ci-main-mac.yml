name: CI (macOS)

on:
  push:
    branches: [ main, 'release/**' ]
  pull_request:
    branches: [ main, 'release/**']

jobs:
  build:
    runs-on: macos-13 # TODO: This is a workaround until macos-14 is fixed: https://github.com/actions/runner-images/issues/10624

    steps:
      - uses: actions/checkout@v3

      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@v1

      - name: Setup Node environment
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Build the extension
        run: yarn compile-production

      - name: Lint
        run: yarn lint

      - name: Install CMake/Ninja
        uses: lukka/get-cmake@latest
        with:
            cmakeVersion: 3.18.3
            ninjaVersion: 1.10.1

      - name: Create CMake wrapper script
        run: |
          # Find our desired CMake
          CMAKE_PATH=$(find /Users/runner -name "cmake" -type f -path "*/CMake.app/Contents/bin/*" | head -n 1)
          if [ -z "$CMAKE_PATH" ]; then
            echo "::error::Could not find installed CMake binary"
            exit 1
          fi
          
          # Create a wrapper script that redirects to our desired CMake
          echo '#!/bin/bash' > /tmp/cmake_wrapper
          echo "exec $CMAKE_PATH \"\$@\"" >> /tmp/cmake_wrapper
          chmod +x /tmp/cmake_wrapper
          
          # Back up the original (don't delete it)
          sudo mv /usr/local/bin/cmake /usr/local/bin/cmake.original
          sudo cp /tmp/cmake_wrapper /usr/local/bin/cmake
          
          # Verify
          which cmake
          cmake --version

      - name: Build fake compilers for tests
        uses: urkle/action-cmake-build@v1.0.0
        with:
          source-dir: ${{ github.workspace }}/test/fakeOutputGenerator
          configure-options: -DCMAKE_INSTALL_PREFIX:STRING=${{ github.workspace }}/test/fakebin
          install-build: true

      - name: Run successful-build test
        run: yarn endToEndTestsSuccessfulBuild

      - name: Run backend tests
        run: yarn backendTests

      - name: Run smoke tests
        run: yarn smokeTests

      - name: Run unit tests
        run: yarn unitTests

      - name: Run integration tests
        run: yarn integrationTests

      - name: Run single root test
        run: yarn endToEndTestsSingleRoot

      - name: Run multi root test
        run: yarn endToEndTestsMultiRoot

      - name: Upload test logs if tests failed
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: TestLogs
          path: test/**/log.txt
          if-no-files-found: warn

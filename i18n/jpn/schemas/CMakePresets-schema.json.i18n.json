/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"schemas/CMakePresets-schema.json.": "これらのプリセットでは、CMake に渡すジェネレーターとビルド ディレクトリや、オプションとして変数と他の引数のリストが指定されます。",
	"schemas/CMakePresets-schema.json.properties.version": "JSON スキーマのバージョンを表す必須の整数です。",
	"schemas/CMakePresets-schema.json.properties.cmakeMinimumRequired": "このプロジェクトをビルドするために必要な CMake の最小バージョンを表す、オプションのオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.cmakeMinimumRequired.properties.major": "メジャー バージョンを表す、オプションの整数です。",
	"schemas/CMakePresets-schema.json.properties.cmakeMinimumRequired.properties.minor": "マイナー バージョンを表す、省略可能な整数です。",
	"schemas/CMakePresets-schema.json.properties.cmakeMinimumRequired.properties.patch": "パッチのバージョンを表す、省略可能な整数です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets": "構成のプリセット オブジェクトのオプションの配列です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items": "構成のプリセット オブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.name": "プリセットのマシン用フレンドリ名を表す、必須の文字列です。この識別子は --preset 引数で使用されます。CMakePresets.json と CMakeUserPresets.json の和集合内の同じ名前の 2 つのプリセットが同じディレクトリに存在することはできません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.hidden": "プリセットを非表示にするかどうかを指定する、省略可能なブール値です。プリセットは、非表示の場合、--preset= 引数で使用できず、CMake GUI に表示されず、有効な generator も binaryDir も持つ必要がありません (継承からであっても)。非表示のプリセットは、inherits フィールドを使用して継承する他のプリセットのベースとして使用することを目的としています。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.inherits.anyOf.0": "継承元のプリセットの名前を表す、オプションの文字列です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.inherits.anyOf.1": "継承元のプリセットの名前を表す、省略可能な文字列の配列です。プリセットでは、既定で inherits プリセットからのすべてのフィールドが継承されます (name、hidden、inherits、description、displayName を除く) が、必要に応じてオーバーライドできます。複数の inherits プリセットに同じフィールドの矛盾する値が含まれている場合、inherits リストで先に現れるプリセットが優先されます。CMakePresets.json に含まれるプリセットでは、CMakeUserPresets.json に含まれるプリセットからの継承を行うことができません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.inherits.anyOf.1.items": "継承元のプリセットの名前を表す、オプションの文字列です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor": "ベンダー固有の情報を含むオプションのマップです。このフィールドが存在する場合、CMake では、これがマップであることを確認する場合を除いて、その内容が解釈されることはありません。しかし、キーは、ベンダー固有のドメイン名の後に、/ 区切りのパスを続けたものにする必要があります。たとえば、Example IDE 1.0 の場合は example.com/ExampleIDE/1.0 のようにします。各フィールドの値にはベンダーが必要とする任意のものを使用できますが、通常はマップです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0": "Visual Studio 設定のベンダー オブジェクトを表す、省略可能なオブジェクトです",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0.properties.hostOS.anyOf.0": "hostOS の名前を表す、省略可能な文字列です。指定できる値は、Windows、Linux、macOS です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0.properties.hostOS.anyOf.1": "サポートされているホスト オペレーティング システムの配列です。このキーは、アクティブなターゲット システムまたはホスト OS に適用されないプリセットを非表示にするために、Visual Studio と Visual Studio Code によって使用されます。指定できる値は、Windows、Linux、macOS です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0.properties.hostOS.anyOf.1.items": "hostOS の名前を表す、省略可能な文字列です。指定できる値は、Windows、Linux、macOS です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0.properties.intelliSenseMode": "優先する IntelliSense モードを示す、省略可能なキーです。Visual Studio と Visual Studio Code 内で IntelliSense 情報を計算するために使用されるモードです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0.properties.intelliSenseOptions": "IntelliSense の詳細設定を構成するために使用される、省略可能なオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0.properties.intelliSenseOptions.properties.useCompilerDefaults": "IntelliSense でコンパイラの既定の defines と include パスを使用するかどうかを指定します。使用中のコンパイラが GCC 風の引数をサポートしていない場合に限り、false にする必要があります。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0.properties.intelliSenseOptions.properties.additionalCompilerArgs.anyOf.1": "Visual Studio で IntelliSense を制御するための追加オプションの配列です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0.properties.enableMicrosoftCodeAnalysis": "cl または clang-cl を使用してビルドするときに、Visual Studio 内で Microsoft コード分析を有効にします。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0.properties.codeAnalysisRuleset": "Visual Studio で Microsoft コード分析を実行中に使用するルールセット。Visual Studio によってインストールされたルールセット ファイルのパスまたはファイル名を指定できます。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0.properties.enableClangTidyCodeAnalysis": "clang-cl を使用してビルドするときに、Visual Studio 内で Clang-Tidy コード分析を有効にします。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0.properties.clangTidyChecks": "Visual Studio で Clang-Tidy コード分析を実行するときに、Clang-Tidy に渡される警告のコンマ区切りリストです。ワイルドカードを使用できます。プレフィックス '-' を付けるとチェックが削除されます。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0.properties.cacheRoot": "CMake キャッシュへのパスです。このディレクトリには、既存の CMakeCache.txt ファイルが含まれている必要があります。このキーは、Visual Studio の \"既存のキャッシュを開く\" シナリオでのみサポートされます。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioSettings/CMake/1.0.properties.cmakeGenerateCommand": "CMake キャッシュを生成するためのコマンド ライン ツールです (コマンド ライン プログラム + 引数として指定します。例: \"gencache.bat debug\")。このコマンドは、キャッシュ生成が呼び出されたときに、プリセットに指定されている環境のシェルから実行されます。このキーは、Visual Studio の \"既存のキャッシュを開く\" シナリオでのみサポートされます。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0": "Visual Studio リモート設定のベンダー オブジェクトを表す、省略可能なオブジェクトです",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.sourceDir": "プロジェクトのコピー先になる、リモート システムまたは WSL2 インストール上のディレクトリへのパスです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.copySources": "true の場合、Visual Studio によって Windows からソースがリモート システムにコピーされます。ファイル同期を自分で管理する場合には、false に設定します。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.copySourcesOptions": "Windows からリモート システムへのソース コピーに関連する設定のオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.copySourcesOptions.properties.exclusionList": "ソース ファイルをリモート システムにコピーするときに除外するパスの一覧。パスには、ファイルかディレクトリの名前、またはコピーのルートからの相対パスを指定できます。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.copySourcesOptions.properties.method": "ソース ファイルをリモート システムにコピーするために使用される方式です。指定できる値は rsync と sftp です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.copySourcesOptions.properties.concurrentCopies": "ソースからリモート システムへの同期中に使用される同時コピー数。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.copySourcesOptions.properties.outputVerbosity": "リモート システムへのソース コピー操作の詳細レベルです。指定できるレベルは、Normal、Verbose、Diagnostic です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.rsyncCommandArgs": "rsync に渡される追加のコマンド ライン引数の一覧です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.copyBuildOutput": "リモート システムから Windows にビルドの出力をコピーして戻すかどうかを指定します。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.copyOptimizations": "ソース コピーの最適化に関連する設定のオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.copyOptimizations.properties.maxSmallChange": "rsync の代わりに sftp を使用してコピーするファイルの最大数。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.copyOptimizations.properties.useOptimizations": "コピー最適化なし (\"None\")、rsync のみの最適化 (\"RsyncOnly\")、rsync と sftp の最適化 (\"RsyncAndSftp\") のいずれかを選択してください。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.copyOptimizations.properties.rsyncSingleDirectoryCommandArgs": "1 つのディレクトリの内容をリモート システムにコピーするときに rsync に渡される追加のコマンド ライン引数の一覧です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.copyAdditionalIncludeDirectoriesList": "IntelliSense 用にローカルにコピーされるリモート ヘッダー ディレクトリへのパスのリスト。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.copyExcludeDirectoriesList": "IntelliSense 用にローカルにコピーされないリモート ヘッダー ディレクトリへのパスのリスト。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.vendor.properties.microsoft.com/VisualStudioRemoteSettings/CMake/1.0.properties.forceWSL1Toolset": "true の場合、Visual Studio から WSL をターゲットとするときに、Visual Studio では常に WSL1 ツールセットが使用されます。WSL1 ツールセットでは、すべてのコマンドがローカルで実行され、/mnt フォルダーの下にマウントされている Windows ドライブを利用して WSL からローカル ソース ファイルにアクセスされます。これらの操作は、WSL2 では遅くなるおそれがあります。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.displayName": "プリセットの人間用フレンドリ名を含む、オプションの文字列です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.description": "プリセットのわかりやすい説明を含む、オプションの文字列です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.generator": "プリセットに対して使用するジェネレーターを表す、オプションの文字列です。generator が指定されていない場合は、inherits プリセットから継承する必要があります (このプリセットが hidden である場合を除く)。Visual Studio ジェネレーターの場合は、コマンド ラインの -G 引数と異なり、ジェネレーター名にプラットフォーム名を含めることはできないことにご注意ください。代わりに architecture フィールドをご使用ください。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.architecture.anyOf.0": "それをサポートするジェネレーターのプラットフォームを表す、省略可能な文字列です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.architecture.anyOf.1": "それをサポートするジェネレーターのプラットフォームを表す、省略可能なオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.architecture.anyOf.1.properties.value": "値を表す省略可能な文字列です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.architecture.anyOf.1.properties.strategy": "CMake にフィールドの処理方法を指定する、省略可能な文字列です。有効な値は次のとおりです。\"set\" では、それぞれの値が設定されます。それぞれのフィールドをサポートしないジェネレーターでこれを使用すると、エラーが発生します。\"external\" では、たとえジェネレーターによってサポートされているものであっても、値は設定されません。これは、たとえば、プリセットで Ninja ジェネレーターが使用されており、IDE で architecture と toolset のフィールドから Visual C++ 環境を設定できる場合に役立ちます。その場合、CMake でそのフィールドは無視されますが、IDE ではそれらを使用して CMake の起動前に環境を設定できます。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.toolset.anyOf.0": "それをサポートするジェネレーターのツールセットを表す、省略可能な文字列です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.toolset.anyOf.1": "それをサポートするジェネレーターのツールセットを表す、省略可能なオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.toolset.anyOf.1.properties.value": "値を表す省略可能な文字列です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.toolset.anyOf.1.properties.strategy": "CMake にフィールドの処理方法を指定する、省略可能な文字列です。有効な値は次のとおりです。\"set\" では、それぞれの値が設定されます。それぞれのフィールドをサポートしないジェネレーターでこれを使用すると、エラーが発生します。\"external\" では、たとえジェネレーターによってサポートされているものであっても、値は設定されません。これは、たとえば、プリセットで Ninja ジェネレーターが使用されており、IDE で architecture と toolset のフィールドから Visual C++ 環境を設定できる場合に役立ちます。その場合、CMake でそのフィールドは無視されますが、IDE ではそれらを使用して CMake の起動前に環境を設定できます。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.binaryDir": "出力バイナリ ディレクトリへのパスを表す、オプションの文字列です。このフィールドではマクロの展開がサポートされています。相対パスが指定された場合は、ソース ディレクトリからの相対パスとして判断されます。binaryDir が指定されていない場合は、inherits プリセットから継承する必要があります (このプリセットが hidden である場合を除く)。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cmakeExecutable": "このプリセットで使用する CMake 実行可能ファイルへのパスを表すオプションの文字列です。これは IDE での使用のために予約され、CMake 自体では使用されません。このフィールドを使用する IDE では、これに含まれるマクロを展開する必要があります。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables": "キャッシュ変数の省略可能なマップです。キーは変数名です (空の文字列にはできません)。キャッシュ変数は、inherits フィールドを通じて継承され、プリセットの変数は、それ自身の cacheVariables とそのすべての親からの cacheVariables の和集合になります。この和集合の複数のプリセットで同じ変数が定義されている場合は、継承の標準規則が適用されます。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.properties.CMAKE_C_COMPILER.anyOf.0": "C に使用されるコンパイラです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.properties.CMAKE_C_COMPILER.anyOf.1": "null 値に設定した変数は設定されません。これは別のプリセットから値が継承されていても変わりありません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.properties.CMAKE_CXX_COMPILER.anyOf.0": "C++ に使用されるコンパイラです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.properties.CMAKE_CXX_COMPILER.anyOf.1": "null 値に設定した変数は設定されません。これは別のプリセットから値が継承されていても変わりありません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.properties.CMAKE_INSTALL_PREFIX.anyOf.0": "CMake で使用するインストール ディレクトリです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.properties.CMAKE_INSTALL_PREFIX.anyOf.1": "null 値に設定した変数は設定されません。これは別のプリセットから値が継承されていても変わりありません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.properties.CMAKE_TOOLCHAIN_FILE.anyOf.0": "CMake に渡されるツールチェーン ファイルです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.properties.CMAKE_TOOLCHAIN_FILE.anyOf.1": "null 値に設定した変数は設定されません。これは別のプリセットから値が継承されていても変わりありません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.properties.CMAKE_BUILD_TYPE": "単一構成ジェネレーターでのビルドの種類を指定します。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.properties.CMAKE_BUILD_TYPE.anyOf.3": "null 値に設定した変数は設定されません。これは別のプリセットから値が継承されていても変わりありません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.additionalProperties.anyOf.0": "null 値に設定した変数は設定されません。これは別のプリセットから値が継承されていても変わりありません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.additionalProperties.anyOf.1": "変数の値を表すブール値です。\"TRUE\" または \"FALSE\" と等価です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.additionalProperties.anyOf.2": "変数の値を表す文字列です (マクロの展開がサポートされています)。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.additionalProperties.anyOf.3": "変数の型と値を表すオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.additionalProperties.anyOf.3.properties.type": "変数の型を表す省略可能な文字列です。BOOL、FILEPATH、PATH、STRING、INTERNAL のいずれかである必要があります。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.additionalProperties.anyOf.3.properties.value.anyOf.0": "変数の値を表す、必須のブール値です。\"TRUE\" または \"FALSE\" と等価です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.cacheVariables.additionalProperties.anyOf.3.properties.value.anyOf.1": "変数の値を表す必須の文字列です。このフィールドではマクロの展開がサポートされています。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.environment": "環境変数のオプションのマップです。キーは変数名です (空の文字列にはできません)。各変数は、プロセスの環境によって値が指定されたかどうかに関係なく設定されます。このフィールドではマクロの展開がサポートされています。また、このマップの環境変数は互いを参照でき、任意の順序でリストできます。ただし、そのような参照によって循環が生じてはなりません (たとえば、ENV_1 が $env{ENV_2} である場合、ENV_2 を $env{ENV_1} にすることはできません)。環境変数は inherits フィールドを通じて継承され、プリセットの環境は、それ自身の environment とそのすべての親からの environment との和集合となります。この和集合内の複数のプリセットで同じ変数が定義されている場合は、継承の標準規則が適用されます。null 値に設定した変数は設定されません。これは別のプリセットから値が継承されていても変わりありません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.environment.additionalProperties.anyOf.0": "null 値に設定した変数は設定されません。これは別のプリセットから値が継承されていても変わりありません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.environment.additionalProperties.anyOf.1": "変数の値を表す文字列です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.warnings": "警告を指定するオプションのオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.warnings.properties.dev": "オプションのブール値です。コマンド ラインで -Wdev または -Wno-dev を渡すことに相当します。errors.dev が true に設定されている場合、false に設定することはできません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.warnings.properties.deprecated": "オプションのブール値です。コマンド ラインで -Wdeprecated または -Wno-deprecated を渡すことに相当します。errors.deprecated が true に設定されている場合は、false に設定できません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.warnings.properties.uninitialized": "オプションのブール値です。この値を true に設定することは、コマンド ラインで --warn-uninitialized を渡すことに相当します。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.warnings.properties.unusedCli": "オプションのブール値です。この値を false に設定することは、コマンド ラインで --no-warn-unused-cli を渡すことに相当します。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.warnings.properties.systemVars": "オプションのブール値です。この値を true に設定することは、コマンド ラインで --check-system-vars を渡すことに相当します。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.errors": "エラーを指定するオプションのオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.errors.properties.dev": "オプションのブール値です。コマンド ラインで -Werror=dev または -Wno-error=dev を渡すことに相当します。warnings.dev が false に設定されている場合は、true に設定できません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.errors.properties.deprecated": "オプションのブール値です。コマンド ラインで -Werror=deprecated または -Wno-error=deprecated を渡すことに相当します。warnings.deprecated が false に設定されている場合は、true に設定できません。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.debug": "デバッグ オプションを指定する、省略可能なオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.debug.properties.output": "省略可能なブール値です。この値を true に設定することは、コマンド ラインで --debug-output を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.debug.properties.tryCompile": "省略可能なブール値です。この値を true に設定することは、コマンド ラインで --debug-trycompile を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.configurePresets.items.properties.debug.properties.find": "省略可能なブール値です。この値を true に設定することは、コマンド ラインで --debug-find を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.buildPresets": "ビルド プリセット オブジェクトの配列です (省略可能)。cmake --build に引数を指定するために使用されます。バージョン 2 以降で利用可能です。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.name": "プリセットのマシン用フレンドリ名を表す、必須の文字列です。この識別子は --preset 引数で使用されます。CMakePresets.json と CMakeUserPresets.json の和集合に含まれる 2 つのプリセット (構成、ビルド、テスト) が、同じディレクトリの中に同じ名前で存在していてはなりません。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.hidden": "プリセットを非表示にするかどうかを指定する、省略可能なブール値です。プリセットは、非表示の場合、--preset 引数で使用できず、CMake GUI に表示されず、有効な configurePreset を持つ必要がありません (継承からであっても)。非表示のプリセットは、inherits フィールドを使用して継承する他のプリセットのベースとして使用することを目的としています。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.inherits.anyOf.0": "継承元のビルド プリセットの名前を表す、省略可能な文字列です。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.inherits.anyOf.1": "継承元のビルド プリセットの名前を表す、省略可能な文字列の配列です。プリセットでは、既定で inherits プリセットからのすべてのフィールドが継承されます (name、hidden、inherits、description、displayName を除く) が、必要に応じてオーバーライドできます。複数の inherits プリセットに同じフィールドの矛盾する値が含まれている場合、inherits リストで先に現れるプリセットが優先されます。CMakePresets.json に含まれるプリセットでは、CMakeUserPresets.json に含まれるプリセットからの継承を行うことができません。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.inherits.anyOf.1.items": "継承元のプリセットの名前を表す、オプションの文字列です。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.configurePreset": "このビルド プリセットに関連付ける構成プリセットの名前を指定する、省略可能な文字列です。configurePreset が指定されていない場合は、inherits プリセットから継承する必要があります (このプリセットが非表示になっている場合を除く)。ビルド ツリー ディレクトリは、構成プリセットから推論されます。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.vendor": "ベンダー固有の情報を含むオプションのマップです。このフィールドが存在する場合、CMake では、これがマップであることを確認する場合を除いて、その内容が解釈されることはありません。しかし、これはルートレベルの vendor フィールドと同じ規則に従う必要があります。ベンダーは、プリセットごとの独自の vendor フィールドを使用する場合、必要に応じて継承を適切な方法で実装する必要があります。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.displayName": "プリセットの人間用フレンドリ名を含む、オプションの文字列です。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.description": "プリセットのわかりやすい説明を含む、オプションの文字列です。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.inheritConfigureEnvironment": "省略可能なブール値で、既定値は true です。true の場合、関連付けられている構成プリセットからの環境変数は、すべての継承されたビルド プリセット環境の後、かつこのビルド プリセットで明示的に指定されている環境変数の前に継承されます。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.environment": "環境変数のオプションのマップです。キーは変数名です (空の文字列にはできません)。各変数は、プロセスの環境によって値が指定されたかどうかに関係なく設定されます。このフィールドではマクロの展開がサポートされています。また、このマップの環境変数は互いを参照でき、任意の順序でリストできます。ただし、そのような参照によって循環が生じてはなりません (たとえば、ENV_1 が $env{ENV_2} である場合、ENV_2 を $env{ENV_1} にすることはできません)。環境変数は inherits フィールドを通じて継承され、プリセットの環境は、それ自身の environment とそのすべての親からの environment との和集合となります。この和集合内の複数のプリセットで同じ変数が定義されている場合は、継承の標準規則が適用されます。null 値に設定した変数は設定されません。これは別のプリセットから値が継承されていても変わりありません。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.environment.additionalProperties.anyOf.0": "null 値に設定した変数は設定されません。これは別のプリセットから値が継承されていても変わりありません。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.environment.additionalProperties.anyOf.1": "変数の値を表す文字列です。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.jobs": "省略可能な整数です。コマンド ラインで --parallel または-j を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.targets.anyOf.0": "省略可能な文字列です。コマンド ラインで --target または -t を渡すのと同等です。ベンダーは、targets プロパティを無視することも、明示的にターゲットを指定するビルド プリセットを非表示にすることもできます。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.targets.anyOf.1": "文字列の配列です (省略可能)。コマンド ラインで --target または -t を渡すのと同等です。ベンダーは、targets プロパティを無視することも、明示的にターゲットを指定するビルド プリセットを非表示にすることもできます。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.targets.anyOf.1.items": "省略可能な文字列です。コマンド ラインで --target または -t を渡すのと同等です。ベンダーは、targets プロパティを無視することも、明示的にターゲットを指定するビルド プリセットを非表示にすることもできます。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.configuration": "省略可能な文字列です。コマンド ラインで --config を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.cleanFirst": "省略可能なブール値です。true の場合、コマンド ラインで --clean-first を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.verbose": "省略可能なブール値です。true の場合、コマンド ラインで --verbose を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.nativeToolOptions": "文字列の配列です (省略可能)。コマンド ラインで -- の後にオプションを渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.buildPresets.items.properties.nativeToolOptions.items": "コマンド ラインで -- の後に渡すオプションを表す、省略可能な文字列です。",
	"schemas/CMakePresets-schema.json.properties.testPresets": "テスト プリセット オブジェクトの配列です (省略可能)。ctest に引数を指定するために使用されます。バージョン 2 以降で利用可能です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.name": "プリセットのマシン用フレンドリ名を表す、必須の文字列です。この識別子は --preset 引数で使用されます。CMakePresets.json と CMakeUserPresets.json の和集合に含まれる 2 つのプリセット (構成、ビルド、テスト) が、同じディレクトリの中に同じ名前で存在していてはなりません。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.hidden": "プリセットを非表示にするかどうかを指定する、省略可能なブール値です。プリセットは、非表示の場合、--preset 引数で使用できず、CMake GUI に表示されず、有効な configurePreset を持つ必要がありません (継承からであっても)。非表示のプリセットは、inherits フィールドを使用して継承する他のプリセットのベースとして使用することを目的としています。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.inherits.anyOf.0": "継承元のテスト プリセットの名前を表す、省略可能な文字列です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.inherits.anyOf.1": "継承元のテスト プリセットの名前を表す、省略可能な文字列の配列です。プリセットでは、既定で inherits プリセットからのすべてのフィールドが継承されます (name、hidden、inherits、description、displayName を除く) が、必要に応じてオーバーライドできます。複数の inherits プリセットに同じフィールドの矛盾する値が含まれている場合、inherits リストで先に現れるプリセットが優先されます。CMakePresets.json に含まれるプリセットでは、CMakeUserPresets.json に含まれるプリセットからの継承を行うことができません。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.inherits.anyOf.1.items": "継承元のプリセットの名前を表す、オプションの文字列です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.configurePreset": "このテスト プリセットに関連付ける構成プリセットの名前を指定する、省略可能な文字列です。configurePreset が指定されていない場合は、inherits プリセットから継承する必要があります (このプリセットが非表示になっている場合を除く)。ビルド ツリー ディレクトリは、構成プリセットから推論されます。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.vendor": "ベンダー固有の情報を含むオプションのマップです。このフィールドが存在する場合、CMake では、これがマップであることを確認する場合を除いて、その内容が解釈されることはありません。しかし、これはルートレベルの vendor フィールドと同じ規則に従う必要があります。ベンダーは、プリセットごとの独自の vendor フィールドを使用する場合、必要に応じて継承を適切な方法で実装する必要があります。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.displayName": "プリセットの人間用フレンドリ名を含む、オプションの文字列です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.description": "プリセットのわかりやすい説明を含む、オプションの文字列です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.inheritConfigureEnvironment": "省略可能なブール値で、既定値は true です。true の場合、関連付けられている構成プリセットからの環境変数は、すべての継承されたテスト プリセット環境の後、かつこのテスト プリセットで明示的に指定されている環境変数の前に継承されます。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.environment": "環境変数のオプションのマップです。キーは変数名です (空の文字列にはできません)。各変数は、プロセスの環境によって値が指定されたかどうかに関係なく設定されます。このフィールドではマクロの展開がサポートされています。また、このマップの環境変数は互いを参照でき、任意の順序でリストできます。ただし、そのような参照によって循環が生じてはなりません (たとえば、ENV_1 が $env{ENV_2} である場合、ENV_2 を $env{ENV_1} にすることはできません)。環境変数は inherits フィールドを通じて継承され、プリセットの環境は、それ自身の environment とそのすべての親からの environment との和集合となります。この和集合内の複数のプリセットで同じ変数が定義されている場合は、継承の標準規則が適用されます。null 値に設定した変数は設定されません。これは別のプリセットから値が継承されていても変わりありません。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.environment.additionalProperties.anyOf.0": "null 値に設定した変数は設定されません。これは別のプリセットから値が継承されていても変わりありません。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.environment.additionalProperties.anyOf.1": "変数の値を表す文字列です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.configuration": "省略可能な文字列です。コマンド ラインで --build-config を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.overwriteConfigurationFile": "CTest 構成ファイルで指定されているオプションを上書きするための構成オプションの配列です (省略可能)。配列内の値ごとに ``--overwrite`` を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.overwriteConfigurationFile.items": "\"key=value\" の形式でキーと値のペアとして記述されたオプションです。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.output": "出力オプションを指定する、省略可能なオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.output.properties.shortProgress": "省略可能なブール値です。true の場合、コマンド ラインで --progress を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.output.properties.verbosity": "詳細レベルを指定する、省略可能な文字列です。有効な値は、\"default\" (コマンド ラインで詳細フラグを指定しない場合と同等)、\"verbose\" (コマンド ラインで --verbose を渡すのと同等)、\"extra\" (コマンド ラインで --extra-verbose を渡すのと同等) です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.output.properties.debug": "省略可能なブール値です。true の場合、コマンド ラインで --debug を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.output.properties.outputOnFailure": "省略可能なブール値です。true の場合、コマンド ラインで --output-on-failure を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.output.properties.quiet": "省略可能なブール値です。true の場合、コマンド ラインで --quiet を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.output.properties.outputLogFile": "ログ ファイルへのパスを指定する、省略可能な文字列です。コマンド ラインで --output-log を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.output.properties.labelSummary": "省略可能なブール値です。false の場合、コマンド ラインで --no-label-summary を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.output.properties.subprojectSummary": "省略可能なブール値です。false の場合、コマンド ラインで --no-subproject-summary を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.output.properties.maxPassedTestOutputSize": "成功したテストの最大出力をバイト単位で指定する、省略可能な整数です。コマンド ラインで --test-output-size-passed を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.output.properties.maxFailedTestOutputSize": "失敗したテストの最大出力をバイト単位で指定する、省略可能な整数です。コマンド ラインで --test-output-size-failed を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.output.properties.maxTestNameWidth": "出力するテスト名の最大幅を指定する、省略可能な整数です。コマンド ラインで --max-width を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter": "実行するテストをフィルター処理する方法を指定する、省略可能なオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.include": "含めるテストを指定する、省略可能なオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.include.properties.name": "テスト名の正規表現を指定する、省略可能な文字列です。コマンド ラインで --tests-regex を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.include.properties.label": "テスト ラベルの正規表現を指定する、省略可能な文字列です。コマンド ラインで --label-regex を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.include.properties.index.anyOf.0": "テスト インデックスによって含めるテストを指定する、省略可能なオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.include.properties.index.anyOf.0.properties.start": "テストを開始する位置のテスト インデックスを指定する、省略可能な整数です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.include.properties.index.anyOf.0.properties.end": "テストを停止する位置のテスト インデックスを指定する、省略可能な整数です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.include.properties.index.anyOf.0.properties.stride": "インクリメントを指定する、省略可能な整数です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.include.properties.index.anyOf.0.properties.specificTests": "実行する特定のテスト インデックスを指定する、整数の配列です (省略可能)。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.include.properties.index.anyOf.0.properties.specificTests.items": "実行するテストをインデックスで指定する整数です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.include.properties.index.anyOf.1": "--tests-information のコマンド ライン構文を使用してファイルを指定する、省略可能な文字列です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.include.properties.useUnion": "省略可能なブール値です。コマンド ラインで --union を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.exclude": "除外するテストを指定する、省略可能なオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.exclude.properties.name": "テスト名の正規表現を指定する、省略可能な文字列です。コマンド ラインで --exclude-regex を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.exclude.properties.label": "テスト ラベルの正規表現を指定する、省略可能な文字列です。コマンド ラインで --label-exclude を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.exclude.properties.fixtures": "テストの追加から除外するフィクスチャを指定する、省略可能なオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.exclude.properties.fixtures.properties.any": "あらゆるテストの追加から除外するテキスト フィクスチャの正規表現を指定する、省略可能な文字列です。コマンド ラインで --fixture-exclude-any を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.exclude.properties.fixtures.properties.setup": "セットアップ テストの追加から除外するテキスト フィクスチャの正規表現を指定する、省略可能な文字列です。コマンド ラインで --fixture-exclude-setup を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.filter.properties.exclude.properties.fixtures.properties.cleanup": "クリーンアップ テストの追加から除外するテキスト フィクスチャの正規表現を指定する、省略可能な文字列です。コマンド ラインで --fixture-exclude-cleanup を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution": "テストの実行のオプションを指定する、省略可能なオブジェクトです。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution.properties.stopOnFailure": "省略可能なブール値です。true の場合、コマンド ラインで --stop-on-failure を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution.properties.enableFailover": "省略可能なブール値です。true の場合、コマンド ラインで -F を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution.properties.jobs": "省略可能な整数です。コマンド ラインで --parallel を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution.properties.resourceSpecFile": "省略可能な文字列です。コマンド ラインで --resource-spec-file を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution.properties.testLoad": "省略可能な整数です。コマンド ラインで --test-load を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution.properties.showOnly": "省略可能な文字列です。コマンド ラインで --show-only を渡すのと同等です。値は \"human\" または \"json-v1\" でなければなりません。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution.properties.repeat": "テストを繰り返す方法を指定する、省略可能なオブジェクトです。コマンド ラインで --repeat を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution.properties.repeat.properties.mode": "必須の文字列です。次のいずれかの値である必要があります: \"until-fail\"、\"until-pass\"、または \"after-timeout\"。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution.properties.repeat.properties.count": "必須の整数です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution.properties.interactiveDebugging": "省略可能なブール値です。true の場合、コマンド ラインで --interactive-debug-mode 1 を渡すのと同等です。false の場合、コマンド ラインで --interactive-debug-mode 0 を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution.properties.scheduleRandom": "省略可能なブール値です。true の場合、コマンド ラインで --schedule-random を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution.properties.timeout": "省略可能な整数です。コマンド ラインで --timeout を渡すのと同等です。",
	"schemas/CMakePresets-schema.json.properties.testPresets.items.properties.execution.properties.noTestsAction": "テストが見つからない場合の動作を指定する、省略可能な文字列です。次のいずれかの値でなければなりません。\"default\" (コマンド ラインで何も値を渡さないのと同等)、\"error\" (コマンド ラインで --no-tests=error を渡すのと同等)、または \"ignore\" (コマンド ラインで --no-tests-ignore を渡すのと同等)。",
	"schemas/CMakePresets-schema.json.properties.vendor": "ベンダー固有の情報を含むオプションのマップです。このフィールドが存在する場合、CMake では、これがマップであることを確認する場合を除いて、その内容が解釈されることはありません。しかし、キーは、ベンダー固有のドメイン名の後に、/ 区切りのパスを続けたものにする必要があります。たとえば、Example IDE 1.0 の場合は example.com/ExampleIDE/1.0 のようにします。各フィールドの値にはベンダーが必要とする任意のものを使用できますが、通常はマップです。"
}
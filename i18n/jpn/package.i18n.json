/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"cmake-tools.command.cmake.openCMakePresets.title": "CMakePresets.json を開いてください",
	"cmake-tools.command.cmake.addConfigurePreset.title": "構成の事前設定を追加してください",
	"cmake-tools.command.cmake.addBuildPreset.title": "ビルドの事前設定を追加してください",
	"cmake-tools.command.cmake.addTestPreset.title": "テストの事前設定を追加してください",
	"cmake-tools.command.cmake.selectConfigurePreset.title": "構成の事前設定を選択してください",
	"cmake-tools.command.cmake.selectBuildPreset.title": "ビルドの事前設定を選択してください",
	"cmake-tools.command.cmake.selectTestPreset.title": "テストの事前設定を選択してください",
	"cmake-tools.command.cmake.viewLog.title": "CMake Tools ログ ファイルを開く",
	"cmake-tools.command.cmake.logDiagnostics.title": "診断のログ記録",
	"cmake-tools.command.cmake.editKits.title": "ユーザー ローカル CMake キットの編集",
	"cmake-tools.command.cmake.scanForKits.title": "キットのスキャン",
	"cmake-tools.command.cmake.scanForCompilers.title": "コンパイラのスキャン",
	"cmake-tools.command.cmake.selectKit.title": "キットの選択",
	"cmake-tools.command.cmake.setVariant.title": "バリアントの選択",
	"cmake-tools.command.cmake.setVariantAll.title": "すべてのプロジェクトのバリエーションの選択",
	"cmake-tools.command.cmake.configure.title": "構成",
	"cmake-tools.command.cmake.configureWithDebugger.title": "CMake デバッガーを使用して構成する",
	"cmake-tools.command.cmake.configureAll.title": "すべてのプロジェクトの構成",
	"cmake-tools.command.cmake.configureAllWithDebugger.title": "CMake デバッガーを使用してすべてのプロジェクトを構成する",
	"cmake-tools.command.cmake.showConfigureCommand.title": "構成コマンドの表示",
	"cmake-tools.command.cmake.build.title": "ビルド",
	"cmake-tools.command.cmake.buildAll.title": "すべてのプロジェクトのビルド",
	"cmake-tools.command.cmake.showBuildCommand.title": "ビルド コマンドの表示",
	"cmake-tools.command.cmake.buildNamedTarget.title": "(内部) 名前でターゲットをビルドする",
	"cmake-tools.command.cmake.compileFile.title": "アクティブ ファイルのコンパイル",
	"cmake-tools.command.cmake.outline.compileFile.title": "ファイルのコンパイル",
	"cmake-tools.command.cmake.install.title": "インストール",
	"cmake-tools.command.cmake.installAll.title": "すべてのプロジェクトのインストール",
	"cmake-tools.command.cmake.buildWithTarget.title": "ターゲットのビルド",
	"cmake-tools.command.cmake.setDefaultTarget.title": "ビルド ターゲットの設定",
	"cmake-tools.command.cmake.cleanConfigure.title": "キャッシュの削除と再構成",
	"cmake-tools.command.cmake.cleanConfigureWithDebugger.title": "キャッシュを削除し、CMake デバッガーを使用して再構成する",
	"cmake-tools.command.cmake.cleanConfigureAll.title": "キャッシュの削除およびすべてのプロジェクトの再構成",
	"cmake-tools.command.cmake.cleanConfigureAllWithDebugger.title": "キャッシュを削除し、CMake デバッガーを使用してすべてのプロジェクトをクリーンして再構成する",
	"cmake-tools.command.cmake.editCacheUI.title": "CMake キャッシュ (UI) の編集",
	"cmake-tools.command.cmake.outline.cleanConfigure.title": "クリーンして再構成",
	"cmake-tools.command.cmake.outline.cleanConfigureWithDebugger.title": "CMake デバッガーを使用してクリーンして再構成する",
	"cmake-tools.command.cmake.outline.cleanConfigureAll.title": "すべてのプロジェクトをクリーンして再構成",
	"cmake-tools.command.cmake.outline.cleanConfigureAllWithDebugger.title": "CMake デバッガーを使用してすべてのプロジェクトをクリーンして再構成する",
	"cmake-tools.command.cmake.clean.title": "クリーンする",
	"cmake-tools.command.cmake.cleanAll.title": "すべてのプロジェクトをクリーンする",
	"cmake-tools.command.cmake.cleanRebuild.title": "クリーンしてリビルド",
	"cmake-tools.command.cmake.cleanRebuildAll.title": "すべてのプロジェクトをクリーンしてリビルド",
	"cmake-tools.command.cmake.ctest.title": "テストの実行",
	"cmake-tools.command.cmake.ctestAll.title": "すべてのプロジェクトのテスト実行",
	"cmake-tools.command.cmake.revealTestExplorer.title": "テスト エクスプローラーの表示",
	"cmake-tools.command.cmake.refreshTests.title": "テストの更新",
	"cmake-tools.command.cmake.refreshTestsAll.title": "すべてのプロジェクトのテストを更新",
	"cmake-tools.command.cmake.editCache.title": "CMake キャッシュの編集",
	"cmake-tools.command.cmake.quickStart.title": "クイック スタート",
	"cmake-tools.command.cmake.debugTarget.title": "デバッグ",
	"cmake-tools.command.cmake.debugTargetAll.title": "すべてのプロジェクトのデバッグ",
	"cmake-tools.command.cmake.launchTarget.title": "デバッグなしで実行",
	"cmake-tools.command.cmake.launchTargetAll.title": "デバッグなしですべてのプロジェクトを実行",
	"cmake-tools.command.cmake.selectLaunchTarget.title": "デバッグ ターゲットの設定",
	"cmake-tools.command.cmake.stop.title": "ビルドをキャンセル",
	"cmake-tools.command.cmake.stopAll.title": "すべてのプロジェクトのビルドをキャンセル",
	"cmake-tools.command.cmake.resetState.title": "CMake Tools 拡張機能の状態をリセットする (トラブルシューティング用)",
	"cmake-tools.command.cmake.selectActiveFolder.title": "アクティブなフォルダーの選択",
	"cmake-tools.command.cmake.outline.runUtilityTarget.title": "ユーティリティの実行",
	"cmake-tools.command.cmake.outline.debugTarget.title": "デバッグ",
	"cmake-tools.command.cmake.outline.launchTarget.title": "ターミナルで実行する",
	"cmake-tools.command.cmake.outline.setDefaultTarget.title": "ビルド ターゲットとして設定",
	"cmake-tools.command.cmake.outline.setLaunchTarget.title": "起動またはデバッグ ターゲットとして設定",
	"cmake-tools.command.cmake.outline.revealInCMakeLists.title": "CMakeLists.txt を開く",
	"cmake-tools.command.cmake.folders.setActiveFolder.title": "アクティブなフォルダーの設定",
	"cmake-tools.configuration.title": "CMake Tools の構成",
	"cmake-tools.configuration.cmake.cmakePath.description": "使用する CMake 実行可能ファイルの名前またはパスです。",
	"cmake-tools.configuration.cmake.buildDirectory.description": "CMake のビルド ファイルが格納されるディレクトリです。",
	"cmake-tools.configuration.cmake.installPrefix.description": "CMake でインストールされるファイルが格納されるディレクトリ。",
	"cmake-tools.configuration.cmake.sourceDirectory.description": "CMakeLists.txt ルート/ディレクトリへのパスまたはパスの配列。",
	"cmake-tools.configuration.cmake.saveBeforeBuild.description": "ビルドの前に、開いているファイルを保存します。",
	"cmake-tools.configuration.cmake.buildBeforeRun.description": "実行する前にターゲットをビルドします。",
	"cmake-tools.configuration.cmake.clearOutputBeforeBuild.description": "ビルドの前に毎回ビルド出力をクリアします。",
	"cmake-tools.configuration.cmake.configureSettings.description": "コマンド ラインで設定する CMake 変数です。",
	"cmake-tools.configuration.cmake.cacheInit.string.description": "キャッシュを初期化する CMake ファイルへのパスです。",
	"cmake-tools.configuration.cmake.cacheInit.array.description": "キャッシュ初期化子ファイルの一覧です。",
	"cmake-tools.configuration.cmake.cacheInit.array.string.description": "キャッシュを初期化する CMake ファイルです。",
	"cmake-tools.configuration.cmake.preferredGenerators.description": "構成時に使用する優先 CMake ジェネレーターです (一覧にある順序で試行されます)。",
	"cmake-tools.configuration.cmake.generator.description": "使用する CMake ジェネレーターです。",
	"cmake-tools.configuration.cmake.toolset.description": "構成時に使用する CMake ツールセットです。",
	"cmake-tools.configuration.cmake.platform.description": "構成時に使用する CMake プラットフォームです。",
	"cmake-tools.configuration.cmake.configureArgs.description": "構成時に CMake に渡す追加の引数です。",
	"cmake-tools.configuration.cmake.buildArgs.description": "ビルド時に CMake に渡す追加の引数です。",
	"cmake-tools.configuration.cmake.buildToolArgs.description": "ビルド時に基になるビルド ツールに渡す追加の引数です。",
	"cmake-tools.configuration.cmake.parallelJobs.description": "並列ビルド ジョブの数。CPU 数を自動的に検出するには、0 を使用します。これを 1 に設定すると、基になるビルド コマンドから並列処理フラグ (-j) が省略されます。このコマンドは、ビルドの並列処理に対してジェネレーターに依存する影響を与えます。",
	"cmake-tools.configuration.cmake.ctestPath.description": "CTest 実行可能ファイルへのパス。null の場合、cmake.cmakePath から推論されます (null のままにすることをお勧めします)。",
	"cmake-tools.configuration.cmake.ctest.parallelJobs.description": "並列テスト ジョブの数。cmake.parallelJobs の値を使用するには、0 を指定します。",
	"cmake-tools.configuration.cmake.parseBuildDiagnostics.description": "コンパイラ出力の警告とエラーを解析します。",
	"cmake-tools.configuration.cmake.enabledOutputParsers.description": "使用する出力パーサー。サポートされるパーサーは、GNULD スタイルのリンカー出力の場合は `cmake`、`gcc`、`gnuld`、Microsoft Visual C++ の場合は `msvc`、--no_wrap_diagnostics --brief_diagnostics を指定した Green Hills Compiler の場合は `ghs`、Wind River Diab Compiler の場合は `diab` です。",
	"cmake-tools.configuration.cmake.debugConfig.description": "ターゲットのデバッグ時に使用するデバッグ構成です。",
	"cmake-tools.configuration.cmake.debugConfig.symbolSearchPath.description": "Visual Studio デバッガーのシンボル検索パスです。",
	"cmake-tools.configuration.cmake.debugConfig.additionalSOLibSearchPath.description": ".so ファイルを検索する GDB または LLDB のパスです。",
	"cmake-tools.configuration.cmake.debugConfig.externalConsole.description": "プログラムの外部コンソールを起動します。",
	"cmake-tools.configuration.cmake.debugConfig.console.description": "デバッグ ターゲットを起動する場所です。定義されていない場合、既定は `internalConsole` です。",
	"cmake-tools.configuration.cmake.debugConfig.console.internalConsole.description": "VS Code デバッグ コンソールに出力します。これはコンソール入力の読み取りをサポートしていません (例: `std::cin` または `scanf`)。",
	"cmake-tools.configuration.cmake.debugConfig.console.integratedTerminal.description": "VS Code の統合ターミナルです。",
	"cmake-tools.configuration.cmake.debugConfig.console.externalTerminal.description": "コンソール アプリケーションは、外部ターミナル ウィンドウで起動されます。このウィンドウは再起動のシナリオで再利用され、アプリケーションが終了しても自動的に消えません。",
	"cmake-tools.configuration.cmake.debugConfig.console.newExternalWindow.description": "コンソール アプリケーションは、アプリケーションの停止時に終了する独自の外部コンソール ウィンドウで起動されます。コンソール以外のアプリケーションはターミナルなしで実行され、stdout および stderr は無視されます。",
	"cmake-tools.configuration.cmake.debugConfig.logging.description": "どの種類のメッセージをコンソールに記録する必要があるかを指定します。",
	"cmake-tools.configuration.cmake.debugConfig.visualizerFile.description": "デバッグ時に使用する .natvis ファイルです。",
	"cmake-tools.configuration.cmake.debugConfig.args.description": "プログラムのコマンド ラインに渡す引数です。",
	"cmake-tools.configuration.cmake.debugConfig.cwd.description": "プログラムの作業ディレクトリを設定します。",
	"cmake-tools.configuration.cmake.debugConfig.environment.name.description": "環境変数の名前です。",
	"cmake-tools.configuration.cmake.debugConfig.environment.value.description": "環境変数の値です。",
	"cmake-tools.configuration.cmake.debugConfig.miDebuggerPath.description": "gdb または lldb デバッガーへのパスです。",
	"cmake-tools.configuration.cmake.debugConfig.stopAtEntry.description": "ターゲットのエントリ ポイントで停止します。",
	"cmake-tools.configuration.cmake.debugConfig.setupCommands.description": "gdb または lldb を設定するためのコマンドです。",
	"cmake-tools.configuration.cmake.debugConfig.setupCommands.text.description": "実行するコマンドです。",
	"cmake-tools.configuration.cmake.debugConfig.setupCommands.description.description": "コマンドの説明です。",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.description": "ビルドの種類です。",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.debug.long": "最適化の無効化 - デバッグ情報を含めます。",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.release.long": "速度を最適化 - デバッグ情報を除外します。",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.minsize.long": "最小のバイナリ サイズ用に最適化 - デバッグ情報を除外します。",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.reldeb.long": "速度を最適化 - デバッグ情報を含めます。",
	"cmake-tools.configuration.cmake.ctestArgs.description": "CTest に渡す引数です。",
	"cmake-tools.configuration.cmake.ctestDefaultArgs.description": "CTest に既定で渡される引数。",
	"cmake-tools.configuration.cmake.environment.description": "CMake コマンドの実行時に設定する環境変数です。",
	"cmake-tools.configuration.cmake.environment.additionalProperties.description": "環境変数の値です。",
	"cmake-tools.configuration.cmake.configureEnvironment.description": "構成中に CMake に渡す環境変数です。",
	"cmake-tools.configuration.cmake.buildEnvironment.description": "ビルド中に CMake に渡す環境変数です。",
	"cmake-tools.configuration.cmake.testEnvironment.description": "CTest に渡す環境変数です。",
	"cmake-tools.configuration.cmake.mingwSearchDirs.description": "MinGW がインストールされる可能性のあるディレクトリです。",
	"cmake-tools.configuration.cmake.additionalCompilerSearchDirs.description": "コンパイラを検索する追加のディレクトリ。",
	"cmake-tools.configuration.cmake.searchDirs.items.description": "ディレクトリへのパスです。",
	"cmake-tools.configuration.cmake.emscriptenSearchDirs.description": "Emscripten がインストールされる可能性のあるディレクトリです。",
	"cmake-tools.configuration.cmake.mergedCompileCommands.description": "cmake.buildDirectory で見つかったすべての compile_commands.json を再帰的に収集してマージします。",
	"cmake-tools.configuration.cmake.copyCompileCommands.description": "構成が正常に完了したら、compile_commands.json をこの場所にコピーします。",
	"cmake-tools.configuration.cmake.configureOnOpen.description": "CMake プロジェクト ディレクトリを開いたときに自動的に構成します。",
	"cmake-tools.configuration.cmake.configureOnEdit.description": "cmake.sourceDirectory または CMakeLists.txt のコンテンツの保存時に、CMake プロジェクトのディレクトリを自動的に構成します。",
	"cmake-tools.configuration.cmake.setBuildTypeOnMultiConfig.description": "マルチ構成ジェネレーターでも CMAKE_BUILD_TYPE を設定します",
	"cmake-tools.configuration.cmake.skipConfigureIfCachePresent.description": "キャッシュが存在する場合は、構成プロセスをスキップします。",
	"cmake-tools.configuration.cmake.cmakeCommunicationMode": "拡張機能と CMake の間の通信に使用されるプロトコル",
	"cmake-tools.configuration.cmake.showSystemKits.description": "キットの選択にシステム キットを含める",
	"cmake-tools.configuration.cmake.ignoreKitEnv.description": "CMake コマンドの実行時には、キットの環境変数を使用しないでください。",
	"cmake-tools.configuration.cmake.buildTask.description": "内部プロセスではなく tasks.json を使用してビルドします。",
	"cmake-tools.configuration.cmake.outputLogEncoding.description": "外部コマンドからの出力のエンコードです (例: cmake -- build)。",
	"cmake-tools.configuration.cmake.enableTraceLogging.description": "ファイルおよびコンソールへのトレース ログを有効にします (非常に煩雑になります)。",
	"cmake-tools.configuration.cmake.autoSelectActiveFolder.description": "アクティブなフォルダーを自動的に選択します。",
	"cmake-tools.configuration.cmake.touchbar.visibility.description": "拡張機能によってボタンが MacBook の Touch Bar にどのように表示されるかを構成します",
	"cmake-tools.configuration.cmake.touchbar.visibility.default.description": "サポートされているシステムで Touch Bar ボタンを表示します。",
	"cmake-tools.configuration.cmake.touchbar.visibility.hidden.description": "Touch Bar ボタンを表示しません。",
	"cmake-tools.configuration.cmake.statusbar.visibility.description": "拡張機能によってボタンがステータス バーにどのように表示されるかを構成します。",
	"cmake-tools.configuration.cmake.statusbar.visibility.markdownDescription": "拡張機能がステータス バーにボタンを表示する方法を構成します。`#cmake.useProjectStatusView#` が `false` に設定されている場合にのみ適用されます。",
	"cmake-tools.configuration.cmake.statusbar.advanced.description": "個々のステータス バー ボタンの設定を構成します。これらの設定は、より一般的な 'cmake.statusbar.visibility' の設定を上書きします。",
	"cmake-tools.configuration.cmake.statusbar.advanced.markdownDescription": "個々のステータス バー ボタンの設定を構成します。これらの設定により、より一般的な `#cmake.statusbar.visibility` 設定が上書きされます。`#cmake.useProjectStatusView#` が `false` に設定されている場合にのみ適用されます。",
	"cmake-tools.configuration.cmake.statusbar.advanced.visibility.description": "拡張機能によってこのボタンがステータス バーにどのように表示されるかを構成します。",
	"cmake-tools.configuration.cmake.statusbar.advanced.ctest.color.description": "テスト結果に応じてこのボタンの色を変更することを有効にします。",
	"cmake-tools.configuration.cmake.statusbar.advanced.length.description": "'compact' モードで表示されるテキストの最大長を構成します。",
	"cmake-tools.configuration.cmake.useProjectStatusView.description": "CMake サイド パネルで [プロジェクトの状態] ビューを有効にし、ステータス バーのボタンを非表示にします。",
	"cmake-tools.configuration.views.cmake.folders.description": "フォルダー",
	"cmake-tools.configuration.views.cmake.projectStatus.description": "プロジェクトの状態",
	"cmake-tools.configuration.views.cmake.outline.description": "プロジェクトの概要",
	"cmake-tools.configuration.cmake.additionalKits.description": "カスタム キット ファイルへのパスの配列",
	"cmake-tools.configuration.cmake.revealLog.description": "ログを表示し、出力チャネルにフォーカスするための設定を構成します。",
	"cmake-tools.configuration.cmake.revealLog.focus.description": "ログが表示され、出力チャネルがカーソル フォーカスを取得します。",
	"cmake-tools.configuration.cmake.revealLog.always.description": "ログが表示されますが、出力チャネルはカーソル フォーカスを取得しません。",
	"cmake-tools.configuration.cmake.revealLog.never.description": "ログは表示もされず、フォーカスも取得しません。",
	"cmake-tools.configuration.cmake.exportCompileCommandsFile.description": "compile_commands.json のエクスポートを有効にします。",
	"cmake-tools.configuration.cmake.useCMakePresets.description": "CMakePresets.json を使用して、ドライブ CMake の構成、ビルド、テストを構成します。CMakePresets.json を使用している場合、キット、バリエーション、また settings.json の設定の一部は無視されます。",
	"cmake-tools.configuration.cmake.allowCommentsInPresetsFile.description": "CMakePresets.json でコメントなどの JSON 拡張機能の使用を許可します。標準以外の JSON を使用した場合、他の IDE やコマンド ラインで CMakePresets.json ファイルが無効とみなされる可能性があることに注意してください。",
	"cmake-tools.configuration.cmake.allowUnsupportedPresetsVersions.description": "CMake Tools 拡張機能が現在サポートしていないバージョンの機能を使用しているプリセット ファイルの使用を有効にします。不明なプロパティとマクロは無視されます。",
	"cmake-tools.configuration.cmake.ignoreCMakeListsMissing.description": "`true` の場合、拡張機能は、ワークスペース内で見つかったがルート フォルダーにない場合に、構成用の CMakeLists.txt ファイルを選択するようにユーザーに求めなくなります。",
	"cmake-tools.configuration.cmake.launchBehavior.description": "ターゲットを起動するときの起動ターミナルの動作を制御します。",
	"cmake-tools.configuration.cmake.automaticReconfigure.description": "キットまたは構成プリセットが変更されたときに、CMake プロジェクト ディレクトリを自動的に構成します。",
	"cmake-tools.debugger.pipeName.description": "デバッガー コミュニケーションに使用するパイプ (Windows 上) またはドメイン ソケット (Unix 上) の名前。",
	"cmake-tools.debugger.clean.description": "構成する前にクリーンアップします。",
	"cmake-tools.debugger.configureAll.description": "すべてのプロジェクトに対して構成します。",
	"cmake-tools.debugger.dapLog.description": "デバッガー DAP ログを記録する場所。",
	"cmake-tools.taskDefinitions.properties.label.description": "タスクの名前",
	"cmake-tools.taskDefinitions.properties.command.description": "CMake コマンド",
	"cmake-tools.taskDefinitions.properties.targets.description": "CMake ビルド ターゲット",
	"cmake-tools.taskDefinitions.properties.preset.description": "CMake プリセット名。これは CMake コマンドに基づく構成、ビルド、またはテスト プリセットです",
	"cmake-tools.taskDefinitions.properties.options.description": "追加のコマンド オプション",
	"cmake-tools.taskDefinitions.properties.options.cwd.description": "実行されるプログラムまたはスクリプトの現在の作業ディレクトリ。省略すると、Code の現在のワークスペースのルートが使用されます。",
	"cmake-tools.taskDefinitions.properties.options.environment.markdownDescription": "\"name\": \"value\" の形式での環境変数。",
	"cmake-tools.taskDefinitions.properties.details.description": "タスクのその他の詳細",
	"cmake-tools.configuration.cmake.launchBehavior.reuseTerminal.markdownDescriptions": "起動ターミナル インスタンスが再利用され、ターミナルがアイドル状態になるとすぐにターゲットが起動します。",
	"cmake-tools.configuration.cmake.launchBehavior.breakAndReuseTerminal.markdownDescriptions": "起動ターミナル インスタンスが再利用され、ターゲットを起動する前にアクティブなフォアグラウンド プロセスを終了するために `break` コマンドが送信されます。",
	"cmake-tools.configuration.cmake.launchBehavior.newTerminal.markdownDescriptions": "新しいターミナル インスタンスが作成され、その中でターゲットが起動されます。既存のターミナルは自動的にはクリーンアップされません。",
	"cmake-tools.configuration.cmake.loadCompileCommands.description": "拡張子が単一ファイルのコンパイルを有効にするために compile_commands.json を読み取るかどうかを制御します。",
	"cmake-tools.command.cmake.projectStatus.update.title": "プロジェクトの状態を最新の情報に更新",
	"cmake-tools.command.cmake.projectStatus.selectTestPreset.title": "テストの対象の設定",
	"cmake-tools.debugger.label": "CMake デバッガー"
}
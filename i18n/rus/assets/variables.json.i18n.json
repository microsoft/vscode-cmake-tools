/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"assets/variables.json.ANDROID": "Задайте значение 1, если целевой системой (CMAKE_SYSTEM_NAME) является Android.",
	"assets/variables.json.APPLE": "Задайте значение True, если целевой системой является платформа Apple (macOS, iOS, tvOS, visionOS или watchOS).",
	"assets/variables.json.BORLAND": "Значение true, если используется компилятор Borland.",
	"assets/variables.json.BSD": "Настройте строковое значение, если целевой системой является BSD. Допустимо одно из следующих значений: DragonFlyBSD, FreeBSD, OpenBSD или NetBSD.",
	"assets/variables.json.BUILD_SHARED_LIBS": "Укажите add_library, чтобы по умолчанию использовались ОБЩИЕ библиотеки вместо СТАТИЧЕСКИХ библиотек, если они вызываются без явного типа библиотеки.",
	"assets/variables.json.CACHE": "Оператор для чтения переменных кэша.",
	"assets/variables.json.CMAKE_ABSOLUTE_DESTINATION_FILES": "Список файлов, которые были установлены с помощью абсолютного конечного пути ABSOLUTE DESTINATION.",
	"assets/variables.json.CMAKE_ADD_CUSTOM_COMMAND_DEPENDS_EXPLICIT_ONLY": "Следует ли включить параметр DEPENDS_EXPLICIT_ONLY по умолчанию в add_custom_command.",
	"assets/variables.json.CMAKE_ADSP_ROOT": "При :ref:`Cross Compiling for ADSP SHARC/Blackfin` эта переменная содержит абсолютный путь к последней установке CCES или VDSP++. Ожидается, что каталог будет содержать компиляторы cc21k.exe и ccblkfn.exe. Это будет установлено автоматически, если будет найдена установка CCES или VDSP++ по умолчанию.",
	"assets/variables.json.CMAKE_AIX_EXPORT_ALL_SYMBOLS": "Значение по умолчанию для целевого свойства AIX_EXPORT_ALL_SYMBOLS. Эта переменная используется для инициализации указанного свойства для каждого целевого объекта при его создании.",
	"assets/variables.json.CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS": "Значение по умолчанию для целевого свойства ANDROID_ANT_ADDITIONAL_OPTIONS. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_API": "При перекрестной компиляции для Android с помощью NVIDIA Nsight Tegra Visual Studio Edition эту переменную можно задать, чтобы указать значение по умолчанию для целевого свойства ANDROID_API. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_API_MIN": "Значение по умолчанию для целевого свойства ANDROID_API_MIN. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_ARCH": "При перекрестной компиляции для Android с помощью NVIDIA Nsight Tegra Visual Studio Edition эту переменную можно задать, чтобы указать значение по умолчанию для целевого свойства ANDROID_ARCH. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_ARCH_ABI": "При перекрестной компиляции для Android эта переменная указывает целевую архитектуру и используемый ABI. Допустимые значения:",
	"assets/variables.json.CMAKE_ANDROID_ARM_MODE": "Когда выполняется перекрестная компиляция для Android и для CMAKE_ANDROID_ARCH_ABI задана одна из архитектур armeabi, установите для CMAKE_ANDROID_ARM_MODE значение ON, чтобы ориентироваться на 32-разрядные процессоры ARM (-marm). В противном случае по умолчанию используется ориентация на 16-разрядные процессоры Thumb (-mthumb).",
	"assets/variables.json.CMAKE_ANDROID_ARM_NEON": "Когда выполняется перекрестная компиляция для Android и для CMAKE_ANDROID_ARCH_ABI задано armeabi-v7a, установите для CMAKE_ANDROID_ARM_NEON значение ON, чтобы ориентироваться на устройства ARM NEON.",
	"assets/variables.json.CMAKE_ANDROID_ASSETS_DIRECTORIES": "Значение по умолчанию для целевого свойства ANDROID_ASSETS_DIRECTORIES. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_EXCEPTIONS": "При перекрестной компиляции для Android с помощью NDK эту переменную можно задать, чтобы указать, включены ли исключения.",
	"assets/variables.json.CMAKE_ANDROID_GUI": "Значение по умолчанию для целевого свойства ANDROID_GUI исполняемых файлов. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_JAR_DEPENDENCIES": "Значение по умолчанию для целевого свойства ANDROID_JAR_DEPENDENCIES. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_JAR_DIRECTORIES": "Значение по умолчанию для целевого свойства ANDROID_JAR_DIRECTORIES. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_JAVA_SOURCE_DIR": "Значение по умолчанию для целевого свойства ANDROID_JAVA_SOURCE_DIR. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_NATIVE_LIB_DEPENDENCIES": "Значение по умолчанию для целевого свойства ANDROID_NATIVE_LIB_DEPENDENCIES. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_NATIVE_LIB_DIRECTORIES": "Значение по умолчанию для целевого свойства ANDROID_NATIVE_LIB_DIRECTORIES. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_NDK": "При перекрестной компиляции для Android с помощью NDK эта переменная содержит абсолютный путь к корневому каталогу NDK. Этот каталог должен содержать подкаталог platforms с каталогами android-<api>.",
	"assets/variables.json.CMAKE_ANDROID_NDK_DEPRECATED_HEADERS": "При перекрестной компиляции для Android с помощью NDK эту переменную можно задать, чтобы указать, следует ли использовать нерекомендуемые заголовки для отдельных уровней API вместо унифицированных заголовков.",
	"assets/variables.json.CMAKE_ANDROID_NDK_TOOLCHAIN_HOST_TAG": "При перекрестной компиляции для Android с помощью NDK эта переменная предоставляет \"тег узла\" NDK, который используется для формирования пути к предварительно созданным цепочкам инструментов, выполняемым на узле.",
	"assets/variables.json.CMAKE_ANDROID_NDK_TOOLCHAIN_VERSION": "При перекрестной компиляции для Android с помощью NDK эту переменную можно задать, чтобы указать версию цепочки инструментов, используемой в качестве компилятора.",
	"assets/variables.json.CMAKE_ANDROID_NDK_VERSION": "При перекрестной компиляции для Android с помощью NDK и с использованием Android NDK версии 11 или более поздней версии эта переменная предоставляется CMake для передачи номера версии NDK.",
	"assets/variables.json.CMAKE_ANDROID_PROCESS_MAX": "Значение по умолчанию для целевого свойства ANDROID_PROCESS_MAX. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_PROGUARD": "Значение по умолчанию для целевого свойства ANDROID_PROGUARD. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_PROGUARD_CONFIG_PATH": "Значение по умолчанию для целевого свойства ANDROID_PROGUARD_CONFIG_PATH. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_RTTI": "При перекрестной компиляции для Android с помощью NDK эту переменную можно задать, чтобы указать, включен ли RTTI.",
	"assets/variables.json.CMAKE_ANDROID_SECURE_PROPS_PATH": "Значение по умолчанию для целевого свойства ANDROID_SECURE_PROPS_PATH. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_SKIP_ANT_STEP": "Значение по умолчанию для целевого свойства ANDROID_SKIP_ANT_STEP. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_ANDROID_STANDALONE_TOOLCHAIN": "При перекрестной компиляции для Android с помощью автономной цепочки инструментов эта переменная содержит абсолютный путь к корневому каталогу цепочки инструментов. Указанный каталог должен содержать подкаталог sysroot.",
	"assets/variables.json.CMAKE_ANDROID_STL_TYPE": "При перекрестной компиляции для Android с помощью NVIDIA Nsight Tegra Visual Studio Edition эту переменную можно задать, чтобы указать значение по умолчанию для целевого свойства ANDROID_STL_TYPE. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_APPBUNDLE_PATH": "Разделенный точками с запятой список каталогов, который указывает путь поиска для пакетов приложений macOS, используемых командами find_program и find_package.",
	"assets/variables.json.CMAKE_APPLE_SILICON_PROCESSOR": "На узлах Apple Silicon под управлением macOS установите эту переменную, чтобы сообщить CMake, какую архитектуру следует использовать для CMAKE_HOST_SYSTEM_PROCESSOR. Допустимые значения: \"arm64\" и \"x86_64\".",
	"assets/variables.json.CMAKE_AR": "Имя средства архивации для статических библиотек.",
	"assets/variables.json.CMAKE_ARCHIVE_OUTPUT_DIRECTORY": "Указывает, куда поместить конечные файлы ARCHIVE при сборке.",
	"assets/variables.json.CMAKE_ARCHIVE_OUTPUT_DIRECTORY_CONFIG": "Указывает, куда поместить конечные файлы ARCHIVE при сборке для определенной конфигурации.",
	"assets/variables.json.CMAKE_ARGC": "Число аргументов командной строки, переданных в CMake в режиме скрипта.",
	"assets/variables.json.CMAKE_ARGV0": "Аргумент командной строки, переданный в CMake в режиме скрипта.",
	"assets/variables.json.CMAKE_AUTOGEN_BETTER_GRAPH_MULTI_CONFIG": "Эта переменная используется для инициализации свойства AUTOGEN_BETTER_GRAPH_MULTI_CONFIG для всех целей по мере их создания. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_AUTOGEN_COMMAND_LINE_LENGTH_MAX": "Ограничение длины командной строки для целей autogen, например moc или uic, которое запускает использование файлов ответов в Windows вместо передачи всех аргументов в командную строку.",
	"assets/variables.json.CMAKE_AUTOGEN_ORIGIN_DEPENDS": "Переключатель для пересылки зависимостей исходных целевых объектов соответствующим целевым объектам <ORIGIN>_autogen.",
	"assets/variables.json.CMAKE_AUTOGEN_PARALLEL": "Число параллельных процессов moc или uic, запускаемых при использовании AUTOMOC и AUTOUIC.",
	"assets/variables.json.CMAKE_AUTOGEN_USE_SYSTEM_INCLUDE": "Эта переменная используется для инициализации свойства AUTOGEN_USE_SYSTEM_INCLUDE во всех целевых объектах при их создании. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_AUTOGEN_VERBOSE": "Задает уровень детализации AUTOMOC, AUTOUIC и AUTORCC. Положительное целое число или логическое значение true позволяет генераторам AUTO* выводить дополнительные сведения для обработки.",
	"assets/variables.json.CMAKE_AUTOMOC": "Указывает, следует ли автоматически обрабатывать moc для целевых объектов Qt.",
	"assets/variables.json.CMAKE_AUTOMOC_COMPILER_PREDEFINES": "Эта переменная используется для инициализации свойства AUTOMOC_COMPILER_PREDEFINES во всех целевых объектах. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_AUTOMOC_DEPEND_FILTERS": "Фильтрация определений, используемых CMAKE_AUTOMOC для извлечения имен файлов из исходного кода в виде дополнительных зависимостей для файла moc.",
	"assets/variables.json.CMAKE_AUTOMOC_EXECUTABLE": "Эта переменная используется для инициализации свойства AUTOMOC_EXECUTABLE во всех целевых объектах. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_AUTOMOC_MACRO_NAMES": "Разделенный точками с запятой список имен макросов, используемых CMAKE_AUTOMOC для определения того, нужно ли обрабатывать файл C++ с помощью moc.",
	"assets/variables.json.CMAKE_AUTOMOC_MOC_OPTIONS": "Дополнительные параметры для moc при использовании CMAKE_AUTOMOC.",
	"assets/variables.json.CMAKE_AUTOMOC_PATH_PREFIX": "Указывает, следует ли создавать параметр префикса пути -p для moc в целевых объектах Qt, для которых включено свойство AUTOMOC.",
	"assets/variables.json.CMAKE_AUTOMOC_RELAXED_MODE": "Переключение между строгим и нестрогим режимом automoc.",
	"assets/variables.json.CMAKE_AUTORCC": "Указывает, следует ли автоматически обрабатывать rcc для целевых объектов Qt.",
	"assets/variables.json.CMAKE_AUTORCC_EXECUTABLE": "Эта переменная используется для инициализации свойства AUTORCC_EXECUTABLE во всех целевых объектах. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_AUTORCC_OPTIONS": "Дополнительные параметры для rcc при использовании CMAKE_AUTORCC.",
	"assets/variables.json.CMAKE_AUTOUIC": "Указывает, следует ли автоматически обрабатывать uic для целевых объектов Qt.",
	"assets/variables.json.CMAKE_AUTOUIC_EXECUTABLE": "Эта переменная используется для инициализации свойства AUTOUIC_EXECUTABLE во всех целевых объектах. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_AUTOUIC_OPTIONS": "Дополнительные параметры для uic при использовании CMAKE_AUTOUIC.",
	"assets/variables.json.CMAKE_AUTOUIC_SEARCH_PATHS": "Список путей поиска, используемый CMAKE_AUTOUIC для поиска включенных файлов UI.",
	"assets/variables.json.CMAKE_BACKWARDS_COMPATIBILITY": "Не рекомендуется. См. документацию по политике CMake CMP0001.",
	"assets/variables.json.CMAKE_BINARY_DIR": "Путь к верхнему уровню дерева сборки.",
	"assets/variables.json.CMAKE_BUILD_RPATH": "Разделенный точками с запятой список, указывающий записи пути времени выполнения (RPATH) для добавления в двоичные файлы, связанные в дереве сборки (для платформ, поддерживающих это). Данные записи не будут использоваться для двоичных файлов в дереве установки. См. также описание переменной CMAKE_INSTALL_RPATH.",
	"assets/variables.json.CMAKE_BUILD_RPATH_USE_ORIGIN": "Следует ли использовать относительные пути для RPATH сборки.",
	"assets/variables.json.CMAKE_BUILD_TOOL": "Эта переменная существует только для обеспечения обратной совместимости. Она содержит то же значение, что и CMAKE_MAKE_PROGRAM. Используйте эту переменную вместо данной.",
	"assets/variables.json.CMAKE_BUILD_TYPE": "Указывает тип сборки для генераторов с одной конфигурацией (например, генераторы Makefile или Ninja). Типичные значения: Debug, Release, RelWithDebInfo и MinSizeRel, но также могут быть определены настраиваемые типы сборки.",
	"assets/variables.json.CMAKE_BUILD_WITH_INSTALL_NAME_DIR": "Указывает, следует ли использовать INSTALL_NAME_DIR для целевых объектов в дереве сборки.",
	"assets/variables.json.CMAKE_BUILD_WITH_INSTALL_RPATH": "Используйте путь установки для RPATH.",
	"assets/variables.json.CMAKE_CACHEFILE_DIR": "Эта переменная используется внутри CMake, ее невозможно задать при первой настройке дерева сборки. Когда эта переменная задана, ее значение совпадает со значением переменной CMAKE_BINARY_DIR, которую и следует использовать вместо нее.",
	"assets/variables.json.CMAKE_CACHE_MAJOR_VERSION": "Основной номер версии CMake, используемый для создания файла CMakeCache.txt",
	"assets/variables.json.CMAKE_CACHE_MINOR_VERSION": "Дополнительный номер версии CMake, используемый для создания файла CMakeCache.txt",
	"assets/variables.json.CMAKE_CACHE_PATCH_VERSION": "Версия исправления CMake, используемая для создания файла CMakeCache.txt",
	"assets/variables.json.CMAKE_CFG_INTDIR": "Ссылка времени сборки на выходной подкаталог для конкретной конфигурации.",
	"assets/variables.json.CMAKE_CLANG_VFS_OVERLAY": "При перекрестной компиляции для Windows с использованием clang-cl эта переменная может содержать абсолютный путь, указывающий на файл YAML виртуальной файловой системы clang, который позволяет clang-cl разрешать имена заголовков Windows в файловой системе с учетом регистра.",
	"assets/variables.json.CMAKE_CL_64": "Не рекомендуется. Вместо этого используйте CMAKE_SIZEOF_VOID_P.",
	"assets/variables.json.CMAKE_CODEBLOCKS_COMPILER_ID": "Изменение идентификатора компилятора в созданных файлах проекта CodeBlocks.",
	"assets/variables.json.CMAKE_CODEBLOCKS_EXCLUDE_EXTERNAL_FILES": "Изменение способа для создания файлов проекта в генераторе CodeBlocks.",
	"assets/variables.json.CMAKE_CODELITE_USE_TARGETS": "Изменение способа для создания файлов проекта в генераторе CodeLite.",
	"assets/variables.json.CMAKE_COLOR_DIAGNOSTICS": "Включите диагностику цвета во всем.",
	"assets/variables.json.CMAKE_COLOR_MAKEFILE": "Включает вывод в цвете при использовании генераторов makefile.",
	"assets/variables.json.CMAKE_COMMAND": "Полный путь к исполняемому файлу cmake.",
	"assets/variables.json.CMAKE_COMPILER_2005": "Использование компилятора Visual Studio 2005 от Майкрософт",
	"assets/variables.json.CMAKE_COMPILER_IS_GNUCC": "Истина, если компилятор C является GNU.",
	"assets/variables.json.CMAKE_COMPILER_IS_GNUCXX": "Истина, если компилятор C++ (CXX) является GNU.",
	"assets/variables.json.CMAKE_COMPILER_IS_GNUG77": "Истина, если компилятор Fortran является GNU.",
	"assets/variables.json.CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY": "Выходной каталог для PDB-файлов отладочного символа Майкрософт, созданных компилятором при сборке исходных файлов.",
	"assets/variables.json.CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY_CONFIG": "Представляющий отдельную конфигурацию выходной каталог для PDB-файлов отладочного символа Майкрософт, созданных компилятором при сборке исходных файлов.",
	"assets/variables.json.CMAKE_COMPILE_WARNING_AS_ERROR": "Укажите, следует ли обрабатывать предупреждения при компиляции как ошибки.",
	"assets/variables.json.CMAKE_CONFIGURATION_TYPES": "Указывает доступные типы сборки (конфигурации) для генераторов с несколькими конфигурациями (например, Visual Studio, Xcode или Ninja Multi-Config) в виде списка, разделенного точками с запятой. Типичные записи включают \"Debug\", \"Release\", \"RelWithDebInfo\" и \"MinSizeRel\", но также могут быть определены настраиваемые типы сборки.",
	"assets/variables.json.CMAKE_CONFIG_POSTFIX": "Постфикс имени файла по умолчанию для библиотек, относящихся к конфигурации <CONFIG>.",
	"assets/variables.json.CMAKE_CPACK_COMMAND": "Полный путь к команде cpack, установленной с CMake.",
	"assets/variables.json.CMAKE_CROSSCOMPILING": "CMake задает эту переменную, чтобы указать, выполняется ли перекрестная компиляция, но обратите внимание на указанные ниже ограничения.",
	"assets/variables.json.CMAKE_CROSSCOMPILING_EMULATOR": "Эта переменная используется только в том случае, если CMAKE_CROSSCOMPILING включена. Она должна указывать на команду в основной системе, которая может запустить сборку исполняемого файла для целевой системы.",
	"assets/variables.json.CMAKE_CROSS_CONFIGS": "Задает разделенный точками с запятой список конфигураций, доступных для всех файлов build-<Config>.ninja в генераторе Ninja с несколькими конфигурациями. Эта переменная активирует режим перекрестной конфигурации. Сборка целевых объектов из каждой конфигурации, указанной в этой переменной, может быть выполнена из любого файла build-<Config>.ninja. Пользовательские команды будут использовать собственную конфигурацию файла build-<Config>.ninja. Если задано значение all, все конфигурации из CMAKE_CONFIGURATION_TYPES являются перекрестными. Если список не задан или пуст, каждый файл build-<Config>.ninja будет содержать правила сборки только для собственной конфигурации.",
	"assets/variables.json.CMAKE_CTEST_ARGUMENTS": "Задайте разделенный точками с запятой список аргументов командной строки, которые будут переданы в ctest при выполнении тестов с целью test (или RUN_TESTS) созданной системы сборки.",
	"assets/variables.json.CMAKE_CTEST_COMMAND": "Полный путь к команде ctest, установленной с CMake.",
	"assets/variables.json.CMAKE_CUDA_ARCHITECTURES": "Значение по умолчанию для свойства CUDA_ARCHITECTURES целевых объектов.",
	"assets/variables.json.CMAKE_CUDA_COMPILE_FEATURES": "Список компонентов, известных компилятору CUDA",
	"assets/variables.json.CMAKE_CUDA_EXTENSIONS": "Значение по умолчанию для целевого свойства CUDA_EXTENSIONS, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_CUDA_HOST_COMPILER": "Это исходное имя CUDA для более общей переменной CMAKE_<LANG>_HOST_COMPILER. Дополнительные сведения см. в последнем.",
	"assets/variables.json.CMAKE_CUDA_RESOLVE_DEVICE_SYMBOLS": "Значение по умолчанию для свойства CUDA_RESOLVE_DEVICE_SYMBOLS целевого объекта, если оно задано. По умолчанию эта переменная не определена.",
	"assets/variables.json.CMAKE_CUDA_RUNTIME_LIBRARY": "Выберите библиотеку CUDA времени выполнения для использования при компиляции и компоновке кода CUDA. Эта переменная используется для инициализации свойства CUDA_RUNTIME_LIBRARY для всех целевых объектов при их создании.",
	"assets/variables.json.CMAKE_CUDA_SEPARABLE_COMPILATION": "Значение по умолчанию для целевого свойства CUDA_SEPARABLE_COMPILATION. Эта переменная используется для инициализации указанного свойства для каждого целевого объекта при его создании.",
	"assets/variables.json.CMAKE_CUDA_STANDARD": "Значение по умолчанию для целевого свойства CUDA_STANDARD, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_CUDA_STANDARD_REQUIRED": "Значение по умолчанию для целевого свойства CUDA_STANDARD_REQUIRED, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES": "Если язык CUDA включен, этот параметр предоставляет разделенный точками с запятой список каталогов, предоставляемый CUDA Toolkit. Это значение может быть удобным для исходных файлов C++ для включения заголовков CUDA.",
	"assets/variables.json.CMAKE_CURRENT_BINARY_DIR": "Путь к каталогу двоичных файлов, который сейчас обрабатывается.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION": "При выполнении кода внутри функции эта переменная содержит имя текущей функции. Оно может быть полезно для диагностики или сообщений отладки.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION_LIST_DIR": "При выполнении кода внутри функции эта переменная содержит полный каталог listfile, в котором определена текущая функция.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION_LIST_FILE": "При выполнении кода внутри функции эта переменная содержит полный путь к listfile, в котором определена текущая функция.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION_LIST_LINE": "При выполнении кода внутри функции эта переменная содержит номер строки в listfile, где определена текущая функция.",
	"assets/variables.json.CMAKE_CURRENT_LIST_DIR": "Полное имя каталога для файла списка, который сейчас обрабатывается.",
	"assets/variables.json.CMAKE_CURRENT_LIST_FILE": "Полный путь к файлу списка, который сейчас обрабатывается.",
	"assets/variables.json.CMAKE_CURRENT_LIST_LINE": "Номер строки текущего обрабатываемого файла.",
	"assets/variables.json.CMAKE_CURRENT_SOURCE_DIR": "Путь к каталогу исходных файлов, который сейчас обрабатывается.",
	"assets/variables.json.CMAKE_CXX_COMPILER_IMPORT_STD": "Список стандартных уровней C++, для которых существует поддержка std импорта для текущей цепочки инструментов C++. Поддержка C++<NN> может быть обнаружена с помощью предиката <NN> IN_LIST CMAKE_CXX_COMPILER_IMPORT_STD с командой if.",
	"assets/variables.json.CMAKE_CXX_COMPILE_FEATURES": "Список компонентов, известных компилятору C++",
	"assets/variables.json.CMAKE_CXX_EXTENSIONS": "Значение по умолчанию для целевого свойства CXX_EXTENSIONS, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_CXX_MODULE_STD": "Следует ли добавлять целевые объекты служебной программы в качестве зависимостей к целевым cxx_std_23 или нет.",
	"assets/variables.json.CMAKE_CXX_SCAN_FOR_MODULES": "Следует ли проверять исходные файлы C++ на наличие зависимостей модулей.",
	"assets/variables.json.CMAKE_CXX_STANDARD": "Значение по умолчанию для целевого свойства CXX_STANDARD, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_CXX_STANDARD_REQUIRED": "Значение по умолчанию для целевого свойства CXX_STANDARD_REQUIRED, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_C_COMPILE_FEATURES": "Список компонентов, известных компилятору C",
	"assets/variables.json.CMAKE_C_EXTENSIONS": "Значение по умолчанию для целевого свойства C_EXTENSIONS, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_C_STANDARD": "Значение по умолчанию для целевого свойства C_STANDARD, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_C_STANDARD_REQUIRED": "Значение по умолчанию для целевого свойства C_STANDARD_REQUIRED, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_DEBUG_POSTFIX": "См. описание переменной CMAKE_<CONFIG>_POSTFIX.",
	"assets/variables.json.CMAKE_DEBUG_TARGET_PROPERTIES": "Включает трассировку выходных данных для целевых свойств.",
	"assets/variables.json.CMAKE_DEFAULT_BUILD_TYPE": "Задает конфигурацию, используемую по умолчанию в файле build.ninja в генераторе Ninja с несколькими конфигурациями. Если эта переменная задана, build.ninja использует правила сборки из файла build-<Config>.ninja по умолчанию. Все пользовательские команды выполняются с этой конфигурацией. Если переменная не задана, вместо нее используется первый элемент из CMAKE_CONFIGURATION_TYPES.",
	"assets/variables.json.CMAKE_DEFAULT_CONFIGS": "Задает разделенный точками с запятой список конфигураций для сборки целевого объекта в build.ninja, если суффикс :<Config> не указан в генераторе Ninja с несколькими конфигурациями. Если задано значение all, используются все конфигурации из CMAKE_CROSS_CONFIGS. Если значение не указано, по умолчанию используется CMAKE_DEFAULT_BUILD_TYPE.",
	"assets/variables.json.CMAKE_DEPENDS_IN_PROJECT_ONLY": "Если в каталоге задано значение TRUE, система сборки, созданная генераторами makefile, настроена только для учета зависимостей от исходных файлов, находящихся в исходном каталоге или каталоге двоичных файлов. Изменения в исходных файлах за пределами этих каталогов не приведут к перестроениям.",
	"assets/variables.json.CMAKE_DEPENDS_USE_COMPILER": "Для генераторов Makefile исходные зависимости для некоторых компиляторов сейчас создаются самим компилятором. Определив эту переменную со значением \"FALSE\", можно восстановить предыдущее поведение (т. е. использование CMake для обнаружения зависимостей).",
	"assets/variables.json.CMAKE_DIRECTORY_LABELS": "Задайте метки для текущего каталога.",
	"assets/variables.json.CMAKE_DISABLE_FIND_PACKAGE_PackageName": "Переменная для отключения вызовов find_package.",
	"assets/variables.json.CMAKE_DISABLE_PRECOMPILE_HEADERS": "Значение по умолчанию для DISABLE_PRECOMPILE_HEADERS целевых объектов.",
	"assets/variables.json.CMAKE_DLL_NAME_WITH_SOVERSION": "Эта переменная используется для инициализации свойства DLL_NAME_WITH_SOVERSION в целевых объектах общей библиотеки для платформы Windows, которая выбирается при заданной переменной WIN32.",
	"assets/variables.json.CMAKE_DL_LIBS": "Имя библиотеки, содержащей dlopen и dlclose.",
	"assets/variables.json.CMAKE_DOTNET_SDK": "Значение по умолчанию для свойства DOTNET_SDK целевых объектов.",
	"assets/variables.json.CMAKE_DOTNET_TARGET_FRAMEWORK": "Значение по умолчанию для свойства DOTNET_TARGET_FRAMEWORK целевых объектов.",
	"assets/variables.json.CMAKE_DOTNET_TARGET_FRAMEWORK_VERSION": "Значение по умолчанию для свойства DOTNET_TARGET_FRAMEWORK_VERSION целевых объектов.",
	"assets/variables.json.CMAKE_ECLIPSE_GENERATE_LINKED_RESOURCES": "Эта переменная кэша используется генератором проектов Eclipse. См. раздел о cmake-generators.",
	"assets/variables.json.CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT": "Эта переменная кэша используется генератором проектов Eclipse. См. раздел о cmake-generators.",
	"assets/variables.json.CMAKE_ECLIPSE_MAKE_ARGUMENTS": "Эта переменная кэша используется генератором проектов Eclipse. См. раздел о cmake-generators.",
	"assets/variables.json.CMAKE_ECLIPSE_RESOURCE_ENCODING": "Эта переменная кэша предписывает генератору проектов Eclipse CDT4 задать для кодирования ресурсов указанное значение в создаваемых файлах проекта. Если значение не указано, кодировка не задается.",
	"assets/variables.json.CMAKE_ECLIPSE_VERSION": "Эта переменная кэша используется генератором проектов Eclipse. См. раздел о cmake-generators.",
	"assets/variables.json.CMAKE_EDIT_COMMAND": "Полный путь к cmake-gui или ccmake. Определяется только для генераторов Makefile и Генераторов Ninja, если не используются лишние генераторы.",
	"assets/variables.json.CMAKE_ENABLE_EXPORTS": "Укажите, должны ли исполняемые файлы экспортировать символы для загружаемых модулей.",
	"assets/variables.json.CMAKE_ERROR_DEPRECATED": "Указывает, следует ли выдавать ошибки для нерекомендуемых функций.",
	"assets/variables.json.CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION": "Настройте скрипт cmake_install.cmake для выдачи ошибки при обнаружении файла с абсолютным назначением установки INSTALL DESTINATION.",
	"assets/variables.json.CMAKE_EXECUTABLE_ENABLE_EXPORTS": "Укажите, должны ли исполняемые файлы экспортировать символы для загружаемых модулей.",
	"assets/variables.json.CMAKE_EXECUTABLE_SUFFIX": "Суффикс для исполняемых файлов на этой платформе.",
	"assets/variables.json.CMAKE_EXECUTABLE_SUFFIX_LANG": "Суффикс, используемый в конце имени исполняемого файла целевой архитектуры компилятора <LANG>, если таковой имеется.",
	"assets/variables.json.CMAKE_EXECUTE_PROCESS_COMMAND_ECHO": "Если для этой переменной задано значение STDERR, STDOUT или NONE, команды в вызовах execute_process будут выводиться в stderr, stdout либо не будут выводиться вообще.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS": "Флаги компоновщика, используемые для создания исполняемых файлов.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS_CONFIG": "Флаги, используемые при компоновке исполняемого файла.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS_CONFIG_INIT": "Значение, используемое для инициализации записи кэша CMAKE_EXE_LINKER_FLAGS_ при первой настройке дерева сборки. Эту переменную должен задавать файл цепочки инструментов. CMake может добавлять содержимое в начало или конец этого значения в зависимости от среды и целевой платформы.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS_INIT": "Значение, используемое для инициализации записи кэша CMAKE_EXE_LINKER_FLAGS при первой настройке дерева сборки. Эту переменную должен задавать файл цепочки инструментов. CMake может добавлять содержимое в начало или конец этого значения в зависимости от среды и целевой платформы.",
	"assets/variables.json.CMAKE_EXPORT_COMPILE_COMMANDS": "Включение или отключение выходных данных команд компиляции во время создания.",
	"assets/variables.json.CMAKE_EXPORT_FIND_PACKAGE_NAME": "Инициализирует значение EXPORT_FIND_PACKAGE_NAME.",
	"assets/variables.json.CMAKE_EXPORT_NO_PACKAGE_REGISTRY": "Отключение команды экспорта, если для CMP0090 не задано значение NEW.",
	"assets/variables.json.CMAKE_EXPORT_PACKAGE_REGISTRY": "Включение команды экспорта, когда для CMP0090 задано значение NEW.",
	"assets/variables.json.CMAKE_EXTRA_GENERATOR": "Дополнительный генератор, используемый для сборки проекта. См. описание cmake-generators.",
	"assets/variables.json.CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES": "Дополнительные суффиксы для общих библиотек.",
	"assets/variables.json.CMAKE_FIND_APPBUNDLE": "Эта переменная влияет на то, как команды find_* выбирают между пакетами приложений macOS и компонентами пакета в стиле UNIX.",
	"assets/variables.json.CMAKE_FIND_DEBUG_MODE": "Вывод дополнительных сведений о найденных вызовах для следующих команд в стандартный поток ошибок:",
	"assets/variables.json.CMAKE_FIND_FRAMEWORK": "Эта переменная влияет на то, как команды find_* выбирают между платформами macOS и компонентами пакета в стиле UNIX.",
	"assets/variables.json.CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX": "Укажите <suffix>, чтобы велеть команде find_library искать в каталоге lib<suffix> перед каждым каталогом lib, где поиск производился бы в обычном случае.",
	"assets/variables.json.CMAKE_FIND_LIBRARY_PREFIXES": "Префиксы, добавляемые в начало при поиске библиотек.",
	"assets/variables.json.CMAKE_FIND_LIBRARY_SUFFIXES": "Суффиксы, добавляемые в конец при поиске библиотек.",
	"assets/variables.json.CMAKE_FIND_NO_INSTALL_PREFIX": "Исключение значений переменных CMAKE_INSTALL_PREFIX и CMAKE_STAGING_PREFIX из CMAKE_SYSTEM_PREFIX_PATH. CMake по умолчанию добавляет эти префиксы назначения проекта в CMAKE_SYSTEM_PREFIX_PATH, чтобы обеспечить поддержку для сборки серий зависимых пакетов и их установки в общий префикс. Установите для CMAKE_FIND_NO_INSTALL_PREFIX значение TRUE, чтобы подавить такое поведение.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_NAME": "Определяется командой find_package при загрузке модуля поиска для записи имени пакета, указанного вызывающим объектом. Дополнительные сведения см. в документации по команде.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY": "По умолчанию эта переменная не задана. Если не задана ни переменная CMAKE_FIND_USE_PACKAGE_REGISTRY, ни переменная CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY, то find_package() будет использовать реестр пакетов пользователя при условии, что не задан параметр NO_CMAKE_PACKAGE_REGISTRY.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY": "По умолчанию эта переменная не задана. Если не задана ни переменная CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY, ни переменная CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY, то find_package() будет использовать системный реестр пакетов при условии, что не задан параметр NO_CMAKE_SYSTEM_PACKAGE_REGISTRY.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_PREFER_CONFIG": "Предписывает find_package использовать режим \"Конфигурация\" перед режимом \"Модуль\", если режим не указан.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_REDIRECTS_DIR": "Эта переменная, доступная только для чтения, указывает каталог, который команда find_package проверяет первым перед поиском модуля или файла пакета конфигурации в другом месте. Файл пакета конфигурации в этом каталоге всегда будет предпочтительнее любого другого файла модуля поиска или файла пакета конфигурации.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS": "Задайте значение TRUE, чтобы вызовы find_package разрешали символьные ссылки в значении <PackageName>_DIR.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_SORT_DIRECTION": "Направление сортировки, используемое CMAKE_FIND_PACKAGE_SORT_ORDER. Оно может принять одно из следующих значений:",
	"assets/variables.json.CMAKE_FIND_PACKAGE_SORT_ORDER": "Используемый по умолчанию порядок сортировки пакетов, найденных с помощью find_package. Он может принять одно из следующих значений:",
	"assets/variables.json.CMAKE_FIND_PACKAGE_TARGETS_GLOBAL": "Установка значения \"ИСТИНА\" повышает все ИМПОРТИРОВАННЫЕ целевые объекты, обнаруженные find_package, до ГЛОБАЛЬНОЙ области.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_WARN_NO_MODULE": "Предписание для find_package выводить предупреждение при вызове без явного режима.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH": "Разделенный точками с запятой список корневых путей для поиска в файловой системе.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_INCLUDE": "Эта переменная определяет, используются ли CMAKE_FIND_ROOT_PATH и CMAKE_SYSROOT в FIND_XXX.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_LIBRARY": "Эта переменная определяет, используются ли CMAKE_FIND_ROOT_PATH и CMAKE_SYSROOT в FIND_XXX.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_PACKAGE": "Эта переменная определяет, используются ли CMAKE_FIND_ROOT_PATH и CMAKE_SYSROOT в FIND_XXX.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_PROGRAM": "Эта переменная определяет, используются ли CMAKE_FIND_ROOT_PATH и CMAKE_SYSROOT в FIND_XXX.",
	"assets/variables.json.CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH": "Управляет тем, будут ли следующие команды по умолчанию искать пути, предоставляемые переменными среды CMake:",
	"assets/variables.json.CMAKE_FIND_USE_CMAKE_PATH": "Управляет тем, будут ли следующие команды по умолчанию искать пути, предоставляемые переменными кэша CMake:",
	"assets/variables.json.CMAKE_FIND_USE_CMAKE_SYSTEM_PATH": "Управляет тем, будут ли следующие команды по умолчанию искать пути, предоставляемые переменными CMake для конкретных платформ:",
	"assets/variables.json.CMAKE_FIND_USE_INSTALL_PREFIX": "Управляет поведением по умолчанию следующих команд, чтобы выполнять или не выполнять поиск расположений в переменных CMAKE_INSTALL_PREFIX и CMAKE_STAGING_PREFIX.",
	"assets/variables.json.CMAKE_FIND_USE_PACKAGE_REGISTRY": "Управляет тем, будет ли команда find_package по умолчанию искать пути, предоставляемые реестром пакетов пользователя.",
	"assets/variables.json.CMAKE_FIND_USE_PACKAGE_ROOT_PATH": "Управляет тем, будут ли следующие команды по умолчанию искать пути, предоставляемые переменными <PackageName>_ROOT:",
	"assets/variables.json.CMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH": "Управляет тем, будут ли следующие команды по умолчанию искать пути, предоставляемые стандартными системными переменными среды:",
	"assets/variables.json.CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY": "Управляет поиском системного реестра пакетов командой find_package.",
	"assets/variables.json.CMAKE_FOLDER": "Указание имени папки. Используйте для упорядочения целевых объектов в IDE.",
	"assets/variables.json.CMAKE_Fortran_FORMAT": "Задайте FIXED или FREE, чтобы указать макет источника Fortran.",
	"assets/variables.json.CMAKE_Fortran_MODDIR_DEFAULT": "Выходной каталог модулей Fortran по умолчанию.",
	"assets/variables.json.CMAKE_Fortran_MODDIR_FLAG": "Флаг Fortran для каталога выходных данных модуля.",
	"assets/variables.json.CMAKE_Fortran_MODOUT_FLAG": "Флаг Fortran для включения выходных данных модуля.",
	"assets/variables.json.CMAKE_Fortran_MODULE_DIRECTORY": "Каталог выходных данных модуля Fortran.",
	"assets/variables.json.CMAKE_Fortran_PREPROCESS": "Значение по умолчанию для Fortran_PREPROCESS целевых объектов.",
	"assets/variables.json.CMAKE_FRAMEWORK": "Значение по умолчанию для FRAMEWORK целевых объектов.",
	"assets/variables.json.CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_CONFIG": "Постфикс имени файла платформы по умолчанию в конфигурации <CONFIG> при использовании генератора с несколькими конфигурациями.",
	"assets/variables.json.CMAKE_FRAMEWORK_PATH": "Разделенный точками с запятой список каталогов, который указывает путь поиска для платформ macOS, используемых командами find_library, find_package, find_path и find_file.",
	"assets/variables.json.CMAKE_GENERATOR": "Генератор, используемый для сборки проекта. См. описание cmake-generators.",
	"assets/variables.json.CMAKE_GENERATOR_INSTANCE": "Спецификация экземпляра для конкретного генератора, предоставленная пользователем.",
	"assets/variables.json.CMAKE_GENERATOR_PLATFORM": "Спецификация целевой платформы для конкретного генератора, предоставленная пользователем.",
	"assets/variables.json.CMAKE_GENERATOR_TOOLSET": "Спецификация набора инструментов собственной системы сборки, предоставленная пользователем.",
	"assets/variables.json.CMAKE_GHS_NO_SOURCE_GROUP_FILE": "Логическое значение ON/OFF для управления тем, должен ли для целевого объекта использоваться один файл проекта или несколько. Дополнительные сведения см. в описании свойства GHS_NO_SOURCE_GROUP_FILE.",
	"assets/variables.json.CMAKE_GLOBAL_AUTOGEN_TARGET": "Параметр для включения создания глобального целевого объекта autogen.",
	"assets/variables.json.CMAKE_GLOBAL_AUTOGEN_TARGET_NAME": "Измените имя глобального целевого объекта autogen.",
	"assets/variables.json.CMAKE_GLOBAL_AUTORCC_TARGET": "Параметр для включения создания глобального целевого объекта autorcc.",
	"assets/variables.json.CMAKE_GLOBAL_AUTORCC_TARGET_NAME": "Измените имя глобального целевого объекта autorcc.",
	"assets/variables.json.CMAKE_GNUtoMS": "Преобразование библиотек импорта GNU (.dll.a) в формат Майкрософт (LIB).",
	"assets/variables.json.CMAKE_HIP_ARCHITECTURES": "Список архитектур GPU, для которых необходимо создать код устройства. Имена архитектур интерпретируются на основе CMAKE_HIP_PLATFORM.",
	"assets/variables.json.CMAKE_HIP_COMPILE_FEATURES": "Список функций, известных компилятору HIP",
	"assets/variables.json.CMAKE_HIP_EXTENSIONS": "Значение по умолчанию для целевого свойства HIP_EXTENSIONS, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_HIP_PLATFORM": "Платформа GPU, для которой будут компилироваться источники языка HIP.",
	"assets/variables.json.CMAKE_HIP_STANDARD": "Значение по умолчанию для целевого свойства HIP_STANDARD, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_HIP_STANDARD_REQUIRED": "Значение по умолчанию для целевого свойства HIP_STANDARD_REQUIRED, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_HOME_DIRECTORY": "Путь к началу дерева исходного кода. Аналогично CMAKE_SOURCE_DIR.",
	"assets/variables.json.CMAKE_HOST_APPLE": "Значение true для операционных систем Apple macOS.",
	"assets/variables.json.CMAKE_HOST_BSD": "Настройте строковое значение, если главной системой является BSD. Допустимо одно из следующих значений: DragonFlyBSD, FreeBSD, OpenBSD или NetBSD.",
	"assets/variables.json.CMAKE_HOST_LINUX": "Установите значение true, если главной системой является Linux.",
	"assets/variables.json.CMAKE_HOST_SOLARIS": "Значение true для операционных систем Oracle Solaris.",
	"assets/variables.json.CMAKE_HOST_SYSTEM": "Составное имя ОС, где выполняется CMake.",
	"assets/variables.json.CMAKE_HOST_SYSTEM_NAME": "Имя ОС, где выполняется CMake.",
	"assets/variables.json.CMAKE_HOST_SYSTEM_PROCESSOR": "Имя ЦП, на котором выполняется CMake.",
	"assets/variables.json.CMAKE_HOST_SYSTEM_VERSION": "Версия ОС, где выполняется CMake.",
	"assets/variables.json.CMAKE_HOST_UNIX": "Значение true для операционных систем UNIX и подобных им.",
	"assets/variables.json.CMAKE_HOST_WIN32": "Значение true, если основная система работает под управлением Windows, включая 64-разрядную версию Windows и MSYS.",
	"assets/variables.json.CMAKE_IGNORE_PATH": "Разделенный точками с запятой список каталогов, которые будут игнорироваться различными командами find...().",
	"assets/variables.json.CMAKE_IGNORE_PREFIX_PATH": "Разделенный точками с запятой список префиксов поиска, которые должны игнорироваться командами find_program, find_library, find_file и find_path. Эти префиксы также игнорируются режимом Config команды find_package (режим Module не учитывает этот список префиксов). Чтобы вместо префиксов игнорировать определенные каталоги, см. CMAKE_IGNORE_NONPREFIX_VAR.",
	"assets/variables.json.CMAKE_IMPORT_LIBRARY_PREFIX": "Префикс для библиотек импорта, с которыми выполняется связывание.",
	"assets/variables.json.CMAKE_IMPORT_LIBRARY_SUFFIX": "Суффикс для библиотек импорта, с которыми выполняется связывание.",
	"assets/variables.json.CMAKE_INCLUDE_CURRENT_DIR": "Автоматическое добавление текущих каталогов сборки и источников в путь поиска включаемых файлов.",
	"assets/variables.json.CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE": "Автоматическое добавление текущих каталогов сборки и источников в целевое свойство INTERFACE_INCLUDE_DIRECTORIES.",
	"assets/variables.json.CMAKE_INCLUDE_DIRECTORIES_BEFORE": "Указывает, следует ли по умолчанию добавлять каталоги в начало или конец include_directories.",
	"assets/variables.json.CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE": "Указывает, следует ли принудительно добавлять каталоги включаемых файлов проекта в начало.",
	"assets/variables.json.CMAKE_INCLUDE_PATH": "Разделенный точками с запятой список каталогов, который указывает путь поиска для команд find_file и find_path. Предназначен для задания проектом и по умолчанию пуст.",
	"assets/variables.json.CMAKE_INSTALL_DEFAULT_COMPONENT_NAME": "Компонент по умолчанию, используемый в командах install.",
	"assets/variables.json.CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS": "Разрешения по умолчанию для каталогов, неявно созданных при установке файлов с помощью install и file.",
	"assets/variables.json.CMAKE_INSTALL_MESSAGE": "Укажите уровень детализации для кода скрипта установки, созданного командой install (с помощью команды file). Для путей, которые обновляются или устанавливаются заново, установка может выводить следующие строки:",
	"assets/variables.json.CMAKE_INSTALL_NAME_DIR": "Имя каталога для установленных целевых объектов на платформах Apple.",
	"assets/variables.json.CMAKE_INSTALL_PREFIX": "Каталог установки, используемый программой установки.",
	"assets/variables.json.CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT": "CMake устанавливает для этой переменной значение TRUE, когда CMAKE_INSTALL_PREFIX только что был инициализирован до значения по умолчанию, обычно при первом запуске CMake в новом дереве сборки, а переменная среды CMAKE_INSTALL_PREFIX не установлена при первом запуске CMake. Код проекта может использовать это, чтобы изменить значение по умолчанию, не переопределяя определяемое пользователем значение:",
	"assets/variables.json.CMAKE_INSTALL_REMOVE_ENVIRONMENT_RPATH": "Задает значение по умолчанию, указывающее, следует ли удалять определенные цепочкой инструментов пути RPATH во время установки.",
	"assets/variables.json.CMAKE_INSTALL_RPATH": "Значение rpath, используемое для установленных целевых объектов.",
	"assets/variables.json.CMAKE_INSTALL_RPATH_USE_LINK_PATH": "Добавление путей в каталог поиска компоновщика и установленный rpath.",
	"assets/variables.json.CMAKE_INTERNAL_PLATFORM_ABI": "Внутренняя переменная может быть изменена.",
	"assets/variables.json.CMAKE_INTERPROCEDURAL_OPTIMIZATION": "Значение по умолчанию для INTERPROCEDURAL_OPTIMIZATION целевых объектов.",
	"assets/variables.json.CMAKE_INTERPROCEDURAL_OPTIMIZATION_CONFIG": "Значение по умолчанию для INTERPROCEDURAL_OPTIMIZATION_ целевых объектов.",
	"assets/variables.json.CMAKE_IOS_INSTALL_COMBINED": "Значение по умолчанию для IOS_INSTALL_COMBINED целевых объектов.",
	"assets/variables.json.CMAKE_ISPC_HEADER_DIRECTORY": "Выходной каталог для заголовка, созданного ISPC.",
	"assets/variables.json.CMAKE_ISPC_HEADER_SUFFIX": "Выходной суффикс, используемый для заголовков, создаваемых ISPC.",
	"assets/variables.json.CMAKE_ISPC_INSTRUCTION_SETS": "Значение по умолчанию для свойства ISPC_INSTRUCTION_SETS целевых объектов.",
	"assets/variables.json.CMAKE_JOB_POOLS": "Если глобальное свойство JOB_POOLS не задано, вместо него используется значение этой переменной. Дополнительные сведения см. в описании JOB_POOLS.",
	"assets/variables.json.CMAKE_JOB_POOL_COMPILE": "Эта переменная используется для инициализации свойства JOB_POOL_COMPILE во всех целевых объектах. Дополнительные сведения см. в описании JOB_POOL_COMPILE.",
	"assets/variables.json.CMAKE_JOB_POOL_LINK": "Эта переменная используется для инициализации свойства JOB_POOL_LINK во всех целевых объектах. Дополнительные сведения см. в описании JOB_POOL_LINK.",
	"assets/variables.json.CMAKE_JOB_POOL_PRECOMPILE_HEADER": "Эта переменная используется для инициализации свойства JOB_POOL_PRECOMPILE_HEADER во всех целевых объектах. Дополнительные сведения см. в описании свойства JOB_POOL_PRECOMPILE_HEADER.",
	"assets/variables.json.CMAKE_KATE_FILES_MODE": "Эта переменная кэша используется генератором проектов и определяет, в каком режиме будет задана запись файлов в файле проекта. См. cmake-generators.",
	"assets/variables.json.CMAKE_KATE_MAKE_ARGUMENTS": "Эта переменная кэша используется генератором проектов Kate. См. раздел о cmake-generators.",
	"assets/variables.json.CMAKE_LANG_ANDROID_TOOLCHAIN_MACHINE": "При перекрестной компиляции для Android эта переменная содержит имя компьютера цепочки инструментов с инструментами binutil (например, gcc -dumpmachine). Инструменты binutil обычно содержат в своем имени префикс <machine>.",
	"assets/variables.json.CMAKE_LANG_ANDROID_TOOLCHAIN_PREFIX": "При перекрестной компиляции для Android эта переменная содержит абсолютный путь, используемый в качестве префикса для компилятора GNU цепочки инструментов и его инструментов binutil.",
	"assets/variables.json.CMAKE_LANG_ANDROID_TOOLCHAIN_SUFFIX": "При перекрестной компиляции для Android эта переменная содержит суффикс платформы узла для компилятора GNU цепочки инструментов и его инструментов binutil.",
	"assets/variables.json.CMAKE_LANG_ARCHIVE_APPEND": "Переменная правила для добавления к статическому архиву.",
	"assets/variables.json.CMAKE_LANG_ARCHIVE_CREATE": "Переменная правила для создания статического архива.",
	"assets/variables.json.CMAKE_LANG_ARCHIVE_FINISH": "Переменная правила для завершения существующего статического архива.",
	"assets/variables.json.CMAKE_LANG_BYTE_ORDER": "Порядок следования байтов для целевой архитектуры компилятора <LANG>, если он известен. Если он задан и не пуст, значение может быть одним из указанных далее:",
	"assets/variables.json.CMAKE_LANG_CLANG_TIDY": "Значение по умолчанию для свойства <LANG>_CLANG_TIDY целевого объекта, когда <LANG> имеет значение C, CXX, OBJC или OBJCXX.",
	"assets/variables.json.CMAKE_LANG_CLANG_TIDY_EXPORT_FIXES_DIR": "Значение по умолчанию для свойства <LANG>_CLANG_TIDY_EXPORT_FIXES_DIR целевого объекта, когда <LANG> имеет значение C, CXX, OBJC или OBJCXX.",
	"assets/variables.json.CMAKE_LANG_COMPILER": "Полный путь к компилятору для LANG.",
	"assets/variables.json.CMAKE_LANG_COMPILER_ABI": "Внутренняя переменная может быть изменена.",
	"assets/variables.json.CMAKE_LANG_COMPILER_AR": "Оболочка вокруг ar, добавляющая подходящий параметр --plugin для компилятора.",
	"assets/variables.json.CMAKE_LANG_COMPILER_ARCHITECTURE_ID": "Внутренняя переменная может быть изменена.",
	"assets/variables.json.CMAKE_LANG_COMPILER_EXTERNAL_TOOLCHAIN": "Внешняя цепочка инструментов для перекрестной компиляции, если поддерживается.",
	"assets/variables.json.CMAKE_LANG_COMPILER_FRONTEND_VARIANT": "Строка идентификации варианта внешнего интерфейса компилятора.",
	"assets/variables.json.CMAKE_LANG_COMPILER_ID": "Идентификационная строка компилятора.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LAUNCHER": "Значение по умолчанию для целевого свойства <LANG>_COMPILER_LAUNCHER. Эта переменная используется для инициализации указанного свойства каждого целевого объекта при его создании. Применяется только в том случае, если <LANG> имеет значение C, CXX, Fortran, HIP, ISPC, OBJC, OBJCXX или CUDA.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER": "Полный путь к компоновщику для LANG.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER_FRONTEND_VARIANT": "Идентификационная строка варианта внешнего интерфейса компоновщика.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER_ID": "Строка идентификации линкера.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER_VERSION": "Строка версии компоновщика.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LOADED": "Если язык включен, присваивается значение true.",
	"assets/variables.json.CMAKE_LANG_COMPILER_PREDEFINES_COMMAND": "Команда, выводящая предварительные определения компилятора.",
	"assets/variables.json.CMAKE_LANG_COMPILER_RANLIB": "Оболочка вокруг ranlib, добавляющая подходящий параметр --plugin для компилятора.",
	"assets/variables.json.CMAKE_LANG_COMPILER_TARGET": "Целевой объект для перекрестной компиляции, если поддерживается.",
	"assets/variables.json.CMAKE_LANG_COMPILER_VERSION": "Строка версии компилятора.",
	"assets/variables.json.CMAKE_LANG_COMPILER_VERSION_INTERNAL": "Внутренняя переменная может быть изменена.",
	"assets/variables.json.CMAKE_LANG_COMPILE_OBJECT": "Переменная правила для компиляции отдельного объектного файла.",
	"assets/variables.json.CMAKE_LANG_CPPCHECK": "Значение по умолчанию для целевого свойства <LANG>_CPPCHECK. Эта переменная используется для инициализации указанного свойства для каждого целевого объекта при его создании. Это применяется только в том случае, если <LANG> имеет значение C или CXX.",
	"assets/variables.json.CMAKE_LANG_CPPLINT": "Значение по умолчанию для целевого свойства <LANG>_CPPLINT. Эта переменная используется для инициализации указанного свойства для каждого целевого объекта при его создании. Это применяется только в том случае, если <LANG> имеет значение C или CXX.",
	"assets/variables.json.CMAKE_LANG_CREATE_SHARED_LIBRARY": "Переменная правила для создания общей библиотеки.",
	"assets/variables.json.CMAKE_LANG_CREATE_SHARED_MODULE": "Переменная правила для создания общего модуля.",
	"assets/variables.json.CMAKE_LANG_CREATE_STATIC_LIBRARY": "Переменная правила для создания статической библиотеки.",
	"assets/variables.json.CMAKE_LANG_EXTENSIONS": "Варианты:",
	"assets/variables.json.CMAKE_LANG_EXTENSIONS_DEFAULT": "Режим расширений компилятора по умолчанию. Используется по умолчанию для целевого свойства <LANG>_EXTENSIONS, если CMAKE_<LANG>_EXTENSIONS не задано (см. CMP0128).",
	"assets/variables.json.CMAKE_LANG_FLAGS": "Флаги языка для языка <LANG> при сборке для всех конфигураций. Эти флаги будут переданы всем вызовам компилятора. Сюда входят вызовы, которые компилировать диск, и вызовы, связывание которых выполняется.",
	"assets/variables.json.CMAKE_LANG_FLAGS_CONFIG": "Флаги языка для языка <LANG> при сборке для <CONFIG> конфигурации. Эти флаги будут переданы всем вызовам компилятора в соответствующей конфигурации. Сюда входят вызовы, которые компилировать диск, и вызовы, связывание которых выполняется.",
	"assets/variables.json.CMAKE_LANG_FLAGS_CONFIG_INIT": "Значение, используемое для инициализации записи кэша CMAKE_<LANG>_FLAGS_ при первой настройке дерева сборки для языка <LANG>. Эту переменную должен задавать файл цепочки инструментов. CMake может добавлять содержимое в начало или конец этого значения в зависимости от среды и целевой платформы.",
	"assets/variables.json.CMAKE_LANG_FLAGS_DEBUG": "Эта переменная является вариантом Debug переменной CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_DEBUG_INIT": "Эта переменная является вариантом Debug переменной CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_FLAGS_INIT": "Значение, используемое для инициализации записи кэша CMAKE_<LANG>_FLAGS при первой настройке дерева сборки для языка <LANG>. Эта переменная задается файлом цепочки инструментов. CMake может добавлять содержимое в начало или конец значения в зависимости от среды и целевой платформы. Например, в начало добавляется содержимое переменной среды xxxFLAGS, где xxx зависит от языка, но не обязательно совпадает с <LANG> (например, CXXFLAGS для CXX, FFLAGS для Fortran и т. д.). Это значение является фрагментом линии командной строки. Поэтому множество параметров необходимо разделять пробелами, а параметры с пробелами — заключать в кавычки.",
	"assets/variables.json.CMAKE_LANG_FLAGS_MINSIZEREL": "Эта переменная является вариантом MinSizeRel переменной CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_MINSIZEREL_INIT": "Эта переменная является вариантом MinSizeRel переменной CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELEASE": "Эта переменная является вариантом Release переменной CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELEASE_INIT": "Эта переменная является вариантом Release переменной CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELWITHDEBINFO": "Эта переменная является вариантом RelWithDebInfo переменной CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELWITHDEBINFO_INIT": "Эта переменная является вариантом RelWithDebInfo переменной CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_HOST_COMPILER": "Эта переменная доступна, если <LANG> CUDA или HIP.",
	"assets/variables.json.CMAKE_LANG_IGNORE_EXTENSIONS": "Расширения файлов, которые сборка должна игнорировать.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_INCLUDE_DIRECTORIES": "Каталоги, где компилятор неявно ищет файлы заголовка.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_LINK_DIRECTORIES": "Неявный путь поиска компоновщика для языка <LANG>.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES": "Неявный путь поиска платформы компоновщика для языка <LANG>.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_LINK_LIBRARIES": "Неявные флаги и библиотеки компоновки для языка <LANG>.",
	"assets/variables.json.CMAKE_LANG_INCLUDE_WHAT_YOU_USE": "Значение по умолчанию для целевого свойства <LANG>_INCLUDE_WHAT_YOU_USE. Эта переменная используется для инициализации указанного свойства для каждого целевого объекта при его создании. Это применяется только в том случае, если <LANG> имеет значение C или CXX.",
	"assets/variables.json.CMAKE_LANG_LIBRARY_ARCHITECTURE": "Обнаружено имя каталога библиотеки целевой архитектуры для <LANG>.",
	"assets/variables.json.CMAKE_LANG_LINKER_LAUNCHER": "Значение по умолчанию для целевого свойства <LANG>_LINKER_LAUNCHER. Эта переменная используется для инициализации указанного свойства для каждого целевого объекта при его создании. Это применяется только в том случае, если <LANG> имеет значение C, CXX, OBJC или OBJCXX.",
	"assets/variables.json.CMAKE_LANG_LINKER_PREFERENCE": "Внутренняя переменная может быть изменена.",
	"assets/variables.json.CMAKE_LANG_LINKER_PREFERENCE_PROPAGATES": "Внутренняя переменная может быть изменена.",
	"assets/variables.json.CMAKE_LANG_LINKER_WRAPPER_FLAG": "Определяет синтаксис параметра драйвера компилятора, чтобы передать параметры компоновщика. Он будет использоваться для преобразования префикса LINKER: в параметрах компоновки (см. описание add_link_options и target_link_options).",
	"assets/variables.json.CMAKE_LANG_LINKER_WRAPPER_FLAG_SEP": "Эта переменная используется с переменной CMAKE_<LANG>_LINKER_WRAPPER_FLAG для форматирования префикса LINKER: в параметрах компоновки (см. описание add_link_options и target_link_options).",
	"assets/variables.json.CMAKE_LANG_LINK_EXECUTABLE": "Переменная правила для компоновки исполняемого файла.",
	"assets/variables.json.CMAKE_LANG_LINK_GROUP_USING_FEATURE": "Эта переменная определяет способ связывания группы библиотек для указанного <FEATURE> при использовании выражения генератора LINK_GROUP, а для целевого объекта используется язык ссылки <LANG>. Чтобы эта переменная имела влияние, связанной переменной CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>_SUPPORTED должно быть задано значение \"истина\".",
	"assets/variables.json.CMAKE_LANG_LINK_GROUP_USING_FEATURE_SUPPORTED": "Эта переменная указывает, поддерживается ли <FEATURE> для языка ссылок <LANG>. Если эта переменная имеет значение true, то <FEATURE> должен быть определен CMAKE_<LANG>_LINK_GROUP_USING_, а более общие переменные CMAKE_LINK_GROUP_USING_<FEATURE>_SUPPORTED и CMAKE_LINK_GROUP_USING_ не используются.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_FEATURE_ATTRIBUTES": "Эта переменная определяет семантику указанной библиотеки ссылок <FEATURE> при компоновки с языком <LANG>. Он имеет приоритет над CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES, если эта переменная также определена для одного и того же <FEATURE>, но в противном случае имеет аналогичные эффекты. Дополнительные CMAKE_LINK_LIBRARY_ см. C4_ATTRIBUTES<FEATURE>_ATTRIBUTES.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_FILE_FLAG": "Зависящий от языка флаг, который используется для компоновки библиотеки, указанной путем к ее файлу.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_FLAG": "Флаг, используемый для компоновки библиотеки в общую библиотеку или исполняемый файл.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_SUFFIX": "Зависящий от языка суффикс для библиотек, с которыми выполняется связывание.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_USING_FEATURE": "Эта переменная определяет способ связывания библиотеки или платформы для указанного <FEATURE> при использовании выражения генератора LINK_LIBRARY генератора, а для целевого объекта используется язык ссылки <LANG>. Чтобы эта переменная имела влияние, связанной переменной CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED должно быть задано значение true.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_USING_FEATURE_SUPPORTED": "Установите значение TRUE, если <FEATURE>, как определено переменной CMAKE_<LANG>_LINK_LIBRARY_USING_, поддерживается для языка компоновщика <LANG>.",
	"assets/variables.json.CMAKE_LANG_LINK_WHAT_YOU_USE_FLAG": "Флаг компоновщика, используемый для настройки компоновщика, чтобы все указанные библиотеки в командной строке были связаны с целевым объектом.",
	"assets/variables.json.CMAKE_LANG_OUTPUT_EXTENSION": "Расширение для вывода компиляции для одного файла.",
	"assets/variables.json.CMAKE_LANG_PLATFORM_ID": "Внутренняя переменная может быть изменена.",
	"assets/variables.json.CMAKE_LANG_SIMULATE_ID": "Идентификационная строка \"имитированного\" компилятора.",
	"assets/variables.json.CMAKE_LANG_SIMULATE_VERSION": "Строка версии \"имитированного\" компилятора.",
	"assets/variables.json.CMAKE_LANG_SIZEOF_DATA_PTR": "Размер типов указателей на данные для языка <LANG>.",
	"assets/variables.json.CMAKE_LANG_SOURCE_FILE_EXTENSIONS": "Расширения исходных файлов для заданного языка.",
	"assets/variables.json.CMAKE_LANG_STANDARD": "Варианты:",
	"assets/variables.json.CMAKE_LANG_STANDARD_DEFAULT": "Стандарт компилятора по умолчанию для языка <LANG>. Пусто, если компилятор не имеет представления о стандартных уровнях.",
	"assets/variables.json.CMAKE_LANG_STANDARD_INCLUDE_DIRECTORIES": "Включение каталогов, которые будут использоваться для каждого исходного файла, скомпилированного с помощью компилятора <LANG>. Это предназначено для указания системных каталогов включаемых файлов, необходимых языку для текущей платформы. Эти каталоги всегда находятся в конце пути поиска включаемых файлов, передаваемого компилятору.",
	"assets/variables.json.CMAKE_LANG_STANDARD_LATEST": "Эта переменная представляет минимальное значение между последней версией стандарта для языкового <LANG>, поддерживаемой текущим компилятором, и последней версией, поддерживаемой CMake. В качестве значения будет задано одно из поддерживаемых значений соответствующего целевого свойства <LANG>_STANDARD; список поддерживаемых языков см. в документации по свойству.",
	"assets/variables.json.CMAKE_LANG_STANDARD_LIBRARIES": "Библиотеки, компонуемые в каждый исполняемый файл и каждую общую библиотеку, связываемые для языка <LANG>. Это предназначено для указания системных библиотек, необходимых языку для текущей платформы.",
	"assets/variables.json.CMAKE_LANG_STANDARD_REQUIRED": "Варианты:",
	"assets/variables.json.CMAKE_LANG_USING_LINKER_MODE": "Это определяет, как следует интерпретировать значение переменной CMAKE_<LANG>_USING_LINKER_. Поддерживаемые значения режима компоновщика:",
	"assets/variables.json.CMAKE_LANG_USING_LINKER_TYPE": "Эта переменная определяет, как указать компоновщик <TYPE> для шага связывания, как это контролируется переменной CMAKE_LINKER_TYPE или целевым свойством LINKER_TYPE. В зависимости от значения переменной CMAKE_<LANG>_USING_LINKER_MODE, CMAKE_<LANG>_USING_LINKER_<TYPE> может содержать флаги компилятора для шага компоновки или флаги, которые будут переданы непосредственно инструменту компоновщика.",
	"assets/variables.json.CMAKE_LANG_VISIBILITY_PRESET": "Значение по умолчанию для целевого свойства <LANG>_VISIBILITY_PRESET при создании целевого объекта.",
	"assets/variables.json.CMAKE_LIBRARY_ARCHITECTURE": "Имя каталога библиотеки целевой архитектуры, если оно обнаружено.",
	"assets/variables.json.CMAKE_LIBRARY_ARCHITECTURE_REGEX": "Регулярное выражение, соответствующее возможным именам каталогов с библиотеками целевой архитектуры.",
	"assets/variables.json.CMAKE_LIBRARY_OUTPUT_DIRECTORY": "Указывает, куда поместить конечные файлы LIBRARY при сборке.",
	"assets/variables.json.CMAKE_LIBRARY_OUTPUT_DIRECTORY_CONFIG": "Указывает, куда поместить конечные файлы LIBRARY при сборке для определенной конфигурации.",
	"assets/variables.json.CMAKE_LIBRARY_PATH": "Разделенный точками с запятой список каталогов, который указывает путь поиска для команды find_library. Предназначен для задания проектом и по умолчанию пуст.",
	"assets/variables.json.CMAKE_LIBRARY_PATH_FLAG": "Флаг, используемый для добавления пути поиска библиотек в компилятор.",
	"assets/variables.json.CMAKE_LINKER_TYPE": "Укажите, какой компоновщик будет использоваться на этапе связывания.",
	"assets/variables.json.CMAKE_LINK_DEF_FILE_FLAG": "Флаг компоновщика, используемый для указания DEF-файла при создании библиотеки DLL.",
	"assets/variables.json.CMAKE_LINK_DEPENDS_NO_SHARED": "Указывает, следует ли пропустить зависимости компоновки для файлов общей библиотеки.",
	"assets/variables.json.CMAKE_LINK_DEPENDS_USE_LINKER": "Для генераторов Makefile и Ninja теперь для выбора компоновщиков создаются компоновщиком. Определив эту переменную со значением FALSE, можно отключить эту функцию.",
	"assets/variables.json.CMAKE_LINK_DIRECTORIES_BEFORE": "Указывает, следует ли по умолчанию добавлять каталоги в начало или конец link_directories.",
	"assets/variables.json.CMAKE_LINK_GROUP_USING_FEATURE": "Эта переменная определяет, как связать группу библиотек для указанного <FEATURE>, когда используется выражение генератора LINK_GROUP. Чтобы эта переменная имела какой-либо эффект, должны быть выполнены оба следующих условия:",
	"assets/variables.json.CMAKE_LINK_GROUP_USING_FEATURE_SUPPORTED": "Эта переменная указывает, поддерживается ли <FEATURE> независимо от языка ссылки. Если эта переменная имеет значение \"истина\", <FEATURE> должна быть определена CMAKE_LINK_GROUP_USING_.",
	"assets/variables.json.CMAKE_LINK_INTERFACE_LIBRARIES": "Значение по умолчанию для LINK_INTERFACE_LIBRARIES целевых объектов.",
	"assets/variables.json.CMAKE_LINK_LIBRARIES_ONLY_TARGETS": "Задайте эту переменную, чтобы инициализировать свойство LINK_LIBRARIES_ONLY_TARGETS неимпортированных целевых объектов при их создании. Если задано значение \"true\", дополнительно проверяется, что все перечисленные в target_link_libraries элементы, которые могут быть именами целевых объектов, фактически являются именами существующих целевых объектов. Дополнительные сведения см. в документации по свойству \"target\".",
	"assets/variables.json.CMAKE_LINK_LIBRARY_FEATURE_ATTRIBUTES": "Эта переменная определяет поведение указанной библиотеки ссылок <FEATURE>. Указывает, как <FEATURE> взаимодействует с другими функциями, когда следует применять <FEATURE>, и аспекты обработки <FEATURE> при сборке командной строки последнего компоновщика CMake (например, дедупликация).",
	"assets/variables.json.CMAKE_LINK_LIBRARY_FILE_FLAG": "Флаг, используемый для компоновки библиотеки, указанной путем к ее файлу.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_FLAG": "Флаг, используемый для компоновки библиотеки в исполняемый файл.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_SUFFIX": "Суффикс для библиотек, с которыми выполняется связывание.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_USING_FEATURE": "Эта переменная определяет способ связывания библиотеки или платформы для указанного <FEATURE> при использовании выражения генератора LINK_LIBRARY генератора. Чтобы эта переменная имела влияние, необходимо выполнить оба следующих условия:",
	"assets/variables.json.CMAKE_LINK_LIBRARY_USING_FEATURE_SUPPORTED": "Задайте значение ИСТИНА, если <FEATURE>, как определено переменной CMAKE_LINK_LIBRARY_USING_, поддерживается независимо от языка компоновщика.",
	"assets/variables.json.CMAKE_LINK_SEARCH_END_STATIC": "Завершение строки связи таким образом, чтобы использовались статические системные библиотеки.",
	"assets/variables.json.CMAKE_LINK_SEARCH_START_STATIC": "Предполагается, что компоновщик ищет статические библиотеки по умолчанию.",
	"assets/variables.json.CMAKE_LINK_WHAT_YOU_USE": "Значение по умолчанию для целевого свойства LINK_WHAT_YOU_USE. Эта переменная используется для инициализации указанного свойства для каждого целевого объекта при его создании.",
	"assets/variables.json.CMAKE_LINK_WHAT_YOU_USE_CHECK": "Определяет команду, выполняемую после шага ссылки для проверки использования библиотек. Эта проверка сейчас определена только на платформах ELF со значением ldd -u -r.",
	"assets/variables.json.CMAKE_MACOSX_BUNDLE": "Значение по умолчанию для MACOSX_BUNDLE целевых объектов.",
	"assets/variables.json.CMAKE_MACOSX_RPATH": "Указывает, следует ли использовать пути rpath в macOS и iOS.",
	"assets/variables.json.CMAKE_MAJOR_VERSION": "Первый компонент номера версии у переменной CMAKE_VERSION.",
	"assets/variables.json.CMAKE_MAKE_PROGRAM": "Средство, которое может запустить собственную систему сборки. Это значение может быть полным путем к исполняемому файлу или просто именем средства, если оно должно присутствовать в PATH.",
	"assets/variables.json.CMAKE_MAP_IMPORTED_CONFIG_CONFIG": "Значение по умолчанию для MAP_IMPORTED_CONFIG_ целевых объектов.",
	"assets/variables.json.CMAKE_MATCH_COUNT": "Количество совпадений с последним регулярным выражением.",
	"assets/variables.json.CMAKE_MATCH_n": "Группа записи <n>, совпавшая с последним регулярным выражением, для групп с 0 по 9. Группа 0 — это все совпадение целиком. Группы с 1 по 9 — это части выражения, записанные с помощью синтаксиса ().",
	"assets/variables.json.CMAKE_MAXIMUM_RECURSION_DEPTH": "Максимальная глубина рекурсии для скриптов CMake. Должна задаваться в командной строке с помощью параметра -DCMAKE_MAXIMUM_RECURSION_DEPTH=<x> или в файле CMakeLists.txt для проектов, требующих большей глубины рекурсии. Проекты, в которых задана эта переменная, должны предоставлять пользователю возможность ее переопределения. Пример:",
	"assets/variables.json.CMAKE_MESSAGE_CONTEXT": "При включении параметром командной строки cmake --log-context или переменной CMAKE_MESSAGE_CONTEXT_SHOW команда message преобразует список CMAKE_MESSAGE_CONTEXT в разделенную точками строку в квадратных скобках и добавляет ее перед каждой строкой для сообщений с уровнем ведения журнала NOTICE и ниже.",
	"assets/variables.json.CMAKE_MESSAGE_CONTEXT_SHOW": "Если для этой переменной задано значение true, контекст отображается с записью каждой строки в журнал с помощью команды message (сведения о задании самого контекста см. в описании свойства CMAKE_MESSAGE_CONTEXT).",
	"assets/variables.json.CMAKE_MESSAGE_INDENT": "Команда message объединяет строки из этого списка и для уровней ведения журнала NOTICE и ниже добавляет полученную строку перед каждой строкой сообщения.",
	"assets/variables.json.CMAKE_MESSAGE_LOG_LEVEL": "Если эта переменная задана, она указывает уровень ведения журнала, используемый командой message. Допустимые значения те же, что и для параметра командной строки --log-level <cmake --log-level> программы CMake. Если заданы и эта переменная, и параметр командной строки --log-level <cmake --log-level>, приоритет имеет параметр.",
	"assets/variables.json.CMAKE_MFC_FLAG": "Используйте библиотеку MFC для исполняемого файла или библиотеки DLL.",
	"assets/variables.json.CMAKE_MINIMUM_REQUIRED_VERSION": "Версия CMake <min>, присвоенная последнему вызову команды cmake_minimum_required в текущей области видимости переменной или любой родительской области видимости переменной.",
	"assets/variables.json.CMAKE_MINOR_VERSION": "Второй компонент номера версии у переменной CMAKE_VERSION.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS": "Флаги компоновщика, используемые для создания модулей.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS_CONFIG": "Флаги, используемые при компоновке модуля.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS_CONFIG_INIT": "Значение, используемое для инициализации записи кэша CMAKE_MODULE_LINKER_FLAGS_ при первой настройке дерева сборки. Эту переменную должен задавать файл цепочки инструментов. CMake может добавлять содержимое в начало или конец этого значения в зависимости от среды и целевой платформы.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS_INIT": "Значение, используемое для инициализации записи кэша CMAKE_MODULE_LINKER_FLAGS при первой настройке дерева сборки. Эту переменную должен задавать файл цепочки инструментов. CMake может добавлять содержимое в начало или конец этого значения в зависимости от среды и целевой платформы.",
	"assets/variables.json.CMAKE_MODULE_PATH": "Разделенный точками с запятой список каталогов с указанием косых черт, который задает путь поиска для модулей CMake, загружаемых командами include или find_package перед проверкой модулей по умолчанию, поставляемых вместе с CMake. Задается проектом и по умолчанию пуст.",
	"assets/variables.json.CMAKE_MSVCIDE_RUN_PATH": "Дополнительные расположения PATH, которые следует использовать при выполнении команды add_custom_command или add_custom_target во время работы с генератором Visual Studio 12 2013 (или более поздней версии). Это позволяет выполнять команды и использовать библиотеки DLL, о которых неизвестно среде IDE.",
	"assets/variables.json.CMAKE_MSVC_DEBUG_INFORMATION_FORMAT": "Выберите формат отладочной информации MSVC, предназначенной для MSVC ABI. Эта переменная используется, чтобы инициализировать свойство MSVC_DEBUG_INFORMATION_FORMAT для всех целевых объектов при их создании. Она также распространяется в тестовый проект при вызовах команды try_compile.",
	"assets/variables.json.CMAKE_MSVC_RUNTIME_LIBRARY": "Выберите библиотеку MSVC времени выполнения для использования компиляторами, предназначенными для MSVC ABI. Эта переменная используется для инициализации свойства MSVC_RUNTIME_LIBRARY для всех целевых объектов при их создании. Она также распространяется в тестовый проект при вызовах команды try_compile.",
	"assets/variables.json.CMAKE_NETRC": "Эта переменная используется для инициализации параметра NETRC для файла и команд файла. Дополнительные сведения см. в описании этих команд.",
	"assets/variables.json.CMAKE_NETRC_FILE": "Эта переменная используется для инициализации параметра NETRC_FILE для файла и команд файла. Дополнительные сведения см. в описании этих команд.",
	"assets/variables.json.CMAKE_NINJA_OUTPUT_PATH_PREFIX": "Попросите генераторы Ninja добавить префикс к каждому выходному пути в build.ninja. В случае отсутствующего префикса к префиксу добавляется завершаемая косая черта.",
	"assets/variables.json.CMAKE_NOT_USING_CONFIG_FLAGS": "Пропуск флагов _BUILD_TYPE, если задано значение true.",
	"assets/variables.json.CMAKE_NO_BUILTIN_CHRPATH": "Не используйте встроенный двоичный редактор для исправления путей поиска в библиотеке среды выполнения при установке.",
	"assets/variables.json.CMAKE_NO_SYSTEM_FROM_IMPORTED": "Значение по умолчанию для NO_SYSTEM_FROM_IMPORTED целевых объектов.",
	"assets/variables.json.CMAKE_OBJCXX_EXTENSIONS": "Значение по умолчанию для целевого свойства OBJCXX_EXTENSIONS, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_OBJCXX_STANDARD": "Значение по умолчанию для целевого свойства OBJCXX_STANDARD, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_OBJCXX_STANDARD_REQUIRED": "Значение по умолчанию для целевого свойства OBJCXX_STANDARD_REQUIRED, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_OBJC_EXTENSIONS": "Значение по умолчанию для целевого свойства OBJC_EXTENSIONS, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_OBJC_STANDARD": "Значение по умолчанию для целевого свойства OBJC_STANDARD, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_OBJC_STANDARD_REQUIRED": "Значение по умолчанию для целевого свойства OBJC_STANDARD_REQUIRED, если оно задано при создании целевого объекта.",
	"assets/variables.json.CMAKE_OBJECT_PATH_MAX": "Максимальная длина полного пути к объектному файлу, разрешенная для собственных средств сборки.",
	"assets/variables.json.CMAKE_OPTIMIZE_DEPENDENCIES": "Инициализирует свойство целевого объекта OPTIMIZE_DEPENDENCIES.",
	"assets/variables.json.CMAKE_OSX_ARCHITECTURES": "Зависящие от целевого объекта архитектуры для macOS и iOS.",
	"assets/variables.json.CMAKE_OSX_DEPLOYMENT_TARGET": "Указание минимальной версии целевой платформы (например, macOS или iOS), где планируется развернуть целевые двоичные файлы. CMake использует значение этой переменной для флага -mmacosx-version-min или соответствующих эквивалентов целевой платформы. Для более ранних версий Xcode, поставляемых с несколькими пакетами SDK macOS, эта переменная также помогает выбрать пакет SDK в случае, если значение для CMAKE_OSX_SYSROOT не задано.",
	"assets/variables.json.CMAKE_OSX_SYSROOT": "Укажите расположение и имя используемого пакета SDK платформы macOS. CMake использует это значение, чтобы вычислить флаг -isysroot или его эквивалент и помочь командам find_* найти файлы в пакете SDK.",
	"assets/variables.json.CMAKE_PARENT_LIST_FILE": "Полный путь к файлу CMake, включавшему в себя текущий.",
	"assets/variables.json.CMAKE_PATCH_VERSION": "Третий компонент номера версии у переменной CMAKE_VERSION.",
	"assets/variables.json.CMAKE_PCH_INSTANTIATE_TEMPLATES": "Эта переменная используется для инициализации свойства PCH_INSTANTIATE_TEMPLATES целевых объектов при их создании.",
	"assets/variables.json.CMAKE_PCH_WARN_INVALID": "Эта переменная используется для инициализации свойства PCH_WARN_INVALID целевых объектов при их создании.",
	"assets/variables.json.CMAKE_PDB_OUTPUT_DIRECTORY": "Выходной каталог для PDB-файлов отладочного символа Майкрософт, созданных компоновщиком для целевых объектов исполняемого файла и общей библиотеки.",
	"assets/variables.json.CMAKE_PDB_OUTPUT_DIRECTORY_CONFIG": "Представляющий отдельную конфигурацию выходной каталог для PDB-файлов отладочного символа Майкрософт, созданных компоновщиком для целевых объектов исполняемого файла и общей библиотеки.",
	"assets/variables.json.CMAKE_PLATFORM_NO_VERSIONED_SONAME": "Эта переменная управляет использованием свойств целевого объекта VERSION и SOVERSION для общих библиотек на глобальном уровне. Если задано значение \"true\", добавление сведений о версии к каждому целевому объекту общей библиотеки отключается.",
	"assets/variables.json.CMAKE_POLICY_DEFAULT_CMPNNNN": "Значение по умолчанию для политики CMake CMP<NNNN>, когда она оставлена незаданной.",
	"assets/variables.json.CMAKE_POLICY_WARNING_CMPNNNN": "Явно включите или отключите предупреждение, если политика CMake CMP<NNNN> не задана явно с помощью cmake_policy или неявно с помощью cmake_minimum_required. Это имеет смысл только для политик, которые не выдают предупреждения по умолчанию:",
	"assets/variables.json.CMAKE_POSITION_INDEPENDENT_CODE": "Значение по умолчанию для POSITION_INDEPENDENT_CODE целевых объектов.",
	"assets/variables.json.CMAKE_PREFIX_PATH": "Разделенный точками с запятыми список каталогов, указывающий префиксы, по которым выполняют поиск команды find_package, find_program, find_library, find_file и find_path. Каждая команда добавит соответствующие подкаталоги (такие как bin, lib или include), как указано в соответствующей документации.",
	"assets/variables.json.CMAKE_PROGRAM_PATH": "Разделенный точками с запятой список каталогов, который указывает путь поиска для команды find_program. Предназначен для задания проектом и по умолчанию пуст.",
	"assets/variables.json.CMAKE_PROJECT_DESCRIPTION": "Описание проекта верхнего уровня.",
	"assets/variables.json.CMAKE_PROJECT_HOMEPAGE_URL": "URL-адрес домашней страницы проекта верхнего уровня.",
	"assets/variables.json.CMAKE_PROJECT_INCLUDE": "Языковой файл CMake, который будет включен в качестве последнего шага всех вызовов команд проекта. Предназначен для вставки пользовательского кода в сборки проекта без изменения исходного кода. Подробное обсуждение файлов, потенциально включенных во время вызова project, приведены в разделе \"Вставка кода\".",
	"assets/variables.json.CMAKE_PROJECT_INCLUDE_BEFORE": "Языковой файл CMake, который будет включаться на первом этапе всех вызовов команд проекта. Предназначен для вставки пользовательского кода в сборки проекта без изменения исходного кода. Подробное обсуждение файлов, потенциально включенных во время вызова project, приведены в разделе \"Вставка кода\".",
	"assets/variables.json.CMAKE_PROJECT_NAME": "Имя проекта верхнего уровня.",
	"assets/variables.json.CMAKE_PROJECT_PROJECT-NAME_INCLUDE": "Языковой файл CMake, который должен быть включен в качестве последнего шага всех вызовов команд проекта, в которых в качестве имени проекта указано <PROJECT-NAME>. Предназначен для вставки пользовательского кода в сборки проекта без изменения исходного кода. Подробное обсуждение файлов, потенциально включенных во время вызова project, приведены в разделе \"Вставка кода\".",
	"assets/variables.json.CMAKE_PROJECT_PROJECT-NAME_INCLUDE_BEFORE": "Языковой файл CMake, который должен быть включен в качестве первого шага всех вызовов команд проекта, в которых в качестве имени проекта указано <PROJECT-NAME>. Предназначен для вставки пользовательского кода в сборки проекта без изменения исходного кода. Подробное обсуждение файлов, потенциально включенных во время вызова project, приведены в разделе \"Вставка кода\".",
	"assets/variables.json.CMAKE_PROJECT_TOP_LEVEL_INCLUDES": "Разделенный точками с запятой список языковых файлов CMake, включаемых в первый вызов проекта. Файлы будут включены сразу после чтения файла цепочки инструментов (если он указан) и задания переменных платформы, но до включения каких-либо языков. Поэтому переменные, зависящие от языка, в том числе CMAKE_<LANG>_COMPILER, могут не быть заданы. Дополнительные сведения о файлах, которые могут быть включены во время вызова проекта, см. в разделе \"Вставка кода\".",
	"assets/variables.json.CMAKE_PROJECT_VERSION": "Версии проекта верхнего уровня.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_MAJOR": "Основной номер версии для проекта верхнего уровня.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_MINOR": "Дополнительный номер версии для проекта верхнего уровня.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_PATCH": "Версии исправления для проекта верхнего уровня.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_TWEAK": "Версия оптимизации для проекта верхнего уровня.",
	"assets/variables.json.CMAKE_RANLIB": "Имя средства рандомизации для статических библиотек.",
	"assets/variables.json.CMAKE_REQUIRE_FIND_PACKAGE_PackageName": "Переменная для вызова find_package ОБЯЗТАТЕЛЬНА.",
	"assets/variables.json.CMAKE_ROOT": "Каталог установки для запуска cmake.",
	"assets/variables.json.CMAKE_RULE_MESSAGES": "Укажите, следует ли сообщение для каждого правила make.",
	"assets/variables.json.CMAKE_RUNTIME_OUTPUT_DIRECTORY": "Указывает, куда поместить конечные файлы RUNTIME при сборке.",
	"assets/variables.json.CMAKE_RUNTIME_OUTPUT_DIRECTORY_CONFIG": "Указывает, куда поместить конечные файлы RUNTIME при сборке для определенной конфигурации.",
	"assets/variables.json.CMAKE_SCRIPT_MODE_FILE": "Полный путь к файлу скрипта cmake -P, который сейчас обрабатывается.",
	"assets/variables.json.CMAKE_SHARED_LIBRARY_ENABLE_EXPORTS": "Укажите, создает ли общая библиотека файл импорта.",
	"assets/variables.json.CMAKE_SHARED_LIBRARY_PREFIX": "Префикс для общих библиотек, с которыми выполняется связывание.",
	"assets/variables.json.CMAKE_SHARED_LIBRARY_SUFFIX": "Суффикс для общих библиотек, с которыми устанавливается связь.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS": "Флаги компоновщика, используемые для создания общих библиотек.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS_CONFIG": "Флаги, используемые при компоновке общей библиотеки.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS_CONFIG_INIT": "Значение, используемое для инициализации записи кэша CMAKE_SHARED_LINKER_FLAGS_ при первой настройке дерева сборки. Эту переменную должен задавать файл цепочки инструментов. CMake может добавлять содержимое в начало или конец этого значения в зависимости от среды и целевой платформы.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS_INIT": "Значение, используемое для инициализации записи кэша CMAKE_SHARED_LINKER_FLAGS при первой настройке дерева сборки. Эту переменную должен задавать файл цепочки инструментов. CMake может добавлять содержимое в начало или конец этого значения в зависимости от среды и целевой платформы.",
	"assets/variables.json.CMAKE_SHARED_MODULE_PREFIX": "Префикс для загружаемых модулей, с которыми выполняется связывание.",
	"assets/variables.json.CMAKE_SHARED_MODULE_SUFFIX": "Суффикс для общих библиотек, с которыми устанавливается связь.",
	"assets/variables.json.CMAKE_SIZEOF_VOID_P": "Размер указателя void.",
	"assets/variables.json.CMAKE_SKIP_BUILD_RPATH": "Не включать пути RPATH в дерево сборки.",
	"assets/variables.json.CMAKE_SKIP_INSTALL_ALL_DEPENDENCY": "Не делайте целевой объект install зависящим от целевого объекта all.",
	"assets/variables.json.CMAKE_SKIP_INSTALL_RPATH": "Не включать пути RPATH в дерево установки.",
	"assets/variables.json.CMAKE_SKIP_INSTALL_RULES": "Указывает, следует ли отключить создание правил установки.",
	"assets/variables.json.CMAKE_SKIP_RPATH": "Если задано значение true, не добавляйте сведения о пути времени выполнения.",
	"assets/variables.json.CMAKE_SKIP_TEST_ALL_DEPENDENCY": "Контролируйте, зависит ли цель теста от цели all.",
	"assets/variables.json.CMAKE_SOURCE_DIR": "Путь к верхнему уровню дерева исходного кода.",
	"assets/variables.json.CMAKE_STAGING_PREFIX": "Этой переменной может быть присвоен путь для установки при перекрестной компиляции. Это может быть удобно, если путь в CMAKE_SYSROOT доступен только для чтения или должен оставаться исходным по другим причинам.",
	"assets/variables.json.CMAKE_STATIC_LIBRARY_PREFIX": "Префикс для статических библиотек, с которыми выполняется связывание.",
	"assets/variables.json.CMAKE_STATIC_LIBRARY_SUFFIX": "Суффикс для статических библиотек, с которыми выполняется связывание.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS": "Флаги, используемые для создания статических библиотек. Эти флаги будут передаваться в архиватор при создании статической библиотеки.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS_CONFIG": "Флаги, используемые для создания статических библиотек. Эти флаги будут передаваться в архиватор при создании статической библиотеки в конфигурации <CONFIG>.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS_CONFIG_INIT": "Значение, используемое для инициализации записи кэша CMAKE_STATIC_LINKER_FLAGS_ при первой настройке дерева сборки. Эту переменную должен задавать файл цепочки инструментов. CMake может добавлять содержимое в начало или конец этого значения в зависимости от среды и целевой платформы.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS_INIT": "Значение, используемое для инициализации записи кэша CMAKE_STATIC_LINKER_FLAGS при первой настройке дерева сборки. Эту переменную должен задавать файл цепочки инструментов. CMake может добавлять содержимое в начало или конец этого значения в зависимости от среды и целевой платформы.",
	"assets/variables.json.CMAKE_SUBLIME_TEXT_2_ENV_SETTINGS": "Эта переменная содержит список переменных env в виде списка токенов с синтаксисом переменная=значение.",
	"assets/variables.json.CMAKE_SUBLIME_TEXT_2_EXCLUDE_BUILD_TREE": "Если эта переменная имеет значение ON в конце файла CMakeLists.txt верхнего уровня, дополнительный генератор Sublime Text 2 исключает это дерево сборки из .sublime-project, если он находится внутри дерева исходного кода.",
	"assets/variables.json.CMAKE_SUPPRESS_REGENERATION": "Если CMAKE_SUPPRESS_REGENERATION имеет значение OFF (по умолчанию), CMake добавляет специальный целевой объект, от которого зависят все другие целевые объекты, проверяющий систему сборки и при необходимости перезапускающий CMake для повторного создания системы сборки при изменении исходного кода спецификации целевого объекта.",
	"assets/variables.json.CMAKE_Swift_COMPILATION_MODE": "Укажите, как Swift компилирует цель. Эта переменная используется для инициализации свойства Swift_COMPILATION_MODE для целей по мере их создания.",
	"assets/variables.json.CMAKE_Swift_LANGUAGE_VERSION": "Укажите номер версии языка Swift. Если значение не задано, предполагается, что используется самая старая известная версия, доступная в версии Xcode узла:",
	"assets/variables.json.CMAKE_Swift_MODULE_DIRECTORY": "Каталог выходных данных модуля Swift.",
	"assets/variables.json.CMAKE_Swift_NUM_THREADS": "Число потоков для параллельной компиляции целевых объектов Swift.",
	"assets/variables.json.CMAKE_SYSROOT": "Путь для передачи компилятору во флаге --sysroot.",
	"assets/variables.json.CMAKE_SYSROOT_COMPILE": "Путь для передачи компилятору во флаге --sysroot при компиляции исходных файлов. Совпадает с CMAKE_SYSROOT, но используется только для компиляции исходных файлов, но не для компоновки.",
	"assets/variables.json.CMAKE_SYSROOT_LINK": "Путь для передачи компилятору во флаге --sysroot при компоновке. Совпадает с CMAKE_SYSROOT, но используется только для компоновки, но не для компиляции исходных файлов.",
	"assets/variables.json.CMAKE_SYSTEM": "Составное имя операционной системы, для которой CMake выполняет компиляцию.",
	"assets/variables.json.CMAKE_SYSTEM_APPBUNDLE_PATH": "Путь поиска для пакетов приложений macOS, используемый командами find_program и find_package. По умолчанию содержит стандартные каталоги для текущей системы. Не предназначен для изменения проектом, для этого используйте CMAKE_APPBUNDLE_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_FRAMEWORK_PATH": "Путь поиска для платформ macOS, используемый командами find_library, find_package, find_path и find_file. По умолчанию содержит стандартные каталоги для текущей системы. Не предназначен для изменения проектом, для этого используйте CMAKE_FRAMEWORK_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_IGNORE_PATH": "Разделенный точками с запятой список каталогов, которые будут игнорироваться различными командами find...().",
	"assets/variables.json.CMAKE_SYSTEM_IGNORE_PREFIX_PATH": "Разделенный точками с запятой список префиксов поиска, которые должны игнорироваться командами find_program, find_library, find_file и find_path. Эти префиксы также игнорируются режимом Config команды find_package (режим Module не учитывает этот список префиксов). Чтобы вместо префиксов игнорировать определенные каталоги, см. CMAKE_IGNORE_NONPREFIX_VAR.",
	"assets/variables.json.CMAKE_SYSTEM_INCLUDE_PATH": "Разделенный точками с запятой список каталогов, который указывает путь поиска для команд find_file и find_path. По умолчанию содержит стандартные каталоги для текущей системы. Не предназначен для задания проектом; для этого используйте CMAKE_INCLUDE_PATH. См. также описание CMAKE_SYSTEM_PREFIX_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_LIBRARY_PATH": "Разделенный точками с запятой список каталогов, который указывает путь поиска для команды find_library. По умолчанию содержит стандартные каталоги для текущей системы. Не предназначен для изменения проектом. Используйте для этого CMAKE_LIBRARY_PATH. См. также описание CMAKE_SYSTEM_PREFIX_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_NAME": "Имя операционной системы, для которой CMake выполняет сборку. Сведения о версии операционной системы см. в описании переменной CMAKE_SYSTEM_VERSION.",
	"assets/variables.json.CMAKE_SYSTEM_PREFIX_PATH": "Разделенный точками с запятыми список каталогов, указывающий префиксы, по которым выполняют поиск команды find_package, find_program, find_library, find_file и find_path. Каждая команда добавит соответствующие подкаталоги (такие как bin, lib или include), как указано в соответствующей документации.",
	"assets/variables.json.CMAKE_SYSTEM_PROCESSOR": "Если перекрестная компиляция не используется, эта переменная имеет то же значение, что и переменная CMAKE_HOST_SYSTEM_PROCESSOR. Во многих случаях она будет соответствовать целевой архитектуре сборки, но это не гарантируется. (Например, в Windows узел может иметь значение \"AMD64\", даже если используется компилятор MSVC cl с 32-разрядным целевым объектом.)",
	"assets/variables.json.CMAKE_SYSTEM_PROGRAM_PATH": "Разделенный точками с запятой список каталогов, который указывает путь поиска для команды find_program. По умолчанию содержит стандартные каталоги для текущей системы. Не предназначен для изменения проектом. Используйте для этого CMAKE_PROGRAM_PATH. См. также описание CMAKE_SYSTEM_PREFIX_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_VERSION": "Версия операционной системы, для которой CMake выполняет сборку. Сведения об имени операционной системы см. в описании переменной CMAKE_SYSTEM_NAME.",
	"assets/variables.json.CMAKE_TASKING_TOOLSET": "Выберите набор инструментов задач, который предоставляет компилятор",
	"assets/variables.json.CMAKE_TEST_LAUNCHER": "Эта переменная используется для инициализации целевого свойства TEST_LAUNCHER исполняемых целевых объектов по мере их создания. Он используется для указания средства запуска для запуска тестов, добавляемых командой add_test, которые запускают исполняемый файл.",
	"assets/variables.json.CMAKE_TLS_CAINFO": "Укажите значение по умолчанию для параметров TLS_CAINFO файла и файловых команд. По умолчанию оно удалено.",
	"assets/variables.json.CMAKE_TLS_VERIFY": "Укажите значение по умолчанию для параметров TLS_VERIFY файловых команд. Если эта переменная не задано, команды проверка переменной CMAKE_TLS_VERIFY среды. Если ни один из этих параметров не задан, значение по умолчанию отключено.",
	"assets/variables.json.CMAKE_TLS_VERSION": "Укажите значение по умолчанию для параметра TLS_VERSION файловых команд. Если эта переменная не задано, команды проверка переменной CMAKE_TLS_VERSION среды.",
	"assets/variables.json.CMAKE_TOOLCHAIN_FILE": "Путь к файлу цепочки инструментов, предоставленному для cmake.",
	"assets/variables.json.CMAKE_TRY_COMPILE_CONFIGURATION": "Конфигурация сборки, используемая для проектов try_compile и try_run.",
	"assets/variables.json.CMAKE_TRY_COMPILE_NO_PLATFORM_VARIABLES": "Установите значение true, чтобы команда try_compile не распространяла какие-либо переменные платформы в тестовый проект.",
	"assets/variables.json.CMAKE_TRY_COMPILE_PLATFORM_VARIABLES": "Список переменных, которые сигнатура исходного файла команды try_compile должна распространить в тестовый проект, чтобы ориентироваться на ту же платформу, что и основной проект.",
	"assets/variables.json.CMAKE_TRY_COMPILE_TARGET_TYPE": "Тип целевого объекта, созданного для вызовов try_compile с помощью сигнатуры исходного файла. Допустимые значения:",
	"assets/variables.json.CMAKE_TWEAK_VERSION": "Определено значение 0 для обеспечения совместимости с кодом, написанным для более ранних версий CMake, где могли быть определены более высокие значения.",
	"assets/variables.json.CMAKE_UNITY_BUILD": "Эта переменная используется для инициализации свойства UNITY_BUILD целевых объектов при их создании. Если задано значение true, включается пакетная компиляция нескольких источников в каждом целевом объекте. Эта функция известна как сборка Unity или Jumbo.",
	"assets/variables.json.CMAKE_UNITY_BUILD_BATCH_SIZE": "Эта переменная используется для инициализации свойства UNITY_BUILD_BATCH_SIZE целевых объектов при их создании. Задает верхний предел по умолчанию для количества исходных файлов, которые могут быть объединены в одном исходном файле Unity, когда для целевого объекта включены сборки Unity.",
	"assets/variables.json.CMAKE_UNITY_BUILD_UNIQUE_ID": "Эта переменная используется для инициализации свойства UNITY_BUILD_UNIQUE_ID целевых объектов при их создании. Она задает имя уникального идентификатора, создаваемого для каждого файла в сборке Unity.",
	"assets/variables.json.CMAKE_USER_MAKE_RULES_OVERRIDE": "Укажите файл CMake, переопределяющий сведения о платформе.",
	"assets/variables.json.CMAKE_USER_MAKE_RULES_OVERRIDE_LANG": "Укажите файл CMake, переопределяющий сведения о платформе для <LANG>.",
	"assets/variables.json.CMAKE_USE_RELATIVE_PATHS": "Эта переменная не оказывает никакого влияния. Ее частичная функциональность, реализованная в предыдущих версиях, была удалена в CMake 3.4.",
	"assets/variables.json.CMAKE_VERBOSE_MAKEFILE": "Включение подробного вывода из сборок makefile.",
	"assets/variables.json.CMAKE_VERIFY_INTERFACE_HEADER_SETS": "Эта переменная используется для инициализации свойства VERIFY_INTERFACE_HEADER_SETS целевых объектов при их создании. Установка значения \"истина\" включает проверку набора заголовков.",
	"assets/variables.json.CMAKE_VERSION": "Строка версии CMake в виде трех неотрицательных целочисленных компонентов, разделенных точкой (.), за которыми может стоять \"-\" и находиться другая информация. Первые два компонента представляют уровень функции, а третий компонент представляет уровень исправления ошибок или дату разработки.",
	"assets/variables.json.CMAKE_VISIBILITY_INLINES_HIDDEN": "Значение по умолчанию для целевого свойства VISIBILITY_INLINES_HIDDEN при создании целевого объекта.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_COMMAND": "Эта переменная используется для инициализации свойства VS_DEBUGGER_COMMAND в каждом целевом объекте при его создании. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS": "Эта переменная используется для инициализации свойства VS_DEBUGGER_COMMAND_ARGUMENTS в каждом целевом объекте при его создании. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_ENVIRONMENT": "Эта переменная используется для инициализации свойства VS_DEBUGGER_ENVIRONMENT в каждом целевом объекте при его создании. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_WORKING_DIRECTORY": "Эта переменная используется для инициализации свойства VS_DEBUGGER_WORKING_DIRECTORY в каждом целевом объекте при его создании. Дополнительные сведения см. в описании этого целевого свойства.",
	"assets/variables.json.CMAKE_VS_DEVENV_COMMAND": "Генераторы для Visual Studio 12 2013 и более поздних версий задают для этой переменной команду devenv.com, установленную с соответствующей версией Visual Studio. Обратите внимание, что эта переменная может быть пустой в выпусках Visual Studio Express, так как там это средство отсутствует.",
	"assets/variables.json.CMAKE_VS_GLOBALS": "Список записей ключ=значение, задаваемых для отдельных целевых объектов в качестве целевых свойств VS_GLOBAL_ с переменная=ключ и значением Value.",
	"assets/variables.json.CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD": "Включение целевого объекта INSTALL в сборку по умолчанию.",
	"assets/variables.json.CMAKE_VS_INCLUDE_PACKAGE_TO_DEFAULT_BUILD": "Включение целевого объекта PACKAGE в сборку по умолчанию.",
	"assets/variables.json.CMAKE_VS_INTEL_Fortran_PROJECT_VERSION": "При создании для Visual Studio 12 2013 или более поздней версии с установленным подключаемым модулем Intel Fortran этот параметр указывает версию формата файла проекта VFPROJ. Он предназначен для внутреннего использования CMake и не должен использоваться кодом проекта.",
	"assets/variables.json.CMAKE_VS_JUST_MY_CODE_DEBUGGING": "Включите функцию \"Только мой код\" в отладчике Visual Studio.",
	"assets/variables.json.CMAKE_VS_MSBUILD_COMMAND": "Генераторы для Visual Studio 12 2013 и более поздних версий задают для этой переменной команду MSBuild.exe, установленную с соответствующей версией Visual Studio.",
	"assets/variables.json.CMAKE_VS_NO_COMPILE_BATCHING": "Отключите пакетную компиляцию при использовании генераторов Visual Studio.",
	"assets/variables.json.CMAKE_VS_NsightTegra_VERSION": "Когда используется генератор Visual Studio с переменной CMAKE_SYSTEM_NAME, которой присвоено значение Android, эта переменная содержит номер версии установленного NVIDIA Nsight Tegra Visual Studio Edition.",
	"assets/variables.json.CMAKE_VS_NUGET_PACKAGE_RESTORE": "При использовании генератора Visual Studio эта переменная кэша определяет, будет ли msbuild автоматически пытаться восстанавливать пакеты NuGet перед сборкой. Определить пакеты NuGet можно с помощью свойства VS_PACKAGE_REFERENCES целевого объекта. Если ссылки на пакеты не определены, этот параметр ни на что не повлияет.",
	"assets/variables.json.CMAKE_VS_PLATFORM_NAME": "Имя целевой платформы Visual Studio, используемой текущим генератором.",
	"assets/variables.json.CMAKE_VS_PLATFORM_NAME_DEFAULT": "Название целевой платформы Visual Studio по умолчанию для текущего генератора без учета значения переменной CMAKE_GENERATOR_PLATFORM. Для генераторов Visual Studio 2017 и более ранних версий всегда имеет значение Win32. Для Visual Studio 2019 и более поздних версий зависит от платформы узла.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET": "Имя набора инструментов платформы Visual Studio.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_CUDA": "Версия NVIDIA CUDA Toolkit, набор инструментов Visual Studio которой следует использовать.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_CUDA_CUSTOM_DIR": "Путь к автономному набору инструментов NVIDIA CUDA (например, извлеченному из установщика).",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_FORTRAN": "Компилятор Фортрана, который будет использоваться проектами Visual Studio.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE": "Предпочитаемая архитектура средства Visual Studio.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_VERSION": "Версия набора инструментов платформы Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_EXCLUDE_DIRECTORIES": "Эта переменная позволяет переопределять каталоги исключаемых файлов по умолчанию в Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_EXECUTABLE_DIRECTORIES": "Эта переменная позволяет переопределять каталоги исполняемых файлов по умолчанию в Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_INCLUDE_DIRECTORIES": "Эта переменная позволяет переопределять каталоги включаемых файлов по умолчанию в Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_LIBRARY_DIRECTORIES": "Эта переменная позволяет переопределять каталоги библиотек по умолчанию в Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_LIBRARY_WINRT_DIRECTORIES": "Эта переменная позволяет переопределять каталоги библиотек WinRT по умолчанию в Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_REFERENCE_DIRECTORIES": "Эта переменная позволяет переопределять каталоги ссылок по умолчанию в Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_SOURCE_DIRECTORIES": "Эта переменная позволяет переопределять исходные каталоги по умолчанию в Visual Studio.",
	"assets/variables.json.CMAKE_VS_TARGET_FRAMEWORK_IDENTIFIER": "Идентификатор требуемой версии .NET Framework Visual Studio.",
	"assets/variables.json.CMAKE_VS_TARGET_FRAMEWORK_TARGETS_VERSION": "Целевая версия требуемой версии .NET Framework Visual Studio.",
	"assets/variables.json.CMAKE_VS_TARGET_FRAMEWORK_VERSION": "Версия требуемой версии .NET Framework Visual Studio.",
	"assets/variables.json.CMAKE_VS_USE_DEBUG_LIBRARIES": "Укажите генераторам Visual Studio, какие конфигурации считаются отладочными. Это управляет настройкой UseDebugLibraries в каждой конфигурации файла .vcxproj.",
	"assets/variables.json.CMAKE_VS_VERSION_BUILD_NUMBER": "Версия Visual Studio.",
	"assets/variables.json.CMAKE_VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION": "Попросите Visual Studio генераторам использовать указанную минимальную версию целевой платформы Windows.",
	"assets/variables.json.CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION": "Версия целевой платформы Windows для Visual Studio.",
	"assets/variables.json.CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM": "Переопределите максимальную версию пакета SDK для Windows 10 для VS 2015 и других версий.",
	"assets/variables.json.CMAKE_VS_WINRT_BY_DEFAULT": "Уведомляет генераторы Visual Studio 2010 и более поздних версий о том, что целевая платформа включает компиляцию WinRT по умолчанию и ее необходимо явно отключить, если параметр /ZW или VS_WINRT_COMPONENT опущен (а не включать при наличии любого из этих параметров).",
	"assets/variables.json.CMAKE_WARN_DEPRECATED": "Указывает, следует ли выдавать предупреждения для нерекомендуемых функций.",
	"assets/variables.json.CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION": "Настройте скрипт cmake_install.cmake для выдачи предупреждения при каждом обнаружении файла с абсолютным назначением установки INSTALL DESTINATION.",
	"assets/variables.json.CMAKE_WATCOM_RUNTIME_LIBRARY": "Выберите библиотеку среды выполнения Watcom для использования компиляторами, нацеленными на MSVC ABI. Эта переменная используется для инициализации свойства MSVC_RUNTIME_LIBRARY для всех целевых объектов при их создании. Она также распространяетсяв тестовый проект при вызовах команды try_compile.",
	"assets/variables.json.CMAKE_WIN32_EXECUTABLE": "Значение по умолчанию для WIN32_EXECUTABLE целевых объектов.",
	"assets/variables.json.CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS": "Значение по умолчанию для целевого свойства WINDOWS_EXPORT_ALL_SYMBOLS. Эта переменная используется для инициализации указанного свойства для каждого целевого объекта при его создании.",
	"assets/variables.json.CMAKE_XCODE_ATTRIBUTE_an-attribute": "Укажите атрибуты целевого объекта Xcode напрямую.",
	"assets/variables.json.CMAKE_XCODE_BUILD_SYSTEM": "Выбор системы сборки Xcode.",
	"assets/variables.json.CMAKE_XCODE_GENERATE_SCHEME": "Если включен, генератор Xcode создаст файлы схемы. Они могут быть удобны для вызова действий анализа, архивации, сборки для тестирования и тестирования из командной строки.",
	"assets/variables.json.CMAKE_XCODE_GENERATE_TOP_LEVEL_PROJECT_ONLY": "Если включен, генератор Xcode создаст только один файл проекта Xcode для самой верхней команды project() вместо создания такого файла для каждой команды project().",
	"assets/variables.json.CMAKE_XCODE_LINK_BUILD_PHASE_MODE": "Эта переменная используется для инициализации свойства XCODE_LINK_BUILD_PHASE_MODE целевых объектов. Она влияет на методы, используемые генератором Xcode для компоновки различных типов библиотек. Значение по умолчанию — \"NONE\".",
	"assets/variables.json.CMAKE_XCODE_PLATFORM_TOOLSET": "Выбор компилятора Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER": "Указывает, следует ли включить санитайзер адресов в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN": "Указывает, следует ли включить обнаружение использования стека в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING": "Следует ли включать параметр \"Разрешить отладку\" при использовании браузера версий документов в разделе \"Параметры\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER": "Указывает, следует ли отключить Main Thread Checker в разделе Diagnostics созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS": "Указывает, следует ли включить загрузки динамических библиотек в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE": "Указывает, следует ли включить использование API динамического компоновщика в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENABLE_GPU_API_VALIDATION": "Значение свойства для Metal: проверка API в разделе \"Параметры\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE": "Значение свойства \"GPU Frame Capture\" в разделе параметров сформированной схемы Xcode. Примеры значений: \"Metal\" и \"Disabled\".",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION": "Значение свойства для Metal: проверка шейдера в разделе \"Параметры\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENVIRONMENT": "Укажите переменные среды, которые нужно добавить в раздел аргументов созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_GUARD_MALLOC": "Указывает, следует ли включить Guard Malloc в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_LAUNCH_CONFIGURATION": "Настройте конфигурацию сборки для запуска целевого объекта.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_LAUNCH_MODE": "Значение свойства для Launch в разделе \"Сведения\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP": "Указывает, следует ли включить Main Thread Checker — Pause при проблемах в разделе Diagnostics созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MALLOC_GUARD_EDGES": "Указывает, следует ли включить Malloc Guard Edges в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MALLOC_SCRIBBLE": "Указывает, следует ли включить Malloc Scribble в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MALLOC_STACK": "Указывает, следует ли включить Malloc Stack в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_THREAD_SANITIZER": "Указывает, следует ли включить санитайзер потоков в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_THREAD_SANITIZER_STOP": "Указывает, следует ли включить параметр приостановки при проблемах для санитайзера потоков в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER": "Указывает, следует ли включить санитайзер неопределенного поведения в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP": "Указывает, следует ли включить параметр приостановки при проблемах для санитайзера неопределенного поведения в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_WORKING_DIRECTORY": "Укажите рабочий каталог для действий запуска и профилирования в созданной схеме Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ZOMBIE_OBJECTS": "Указывает, следует ли включить зомби-объекты в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.CMAKE_XCODE_XCCONFIG": "Если это значение задано, генератор Xcode зарегистрирует указанный файл в качестве глобального файла XCConfig. Для файлов XCConfig уровня целевого объекта см. свойство целевого объекта XCODE_XCCONFIG.",
	"assets/variables.json.CPACK_ABSOLUTE_DESTINATION_FILES": "Список файлов, которые были установлены с помощью абсолютного конечного пути ABSOLUTE DESTINATION.",
	"assets/variables.json.CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY": "Логический переключатель для включения или исключения каталога верхнего уровня (вариант компонента).",
	"assets/variables.json.CPACK_CUSTOM_INSTALL_VARIABLES": "Переменные CPack (устанавливаемые, например, с помощью сценариев cpack -D, CPackConfig.cmake или CPACK_PROJECT_CONFIG_FILE) не отображаются непосредственно в сценариях установки. Вместо этого можно передать список пар varName=value в переменной CPACK_CUSTOM_INSTALL_VARIABLES. Во время установки каждый элемент списка приведет к тому, что переменной с указанным именем (varName) будет присвоено заданное значение. Знак = можно опустить для пустого значения.",
	"assets/variables.json.CPACK_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION": "Настройте CPack для выдачи ошибки при обнаружении файла с абсолютным назначением установки INSTALL DESTINATION.",
	"assets/variables.json.CPACK_INCLUDE_TOPLEVEL_DIRECTORY": "Логический переключатель для включения и исключения каталога верхнего уровня.",
	"assets/variables.json.CPACK_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS": "Разрешения по умолчанию для каталогов, неявно созданных во время упаковки.",
	"assets/variables.json.CPACK_PACKAGING_INSTALL_PREFIX": "Префикс, используемый в созданном пакете.",
	"assets/variables.json.CPACK_SET_DESTDIR": "Логический переключатель, предписывающий CPack использовать механизм DESTDIR при упаковке.",
	"assets/variables.json.CPACK_WARN_ON_ABSOLUTE_INSTALL_DESTINATION": "Настройте CPack для выдачи предупреждения при каждом обнаружении файла с абсолютным назначением установки INSTALL DESTINATION.",
	"assets/variables.json.CTEST_BINARY_DIRECTORY": "Укажите параметр BuildDirectory CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_BUILD_COMMAND": "Укажите параметр MakeCommand CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_BUILD_NAME": "Укажите параметр BuildName CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_BZR_COMMAND": "Укажите параметр BZRCommand CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_BZR_UPDATE_OPTIONS": "Укажите параметр BZRUpdateOptions CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_CHANGE_ID": "Укажите параметр ChangeId CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_CHECKOUT_COMMAND": "Предписание команде ctest_start о том, как извлекать или инициализировать исходный каталог в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_CONFIGURATION_TYPE": "Укажите параметр DefaultCTestConfigurationType CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_CONFIGURE_COMMAND": "Укажите параметр ConfigureCommand CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_COVERAGE_COMMAND": "Укажите параметр CoverageCommand CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_COVERAGE_EXTRA_FLAGS": "Укажите параметр CoverageExtraFlags CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_CURL_OPTIONS": "Укажите параметр CurlOptions CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_CUSTOM_COVERAGE_EXCLUDE": "Список регулярных выражений, которые будут использоваться для исключения файлов (по их пути) из выходных данных охвата командой ctest_coverage.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_EXCEPTION": "Список регулярных выражений, которые будут использоваться для исключения при обнаружении сообщений об ошибках в выходных данных сборки командой ctest_build.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_MATCH": "Список регулярных выражений, которые будут использоваться для обнаружения сообщений об ошибках в выходных данных сборки командой ctest_build.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_POST_CONTEXT": "Количество строк, включаемых в качестве контекста, которые следуют за сообщением об ошибке, выданном командой ctest_build. Значение по умолчанию: 10.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_PRE_CONTEXT": "Количество строк, включаемых в качестве контекста, которые предшествуют сообщению об ошибке, выданному командой ctest_build. Значение по умолчанию: 10.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE": "При сохранении выходных данных неудачного теста это максимальный размер в байтах, который будет собран командой ctest_test. Значение по умолчанию: 307200 (300КиБ). Сведения о возможных режимах усечения приведены в CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_NUMBER_OF_ERRORS": "Максимальное количество ошибок в отдельном шаге сборки, которые будут обнаружены. После этого команда ctest_test усечет выходные данные. Значение по умолчанию: 50.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_NUMBER_OF_WARNINGS": "Максимальное количество предупреждений в отдельном шаге сборки, которые будут обнаружены. После этого команда ctest_test усечет выходные данные. Значение по умолчанию: 50.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE": "При сохранении выходных данных успешного теста это максимальный размер в байтах, который будет собран командой ctest_test. Значение по умолчанию: 1024 (1 КиБ). Сведения о возможных режимах усечения приведены в CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION.",
	"assets/variables.json.CTEST_CUSTOM_MEMCHECK_IGNORE": "Список регулярных выражений, используемых для исключения тестов при выполнении команды ctest_memcheck.",
	"assets/variables.json.CTEST_CUSTOM_POST_MEMCHECK": "Список команд, выполняемых в конце команды ctest_memcheck.",
	"assets/variables.json.CTEST_CUSTOM_POST_TEST": "Список команд, выполняемых в конце команды ctest_test.",
	"assets/variables.json.CTEST_CUSTOM_PRE_MEMCHECK": "Список команд, выполняемых в начале команды ctest_memcheck.",
	"assets/variables.json.CTEST_CUSTOM_PRE_TEST": "Список команд, выполняемых в начале команды ctest_test.",
	"assets/variables.json.CTEST_CUSTOM_TESTS_IGNORE": "Список имен тестов, которые следует исключить из набора тестов, выполняемых командой ctest_test.",
	"assets/variables.json.CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION": "Установите режим усечения вывода теста, если максимальный размер настроен с помощью переменных CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE или CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE. По умолчанию хвост вывода будет усечен. Другими возможными значениями являются середина и голова.",
	"assets/variables.json.CTEST_CUSTOM_WARNING_EXCEPTION": "Список регулярных выражений, которые будут использоваться для исключения при обнаружении предупреждений в выходных данных сборки командой ctest_build.",
	"assets/variables.json.CTEST_CUSTOM_WARNING_MATCH": "Список регулярных выражений, которые будут использоваться для обнаружения предупреждений в выходных данных сборки командой ctest_build.",
	"assets/variables.json.CTEST_CVS_CHECKOUT": "Не рекомендуется. Вместо этого используйте CTEST_CHECKOUT_COMMAND.",
	"assets/variables.json.CTEST_CVS_COMMAND": "Укажите параметр CVSCommand CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_CVS_UPDATE_OPTIONS": "Укажите параметр CVSUpdateOptions CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_DROP_LOCATION": "Укажите параметр DropLocation CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_DROP_METHOD": "Укажите параметр DropMethod CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_DROP_SITE": "Укажите параметр DropSite CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_DROP_SITE_CDASH": "Укажите параметр IsCDash CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_DROP_SITE_PASSWORD": "Укажите параметр DropSitePassword CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_DROP_SITE_USER": "Укажите параметр DropSiteUser CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_EXTRA_COVERAGE_GLOB": "Список регулярных выражений, которые будут использоваться для поиска файлов, которые требуется охватить, командой ctest_coverage.",
	"assets/variables.json.CTEST_GIT_COMMAND": "Укажите параметр GITCommand CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_GIT_INIT_SUBMODULES": "Укажите параметр GITInitSubmodules CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_GIT_UPDATE_CUSTOM": "Укажите параметр GITUpdateCustom CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_GIT_UPDATE_OPTIONS": "Укажите параметр GITUpdateOptions CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_HG_COMMAND": "Укажите параметр HGCommand CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_HG_UPDATE_OPTIONS": "Укажите параметр HGUpdateOptions CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_LABELS_FOR_SUBPROJECTS": "Укажите параметр LabelsForSubprojects CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_COMMAND": "Укажите параметр MemoryCheckCommand CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_COMMAND_OPTIONS": "Укажите параметр MemoryCheckCommandOptions CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_SANITIZER_OPTIONS": "Укажите параметр MemoryCheckSanitizerOptions CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_SUPPRESSIONS_FILE": "Укажите параметр MemoryCheckSuppressionFile CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_TYPE": "Укажите параметр MemoryCheckType CTest в сценарии клиента для панели мониторинга ctest. Допустимые значения: Valgrind, Purify, BoundsChecker, DrMemory, CudaSanitizer, ThreadSanitizer, AddressSanitizer, LeakSanitizer, MemorySanitizer и UndefinedBehaviorSanitizer.",
	"assets/variables.json.CTEST_NIGHTLY_START_TIME": "Укажите параметр NightlyStartTime CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_P4_CLIENT": "Укажите параметр P4Client CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_P4_COMMAND": "Укажите параметр P4Command CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_P4_OPTIONS": "Укажите параметр P4Options CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_P4_UPDATE_OPTIONS": "Укажите параметр P4UpdateOptions CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_RESOURCE_SPEC_FILE": "Укажите параметр ResourceSpecFile CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_RUN_CURRENT_SCRIPT": "Установив значение 0, можно запретить повторный запуск ctest при достижении конца скрипта путем вызова ctest -S.",
	"assets/variables.json.CTEST_SCP_COMMAND": "Устаревший параметр. Не используется.",
	"assets/variables.json.CTEST_SCRIPT_DIRECTORY": "Каталог, содержащий сценарий CTest верхнего уровня. Концепция аналогична CMAKE_SOURCE_DIR.",
	"assets/variables.json.CTEST_SITE": "Укажите параметр Site CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_SOURCE_DIRECTORY": "Укажите параметр SourceDirectory CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_SUBMIT_INACTIVITY_TIMEOUT": "Укажите параметр CTest SubmitInactivityTimeout в сценарии клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_SUBMIT_URL": "Укажите параметр SubmitURL CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_SVN_COMMAND": "Укажите параметр SVNCommand CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_SVN_OPTIONS": "Укажите параметр SVNOptions CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_SVN_UPDATE_OPTIONS": "Укажите параметр SVNUpdateOptions CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_TEST_LOAD": "Укажите параметр TestLoad в шаге теста CTest скрипта клиента панели мониторинга ctest. Это задает значение по умолчанию для параметра TEST_LOAD команды ctest_test.",
	"assets/variables.json.CTEST_TEST_TIMEOUT": "Укажите параметр TimeOut CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_TLS_VERIFY": "Укажите параметр TLSVerify CTest в скрипте клиента панели мониторинга ctest или в CMakeLists.txt проекта перед включением модуля CTest. Значение — это логическое значение, указывающее, следует ли проверять сертификат сервера при отправке на панель мониторинга https:// URL-адресов.",
	"assets/variables.json.CTEST_TLS_VERSION": "Укажите параметр TLSVersion CTest в скрипте клиента панели мониторинга ctest или в CMakeLists.txt проекта перед включением модуля CTest. Значение является минимальной версией TLS, разрешенной при отправке на панель мониторинга https:// URL-адресов.",
	"assets/variables.json.CTEST_TRIGGER_SITE": "Устаревший параметр. Не используется.",
	"assets/variables.json.CTEST_UPDATE_COMMAND": "Укажите параметр UpdateCommand CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_UPDATE_OPTIONS": "Укажите параметр UpdateOptions CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_UPDATE_VERSION_ONLY": "Укажите параметр UpdateVersionOnly CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_UPDATE_VERSION_OVERRIDE": "Укажите параметр UpdateVersionOverride CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CTEST_USE_LAUNCHERS": "Укажите параметр UseLaunchers CTest в скрипте клиента панели мониторинга ctest.",
	"assets/variables.json.CYGWIN": "Значение true для Cygwin.",
	"assets/variables.json.ENV": "Оператор для чтения переменных среды.",
	"assets/variables.json.EXECUTABLE_OUTPUT_PATH": "Старая переменная расположения исполняемого файла.",
	"assets/variables.json.GHSMULTI": "Значение равно 1 при использовании генератора Green Hills MULTI.",
	"assets/variables.json.IOS": "Задайте значение 1, если целевой системой (CMAKE_SYSTEM_NAME) является iOS.",
	"assets/variables.json.LIBRARY_OUTPUT_PATH": "Старая переменная расположения библиотеки.",
	"assets/variables.json.LINUX": "Установите значение true, если целевой системой является Linux.",
	"assets/variables.json.MINGW": "Задайте значение true, если хотя бы один язык включен с компилятором, нацеленным на ABI GNU в Windows (MinGW).",
	"assets/variables.json.MSVC": "Задайте значение true, если компилятор представляет собой одну из версий Microsoft Visual C++ или другого компилятора, имитирующего синтаксис командной строки Visual C++.",
	"assets/variables.json.MSVC10": "Не рекомендуется. Вместо этого используйте переменную MSVC_VERSION.",
	"assets/variables.json.MSVC11": "Не рекомендуется. Вместо этого используйте переменную MSVC_VERSION.",
	"assets/variables.json.MSVC12": "Не рекомендуется. Вместо этого используйте переменную MSVC_VERSION.",
	"assets/variables.json.MSVC14": "Не рекомендуется. Вместо этого используйте переменную MSVC_VERSION.",
	"assets/variables.json.MSVC60": "Не рекомендуется. Вместо этого используйте переменную MSVC_VERSION.",
	"assets/variables.json.MSVC70": "Не рекомендуется. Вместо этого используйте переменную MSVC_VERSION.",
	"assets/variables.json.MSVC71": "Не рекомендуется. Вместо этого используйте переменную MSVC_VERSION.",
	"assets/variables.json.MSVC80": "Не рекомендуется. Вместо этого используйте переменную MSVC_VERSION.",
	"assets/variables.json.MSVC90": "Не рекомендуется. Вместо этого используйте переменную MSVC_VERSION.",
	"assets/variables.json.MSVC_IDE": "Значение true при использовании интегрированной среды разработки Microsoft Visual C++.",
	"assets/variables.json.MSVC_TOOLSET_VERSION": "Используемая версия набора инструментов Microsoft Visual C/C++ (при наличии). Если используется аналог MSVC, эта переменная задается с учетом версии компилятора, указанной переменной MSVC_VERSION.",
	"assets/variables.json.MSVC_VERSION": "Используемая версия Microsoft Visual C/C++ (при наличии). Если используется компилятор, имитирующий Visual C++, для этой переменной задается версия набора инструментов, указанная определением препроцессора _MSC_VER.",
	"assets/variables.json.MSYS": "Значение true при использовании генератора MSYS Makefiles.",
	"assets/variables.json.PackageName_ROOT": "Вызовы find_package(<PackageName>) выполнят поиск среди префиксов, указанных в переменной <PackageName>_ROOT CMake, где <PackageName> — это имя, назначенное вызову find_package (с соблюдением регистра), а _ROOT — литерал. Например, find_package(Foo) будет искать префиксы, указанные в переменной CMake Foo_ROOT (если она задана). См. политику CMP0074.",
	"assets/variables.json.PROJECT-NAME_BINARY_DIR": "Каталог двоичных файлов верхнего уровня для указанного проекта.",
	"assets/variables.json.PROJECT-NAME_DESCRIPTION": "Значение, заданное для параметра DESCRIPTION в последнем вызове команды project с именем проекта <PROJECT-NAME> (при наличии).",
	"assets/variables.json.PROJECT-NAME_HOMEPAGE_URL": "Значение, заданное для параметра HOMEPAGE_URL в последнем вызове команды project с именем проекта <PROJECT-NAME> (при наличии).",
	"assets/variables.json.PROJECT-NAME_IS_TOP_LEVEL": "Логическая переменная, указывающая, был ли вызван названный проект в файле CMakeLists.txt верхнего уровня.",
	"assets/variables.json.PROJECT-NAME_SOURCE_DIR": "Исходный каталог верхнего уровня для указанного проекта.",
	"assets/variables.json.PROJECT-NAME_VERSION": "Значение, заданное для параметра VERSION в последнем вызове команды project с именем проекта <PROJECT-NAME> (при наличии).",
	"assets/variables.json.PROJECT-NAME_VERSION_MAJOR": "Первый компонент номера версии у переменной <PROJECT-NAME>_VERSION, как задано командой project.",
	"assets/variables.json.PROJECT-NAME_VERSION_MINOR": "Второй компонент номера версии у переменной <PROJECT-NAME>_VERSION, как задано командой project.",
	"assets/variables.json.PROJECT-NAME_VERSION_PATCH": "Третий компонент номера версии у переменной <PROJECT-NAME>_VERSION, как задано командой project.",
	"assets/variables.json.PROJECT-NAME_VERSION_TWEAK": "Четвертый компонент номера версии у переменной <PROJECT-NAME>_VERSION, как задано командой project.",
	"assets/variables.json.PROJECT_BINARY_DIR": "Полный путь к каталогу сборки для проекта.",
	"assets/variables.json.PROJECT_DESCRIPTION": "Краткое описание проекта, передаваемое в команду project.",
	"assets/variables.json.PROJECT_HOMEPAGE_URL": "URL-адрес начальной страницы проекта.",
	"assets/variables.json.PROJECT_IS_TOP_LEVEL": "Логическая переменная, указывающая, была ли последняя вызванная команда проекта в текущей области или выше в файле CMakeLists.txt верхнего уровня.",
	"assets/variables.json.PROJECT_NAME": "Имя проекта, передаваемое в команду project.",
	"assets/variables.json.PROJECT_SOURCE_DIR": "Это исходный каталог последнего вызова команды project, выполненного в области текущего каталога или одного из его родительских каталогов. Обратите внимание, что на значение не влияют вызовы project, выполненные в области дочернего каталога (например, из вызова add_subdirectory в текущей области).",
	"assets/variables.json.PROJECT_VERSION": "Значение, заданное для параметра VERSION в последнем вызове команды project (при наличии).",
	"assets/variables.json.PROJECT_VERSION_MAJOR": "Первый компонент номера версии у переменной PROJECT_VERSION, как задано командой project.",
	"assets/variables.json.PROJECT_VERSION_MINOR": "Второй компонент номера версии у переменной PROJECT_VERSION, как задано командой project.",
	"assets/variables.json.PROJECT_VERSION_PATCH": "Третий компонент номера версии у переменной PROJECT_VERSION, как задано командой project.",
	"assets/variables.json.PROJECT_VERSION_TWEAK": "Четвертый компонент номера версии у переменной PROJECT_VERSION, как задано командой project.",
	"assets/variables.json.UNIX": "Задайте значение True, если целевой системой является UNIX или подобная ей (например, APPLE и CYGWIN). Для получения более полного представления о целевой системе нужно направить запрос к переменной CMAKE_SYSTEM_NAME.",
	"assets/variables.json.WIN32": "Задайте значение True, если целевой системой является Windows, включая Win64.",
	"assets/variables.json.WINCE": "Значение true, если для переменной CMAKE_SYSTEM_NAME задано значение WindowsCE.",
	"assets/variables.json.WINDOWS_PHONE": "Значение true, если для переменной CMAKE_SYSTEM_NAME задано значение WindowsPhone.",
	"assets/variables.json.WINDOWS_STORE": "Значение true, если для переменной CMAKE_SYSTEM_NAME задано значение WindowsStore.",
	"assets/variables.json.XCODE": "Значение true при использовании генератора Xcode.",
	"assets/variables.json.XCODE_VERSION": "Версия Xcode (только для генератора Xcode).",
	"assets/variables.json.ADVANCED": "Значение true, если запись должна быть по умолчанию скрыта в графических интерфейсах пользователя.",
	"assets/variables.json.HELPSTRING": "Справка для записи в графических пользовательских интерфейсах.",
	"assets/variables.json.MODIFIED": "Внутреннее свойство управления. Не следует задавать или возвращать.",
	"assets/variables.json.STRINGS": "Перечисление возможных входных значений STRING для выбора графического пользовательского интерфейса.",
	"assets/variables.json.TYPE": "Тип мини-приложения для элемента в графических пользовательских интерфейсах.",
	"assets/variables.json.VALUE": "Значение записи кэша.",
	"assets/variables.json.ADDITIONAL_CLEAN_FILES": "Разделенный точками с запятой список файлов или каталогов, которые будут удалены в составе глобальной цели очистки. Полезен для указания создаваемых файлов или каталогов, которые используются несколькими целевыми объектами или самой системой CMake либо создаются способами, не позволяющими перехватывать их как выходные данные или побочные результаты пользовательских команд.",
	"assets/variables.json.ADDITIONAL_MAKE_CLEAN_FILES": "Дополнительные файлы для удаления на этапе очистки.",
	"assets/variables.json.BINARY_DIR": "Это свойство каталога только для чтения сообщает абсолютный путь к двоичному каталогу, соответствующему источнику, в котором оно считывается.",
	"assets/variables.json.BUILDSYSTEM_TARGETS": "Это свойство каталога с доступом только для чтения содержит разделенный точками с запятой список целевых объектов системы сборки, добавленных в каталог с помощью вызовов команд add_library, add_executable и add_custom_target. Этот список не включает в себя никакие импортированные целевые объекты или целевые объекты псевдонима, однако включает библиотеки интерфейса. Каждая запись этого списка является логическим именем целевого объекта, подходящим для передачи в параметр TARGET команды get_property.",
	"assets/variables.json.CACHE_VARIABLES": "Список переменных кэша, доступных в текущем каталоге.",
	"assets/variables.json.CLEAN_NO_CUSTOM": "Задайте значение true, чтобы запретить генераторам файлов makefile удалять выходные данные пользовательских команд для этого каталога во время операции make clean. Этот параметр игнорируется другими генераторами, так как они не способны реализовать эту процедуру.",
	"assets/variables.json.CMAKE_CONFIGURE_DEPENDS": "Передача в CMake сведений о дополнительных входных файлах для процесса настройки CMake. При изменении любого указанного файла система сборки повторно запускает CMake, чтобы перенастроить этот файл и повторно создать систему сборки.",
	"assets/variables.json.COMPILE_DEFINITIONS": "Определения препроцессора для компиляции источников каталога.",
	"assets/variables.json.COMPILE_DEFINITIONS_CONFIG": "Пропущено. См. политику CMake CMP0043.",
	"assets/variables.json.COMPILE_OPTIONS": "Список параметров для передачи в компилятор.",
	"assets/variables.json.DEFINITIONS": "Только для обеспечения совместимости с CMake 2.4. Используйте вместо этого COMPILE_DEFINITIONS.",
	"assets/variables.json.EXCLUDE_FROM_ALL": "Присвойте этому свойству каталога значение true для подкаталога, чтобы исключить его целевые объекты из целевого объекта \"все\" его предков. В этом случае выполнение, например, команды make в родительском каталоге по умолчанию не приведет к сборке целевых объектов в подкаталоге. Это не влияет на целевой объект \"все\" самого подкаталога. При выполнении, например, команды make внутри подкаталога сборка его целевых объектов по-прежнему будет выполняться.",
	"assets/variables.json.IMPLICIT_DEPENDS_INCLUDE_TRANSFORM": "Указание преобразований строк #include для зависимостей в каталоге.",
	"assets/variables.json.IMPORTED_TARGETS": "Это свойство каталога с доступом только для чтения содержит список импортированных целевых объектов, разделенных точкой с запятой и добавленных в каталог вызовами команд add_library и add_executable. Каждая запись в списке — это логическое имя целевого объекта, которое можно передать параметру TARGET команды get_property при вызове в том же каталоге.",
	"assets/variables.json.INCLUDE_DIRECTORIES": "Список каталогов для поиска файлов, включаемых в препроцессор.",
	"assets/variables.json.INCLUDE_REGULAR_EXPRESSION": "Включение регулярного выражения для проверки файлов.",
	"assets/variables.json.INTERPROCEDURAL_OPTIMIZATION": "Это свойство каталога больше не существует.",
	"assets/variables.json.INTERPROCEDURAL_OPTIMIZATION_CONFIG": "Это свойство каталога больше не существует.",
	"assets/variables.json.LABELS": "Укажите список текстовых меток, связанных с каталогом и всеми его подкаталогами. Это равносильно установке целевого свойства LABELS и свойства теста LABELS для всех целевых объектов и тестов в текущем каталоге и его подкаталогах. Примечание: в средствах запуска должно быть включено распространение меток в целевые объекты.",
	"assets/variables.json.LINK_DIRECTORIES": "Список каталогов поиска компоновщика.",
	"assets/variables.json.LINK_OPTIONS": "Список параметров для этапа компоновки целевых объектов общей библиотеки, модуля или исполняемого файла, а также этапа компоновки устройства.",
	"assets/variables.json.LISTFILE_STACK": "Текущий стек файлов списка, которые сейчас обрабатываются.",
	"assets/variables.json.MACROS": "Список команд макросов, доступных в текущем каталоге.",
	"assets/variables.json.PARENT_DIRECTORY": "Исходный каталог, добавивший текущий подкаталог.",
	"assets/variables.json.RULE_LAUNCH_COMPILE": "Укажите средство запуска для правил компиляции.",
	"assets/variables.json.RULE_LAUNCH_CUSTOM": "Укажите средство запуска для настраиваемых правил.",
	"assets/variables.json.RULE_LAUNCH_LINK": "Укажите средство запуска для правил компоновки.",
	"assets/variables.json.SOURCE_DIR": "Это свойство каталога только для чтения сообщает абсолютный путь к исходному каталогу, в котором оно считывается.",
	"assets/variables.json.SUBDIRECTORIES": "Это свойство каталога с доступом только для чтения содержит разделенный точками с запятой список подкаталогов, уже обработанных командами add_subdirectory или subdirs. Каждая запись является абсолютным путем к исходному каталогу (содержащему файл CMakeLists.txt). Эти данные подходят для передачи в параметр DIRECTORY команды get_property.",
	"assets/variables.json.SYSTEM": "Это свойство каталога используется, чтобы инициализировать целевое свойство SYSTEM для неимпортированных целевых объектов, созданных в этом каталоге. Значение TRUE установлено посредством add_subdirectory и FetchContent_Declare, если параметр SYSTEM задан в качестве аргумента для этих команд.",
	"assets/variables.json.TESTS": "Список тестов.",
	"assets/variables.json.TEST_INCLUDE_FILE": "Не рекомендуется. Вместо этого используйте TEST_INCLUDE_FILES.",
	"assets/variables.json.TEST_INCLUDE_FILES": "Список файлов CMake, которые будут включены при запуске ctest.",
	"assets/variables.json.VARIABLES": "Список переменных, определенных в текущем каталоге.",
	"assets/variables.json.VS_GLOBAL_SECTION_POST_section": "Указание глобального раздела postSolution в Visual Studio.",
	"assets/variables.json.VS_GLOBAL_SECTION_PRE_section": "Указание глобального раздела preSolution в Visual Studio.",
	"assets/variables.json.VS_STARTUP_PROJECT": "Указание запускаемого проекта по умолчанию в решении Visual Studio.",
	"assets/variables.json.ALLOW_DUPLICATE_CUSTOM_TARGETS": "Разрешение создания повторяющихся настраиваемых целевых объектов.",
	"assets/variables.json.AUTOGEN_SOURCE_GROUP": "Имя source_group для файлов, созданных AUTOMOC, AUTORCC и AUTOUIC.",
	"assets/variables.json.AUTOGEN_TARGETS_FOLDER": "Имя FOLDER для целевых объектов *_autogen, добавляемых CMake автоматически для целевых объектов, для которых включен AUTOMOC.",
	"assets/variables.json.AUTOMOC_SOURCE_GROUP": "Имя source_group для файлов, созданных AUTOMOC.",
	"assets/variables.json.AUTOMOC_TARGETS_FOLDER": "Имя FOLDER для целевых объектов *_autogen, добавляемых CMake автоматически для целевых объектов, для которых включен AUTOMOC.",
	"assets/variables.json.AUTORCC_SOURCE_GROUP": "Имя source_group для файлов, созданных AUTORCC.",
	"assets/variables.json.AUTOUIC_SOURCE_GROUP": "Имя source_group для файлов, созданных AUTOUIC.",
	"assets/variables.json.CMAKE_CUDA_KNOWN_FEATURES": "Список компонентов CUDA, известных этой версии CMake.",
	"assets/variables.json.CMAKE_CXX_KNOWN_FEATURES": "Список компонентов C, известных этой версии CMake.",
	"assets/variables.json.CMAKE_C_KNOWN_FEATURES": "Список компонентов C, известных этой версии CMake.",
	"assets/variables.json.CMAKE_HIP_KNOWN_FEATURES": "Список функций HIP, известных этой версии CMake.",
	"assets/variables.json.CMAKE_ROLE": "Сообщает, в каком режиме выполняется текущий скрипт. Значение может быть одним из следующих:",
	"assets/variables.json.DEBUG_CONFIGURATIONS": "Укажите, какие конфигурации используются для отладки.",
	"assets/variables.json.DISABLED_FEATURES": "Список компонентов, отключаемых во время запуска CMake.",
	"assets/variables.json.ECLIPSE_EXTRA_CPROJECT_CONTENTS": "Дополнительное содержимое, вставляемое в созданный файл cproject Eclipse.",
	"assets/variables.json.ECLIPSE_EXTRA_NATURES": "Список элементов nature для добавления в созданный файл проекта Eclipse.",
	"assets/variables.json.ENABLED_FEATURES": "Список компонентов, включаемых во время запуска CMake.",
	"assets/variables.json.ENABLED_LANGUAGES": "Свойство, доступное только для чтения, которое содержит список языков, включенных в данный момент",
	"assets/variables.json.FIND_LIBRARY_USE_LIB32_PATHS": "Указывает, нужно ли команде find_library автоматически искать каталоги lib32.",
	"assets/variables.json.FIND_LIBRARY_USE_LIB64_PATHS": "Указывает, нужно ли find_library автоматически искать каталоги lib64.",
	"assets/variables.json.FIND_LIBRARY_USE_LIBX32_PATHS": "Указывает, нужно ли команде find_library автоматически искать каталоги libx32.",
	"assets/variables.json.FIND_LIBRARY_USE_OPENBSD_VERSIONING": "Указывает, нужно ли find_library искать общие библиотеки в стиле OpenBSD.",
	"assets/variables.json.GENERATOR_IS_MULTI_CONFIG": "Свойство, доступное только для чтения, которое имеет значение true для генераторов с несколькими конфигурациями.",
	"assets/variables.json.GLOBAL_DEPENDS_DEBUG_MODE": "Включение режима отладки для графа зависимостей глобального целевого объекта.",
	"assets/variables.json.GLOBAL_DEPENDS_NO_CYCLES": "Отключение циклов для графа зависимостей глобального целевого объекта.",
	"assets/variables.json.INSTALL_PARALLEL": "Включает параметр параллельной установки генератора Ninja.",
	"assets/variables.json.IN_TRY_COMPILE": "Свойство, доступное только для чтения, которое имеет значение true при конфигурации try-compile.",
	"assets/variables.json.JOB_POOLS": "Только Ninja: список доступных пулов.",
	"assets/variables.json.PACKAGES_FOUND": "Список пакетов, найденных во время выполнения CMake.",
	"assets/variables.json.PACKAGES_NOT_FOUND": "Список пакетов, не найденных во время выполнения CMake.",
	"assets/variables.json.PREDEFINED_TARGETS_FOLDER": "Имя FOLDER для целевых объектов, которые CMake добавляет автоматически.",
	"assets/variables.json.PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE": "Если для этого глобального свойства задано значение true, CMAKE_PROJECT_TOP_LEVEL_INCLUDES переменная распространяется на try_compile вызовы, использующие сигнатуру всего проекта. Это свойство не влияет на вызовы подписи исходного файла. PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE по умолчанию не задан.",
	"assets/variables.json.REPORT_UNDEFINED_PROPERTIES": "Если задано, все неопределенные свойства заносятся в этот файл.",
	"assets/variables.json.RULE_MESSAGES": "Укажите, следует ли сообщение для каждого правила make.",
	"assets/variables.json.TARGET_ARCHIVES_MAY_BE_SHARED_LIBS": "Указывает, могут ли общие библиотеки именоваться как архивы.",
	"assets/variables.json.TARGET_MESSAGES": "Укажите, следует ли сообщать о завершении для каждого целевого объекта.",
	"assets/variables.json.TARGET_SUPPORTS_SHARED_LIBS": "Указывает, поддерживает ли целевая платформа общие библиотеки.",
	"assets/variables.json.USE_FOLDERS": "Определяет, следует ли использовать свойство FOLDER целевого объекта для упорядочения целевых объектов по папкам. Поведение определяется значением свойства USE_FOLDERS в конце файла CMakeLists.txt верхнего уровня.",
	"assets/variables.json.XCODE_EMIT_EFFECTIVE_PLATFORM_NAME": "Управление выдачей EFFECTIVE_PLATFORM_NAME генератором Xcode.",
	"assets/variables.json.CPACK_DESKTOP_SHORTCUTS": "Указывает список имен ярлыков, которые нужно создать на рабочем столе для этого файла.",
	"assets/variables.json.CPACK_NEVER_OVERWRITE": "Запрос того, чтобы этот файл не перезаписывался при установке или переустановке.",
	"assets/variables.json.CPACK_PERMANENT": "Запрос того, чтобы этот файл не удалялся при переустановке.",
	"assets/variables.json.CPACK_STARTUP_SHORTCUTS": "Указывает список имен ярлыков, которые нужно создать в папке \"Автозагрузка\" для этого файла.",
	"assets/variables.json.CPACK_START_MENU_SHORTCUTS": "Указывает список имен ярлыков, которые нужно создать в меню \"Пуск\" для этого файла.",
	"assets/variables.json.CPACK_WIX_ACL": "Задает права доступа для файлов или каталогов, установленных установщиком WiX.",
	"assets/variables.json.ABSTRACT": "Указывает, является ли этот исходный файл абстрактным классом.",
	"assets/variables.json.AUTORCC_OPTIONS": "Дополнительные параметры для rcc при использовании AUTORCC",
	"assets/variables.json.AUTOUIC_OPTIONS": "Дополнительные параметры для uic при использовании AUTOUIC",
	"assets/variables.json.COMPILE_FLAGS": "Дополнительные флаги, добавляемые при компиляции этого исходного файла.",
	"assets/variables.json.CXX_SCAN_FOR_MODULES": "CXX_SCAN_FOR_MODULES представляет собой логическое значение, указывающее, будет ли CMake проверять источник на наличие зависимостей модулей C++. См. также свойство CXX_SCAN_FOR_MODULES, содержащее параметры на уровне целевого объекта.",
	"assets/variables.json.EXTERNAL_OBJECT": "Если задано значение true, то это объектный файл.",
	"assets/variables.json.Fortran_FORMAT": "Задайте FIXED или FREE, чтобы указать макет источника Fortran.",
	"assets/variables.json.Fortran_PREPROCESS": "Определяет, следует ли выполнять безусловную предварительную обработку исходного файла Fortran.",
	"assets/variables.json.GENERATED": "Указывает, создан ли этот исходный файл в рамках сборки или процесса CMake.",
	"assets/variables.json.HEADER_FILE_ONLY": "Указывает, является ли этот исходный файл лишь файлом заголовка.",
	"assets/variables.json.KEEP_EXTENSION": "Задание для выходного файла такого же расширения, как и у исходного.",
	"assets/variables.json.LANGUAGE": "Укажите язык программирования, на котором записан исходный файл.",
	"assets/variables.json.LOCATION": "Полный путь к исходному файлу.",
	"assets/variables.json.MACOSX_PACKAGE_LOCATION": "Помещение исходного файла внутрь пакета приложений (MACOSX_BUNDLE), пакета Core Foundation (BUNDLE) или пакета Framework (FRAMEWORK). Применимо macOS и iOS.",
	"assets/variables.json.OBJECT_DEPENDS": "Дополнительные файлы, от которых зависит скомпилированный объектный файл.",
	"assets/variables.json.OBJECT_OUTPUTS": "Дополнительные выходные данные для правила генераторов Ninja или Makefile.",
	"assets/variables.json.SKIP_AUTOGEN": "Исключение исходного файла из обработки AUTOMOC, AUTOUIC и AUTORCC (для проектов Qt).",
	"assets/variables.json.SKIP_AUTOMOC": "Исключение исходного файла из обработки AUTOMOC (для проектов Qt).",
	"assets/variables.json.SKIP_AUTORCC": "Исключение исходного файла из обработки AUTORCC (для проектов Qt).",
	"assets/variables.json.SKIP_AUTOUIC": "Исключение исходного файла из обработки AUTOUIC (для проектов Qt).",
	"assets/variables.json.SKIP_LINTING": "Это свойство позволяет исключить определенный исходный файл из процесса выравнивания. Процесс выравнивания включает в себя выполнение таких инструментов, как <LANG>_CPPLINT, <LANG>_CLANG_TIDY, <LANG>_CPPCHECK и <LANG>_INCLUDE_WHAT_YOU_USE в исходных файлах, а также компиляция файлов заголовков в VERIFY_INTERFACE_HEADER_SETS. Если SKIP_LINTING в исходном файле, указанные средства подстроки не будут выполняться для этого конкретного файла.",
	"assets/variables.json.SKIP_PRECOMPILE_HEADERS": "Пропускается ли этот исходный файл функцией PRECOMPILE_HEADERS.",
	"assets/variables.json.SKIP_UNITY_BUILD_INCLUSION": "Если для этого свойства задано значение true, исходный файл будет пропускаться при сборках Unity, когда для его связанного целевого объекта свойство UNITY_BUILD имеет значение true. Вместо этого исходный файл будет компилироваться отдельно, как если бы сборки Unity были отключены.",
	"assets/variables.json.Swift_DEPENDENCIES_FILE": "Это свойство задает путь к файлу зависимостей Swift (swiftdeps) для источника. Если оно не указано, по умолчанию используется <OBJECT>.swiftdeps.",
	"assets/variables.json.Swift_DIAGNOSTICS_FILE": "Это свойство определяет то, где сериализуются диагностические данные Swift.",
	"assets/variables.json.SYMBOLIC": "Это просто имя правила.",
	"assets/variables.json.UNITY_GROUP": "Это свойство определяет то, к какому контейнеру будет принадлежать источник, если UNITY_BUILD_MODE имеет значение GROUP.",
	"assets/variables.json.VS_COPY_TO_OUT_DIR": "Задает тег <CopyToOutputDirectory> для исходного файла в файле проекта Visual Studio. Допустимые значения: Never, Always и PreserveNewest.",
	"assets/variables.json.VS_CSHARP_tagname": "Конфигурация для конкретного исходного файла Visual Studio и CSharp.",
	"assets/variables.json.VS_DEPLOYMENT_CONTENT": "Пометка исходного файла в качестве содержимого для развертывания с приложением Windows Phone или Магазина Windows при сборке с помощью генераторов Visual Studio <cmake-generators(7)>. Это значение должно давать 1 или 0 при вычислении и может использовать выражения генератора <cmake-generator-expressions(7)>, чтобы осуществлять выбор с учетом конфигурации сборки. Запись файла VCXPROJ для исходного файла будет помечена с помощью DeploymentContent или ExcludedFromBuild для значений 1 и 0 соответственно.",
	"assets/variables.json.VS_DEPLOYMENT_LOCATION": "Указывает расположение развертывания для исходного файла содержимого с приложением Windows Phone или Магазина Windows при сборе с помощью генераторов Visual Studio <cmake-generators(7)>. Это свойство применяется только при использовании VS_DEPLOYMENT_CONTENT. Значение представляет путь относительно пакета приложения и применяется ко всем конфигурациям.",
	"assets/variables.json.VS_INCLUDE_IN_VSIX": "Логическое свойство для указания того, следует ли включить файл в пакет расширений VSIX (Visual Studio Integration Extension). Это требуется для разработки расширений Visual Studio.",
	"assets/variables.json.VS_RESOURCE_GENERATOR": "Это свойство позволяет указать генератор ресурсов, используемый для этого файла. Если значение не задано, по умолчанию используется PublicResXFileCodeGenerator.",
	"assets/variables.json.VS_SETTINGS": "Задайте метаданные любого элемента в файле.",
	"assets/variables.json.VS_SHADER_DISABLE_OPTIMIZATIONS": "Отключение оптимизаций компилятора для исходного файла HLSL. При этом в командную строку для средства FxCompiler добавляется флаг -Od. Укажите значение true для этого свойства, чтобы отключить оптимизации компилятора.",
	"assets/variables.json.VS_SHADER_ENABLE_DEBUG": "Включение отладочной информации для исходного файла HLSL. При этом в командную строку для средства FxCompiler добавляется флаг -Zi. Укажите значение true, чтобы создать отладочную информацию для скомпилированного шейдера.",
	"assets/variables.json.VS_SHADER_ENTRYPOINT": "Указывает имя точки входа для шейдера исходного файла HLSL.",
	"assets/variables.json.VS_SHADER_FLAGS": "Задание дополнительных флагов шейдера Visual Studio для исходного файла HLSL.",
	"assets/variables.json.VS_SHADER_MODEL": "Задает модель шейдера исходного файла HLSL. Некоторые типы шейдеров можно использовать только с последними моделями шейдеров",
	"assets/variables.json.VS_SHADER_OBJECT_FILE_NAME": "Указывает имя файла для скомпилированного объектного файла шейдера для исходного файла HLSL. При этом в командную строку для средства FxCompiler добавляется флаг -Fo.",
	"assets/variables.json.VS_SHADER_OUTPUT_HEADER_FILE": "Задание имени для выходного файла заголовка, содержащего объектный код для исходного файла HLSL.",
	"assets/variables.json.VS_SHADER_TYPE": "Задайте тип шейдера Visual Studio для исходного файла HLSL.",
	"assets/variables.json.VS_SHADER_VARIABLE_NAME": "Задание имени переменной в файле заголовка, содержащем объектный код для исходного файла HLSL.",
	"assets/variables.json.VS_TOOL_OVERRIDE": "Переопределение средства Visual Studio по умолчанию, которое будет применяться к исходному файлу, новым средством, не основанным на расширении файла.",
	"assets/variables.json.VS_XAML_TYPE": "Пометка исходного файла XAML как имеющего тип, отличный от используемого по умолчанию Page. Наиболее распространенный вариант использования заключается в задании файла App.xaml по умолчанию в качестве ApplicationDefinition.",
	"assets/variables.json.WRAP_EXCLUDE": "Исключение этого исходного файла изо всех методов переноса кода в оболочку.",
	"assets/variables.json.XCODE_EXPLICIT_FILE_TYPE": "Задайте атрибут explicitFileType Xcode по его ссылке на исходный файл. CMake вычисляет значение по умолчанию на основе расширения файла, но это свойство позволяет задать его явно.",
	"assets/variables.json.XCODE_FILE_ATTRIBUTES": "Добавление значений в параметр ATTRIBUTES Xcode по его ссылке на целевой объект. Среди прочего, это можно использовать для установки роли для файла MIG:",
	"assets/variables.json.XCODE_LAST_KNOWN_FILE_TYPE": "Задание атрибута lastKnownFileType Xcode по его ссылке на исходный файл. CMake вычисляет значение по умолчанию на основе расширения файла, но это свойство позволяет задать его явно.",
	"assets/variables.json.ATTACHED_FILES": "Вложите список файлов для отправки панели мониторинга.",
	"assets/variables.json.ATTACHED_FILES_ON_FAIL": "Вложите список файлов для отправки панели мониторинга при сбое теста.",
	"assets/variables.json.COST": "Это свойство описывает стоимость теста. Если включено параллельное тестирование, тесты из набора тестов будут выполняться в порядке убывания стоимости. В проектах можно явно определять стоимость тестов, задавая для этого свойства значение с плавающей запятой.",
	"assets/variables.json.DEPENDS": "Указывает, что этот тест следует запустить только после указанного списка тестов.",
	"assets/variables.json.DISABLED": "Если задано значение True, тест будет пропущен и получит состояние \"Не запущен\". Отключенный (disabled) тест не будет учитываться при подсчете общего количества тестов, а в CDash для него будет передано состояние \"Отключено\".",
	"assets/variables.json.ENVIRONMENT": "Укажите переменные среды, которые нужно определить для выполнения теста.",
	"assets/variables.json.ENVIRONMENT_MODIFICATION": "Укажите переменные среды, которые должны быть изменены для выполнения теста. Обратите внимание, что операции, выполняемые этим свойством, выполняются после применения свойства ENVIRONMENT.",
	"assets/variables.json.FAIL_REGULAR_EXPRESSION": "Если выходные данные теста (stdout или stderr) соответствуют этому регулярному выражению, тест завершится неудачно, независимо от кода завершения процесса. Тесты, превышающие время ожидания, указанное в параметре TIMEOUT, завершаются неудачей независимо от FAIL_REGULAR_EXPRESSION. Любой ненулевой код возврата или сбои теста на уровне системы, включая ошибки сегментации, прерывание сигнала или ошибки кучи, не проходят тест, даже если регулярное выражение не соответствует.",
	"assets/variables.json.FIXTURES_CLEANUP": "Указывает список средств, для которых этот тест следует рассматривать как тест очистки. Имена этих средств отличаются от имен тестовых случаев и необязательно должны иметь какие-либо сходства с именами связанных с ними тестов.",
	"assets/variables.json.FIXTURES_REQUIRED": "Указывает список средств, необходимых тесту. Имена средств указываются с учетом регистра и необязательно должны иметь какие-либо сходства с именами тестов.",
	"assets/variables.json.FIXTURES_SETUP": "Указывает список средств, для которых этот тест следует рассматривать как тест настройки. Имена этих средств отличаются от имен тестовых случаев и необязательно должны иметь какие-либо сходства с именами связанных с ними тестов.",
	"assets/variables.json.GENERATED_RESOURCE_SPEC_FILE": "Путь к динамически созданному файлу спецификации ресурса<ctest-resource-dynamically-generated-spec-file> созданному этим тестом.",
	"assets/variables.json.MEASUREMENT": "Указание измерения CDASH и значения, сообщаемого для теста.",
	"assets/variables.json.PASS_REGULAR_EXPRESSION": "Чтобы тест прошел, выходные данные теста (stdout или stderr) должны соответствовать этому регулярному выражению. Код завершения процесса игнорируется. Тесты, превышающие время ожидания, указанное в параметре TIMEOUT, по-прежнему завершаются неудачей независимо от PASS_REGULAR_EXPRESSION. Сбои теста на системном уровне, включая ошибки сегментации, прерывание сигнала или ошибки кучи, могут привести к сбою теста, даже если PASS_REGULAR_EXPRESSION соответствует.",
	"assets/variables.json.PROCESSORS": "Задайте, чтобы указать число слотов обработки, необходимое этому тесту. Если значение не задано, по умолчанию используется 1 процессор.",
	"assets/variables.json.PROCESSOR_AFFINITY": "Задайте значение true, чтобы CTest запустил процесс тестирования с фиксированием потоков на ЦП для фиксированного набора процессоров. Если эта функция включена и поддерживается текущей платформой, CTest выберет набор процессоров для помещения в маску фиксирования потоков на ЦП при запуске тестового процесса. Число процессоров в наборе определяется свойством теста PROCESSORS или числом процессоров, доступных для CTest, в зависимости от того, какое из этих значений является наименьшим. Набор отобранных процессоров будет отделен от процессоров, назначенных другим параллельно выполняемым тестам, для которых также включено свойство PROCESSOR_AFFINITY.",
	"assets/variables.json.REQUIRED_FILES": "Список файлов, необходимых для выполнения теста. Имена файлов задаются относительно WORKING_DIRECTORY теста, если не указан абсолютный путь.",
	"assets/variables.json.RESOURCE_GROUPS": "Укажите ресурсы, необходимые для теста, с осмысленной группировкой. Дополнительные сведения о том, как это свойство интегрируется с функцией выделения ресурсов CTest, см. в разделе, посвященном выделению ресурсов <ctest-resource-allocation>.",
	"assets/variables.json.RESOURCE_LOCK": "Указание списка ресурсов, заблокированных этим тестом.",
	"assets/variables.json.RUN_SERIAL": "Запрет на запуск этого теста параллельно с любым другим тестом.",
	"assets/variables.json.SKIP_REGULAR_EXPRESSION": "Если выходные данные теста (stderr или stdout) соответствуют этому регулярному выражению, тест будет помечен как пропущенный, независимо от кода завершения процесса. Тесты, превышающие время ожидания, указанное в параметре TIMEOUT, по-прежнему завершаются неудачей независимо от SKIP_REGULAR_EXPRESSION. Сбои теста на системном уровне, включая ошибки сегментации, прерывание сигнала или ошибки кучи, могут привести к сбою теста, даже если регулярное выражение соответствует.",
	"assets/variables.json.SKIP_RETURN_CODE": "Код возврата, чтобы пометить тест как пропущенный.",
	"assets/variables.json.TIMEOUT": "Указывает число секунд, разрешенное для этого теста.",
	"assets/variables.json.TIMEOUT_AFTER_MATCH": "Изменение времени ожидания теста после обнаружения соответствующей строки в выходных данных.",
	"assets/variables.json.TIMEOUT_SIGNAL_GRACE_PERIOD": "Если задано TIMEOUT_SIGNAL_NAME теста, это свойство указывает время ожидания завершения тестового процесса после отправки настраиваемого сигнала в секундах. В противном случае это свойство не имеет значения.",
	"assets/variables.json.TIMEOUT_SIGNAL_NAME": "Укажите пользовательский сигнал для отправки в тестовый процесс при превышении времени ожидания. Это доступно только на платформах, поддерживающих сигналы POSIX. Он недоступен в Windows.",
	"assets/variables.json.WILL_FAIL": "Если это правда, инвертирует критерии прохождения/непрохождения теста. Тесты, для которых WILL_FAIL имеет значение true, завершаются неудачей с кодом возврата 0 и проходят с ненулевым кодом возврата. Тесты, превышающие время ожидания, указанное в параметре TIMEOUT, по-прежнему завершаются неудачей независимо от WILL_FAIL. Сбои теста на системном уровне, включая ошибки сегментации, прерывание сигнала или ошибки кучи, могут привести к сбою теста, даже если WILL_FAIL имеет значение true.",
	"assets/variables.json.WORKING_DIRECTORY": "Каталог, из которого будет вызываться исполняемый файл теста.",
	"assets/variables.json.AIX_EXPORT_ALL_SYMBOLS": "В AIX CMake автоматически экспортирует все символы из общих библиотек, а также из исполняемых файлов с заданным целевым свойством ENABLE_EXPORTS. Явно отключите это логическое свойство, чтобы не экспортировать символы по умолчанию. В этом случае предполагается, что в проекте будут использоваться другие средства для экспорта некоторых символов.",
	"assets/variables.json.ALIASED_TARGET": "Имя целевого объекта, используемое в качестве псевдонима этим целевым объектом.",
	"assets/variables.json.ALIAS_GLOBAL": "Свойство только для чтения, указывающее, является ли целевой объект ALIAS видимым на глобальном уровне.",
	"assets/variables.json.ANDROID_ANT_ADDITIONAL_OPTIONS": "Задание дополнительных параметров для системы сборки Android Ant. Это строковое значение, содержащее все параметры командной строки для сборки Ant. Оно инициализируется значением переменной CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS, если она задана при создании целевого объекта.",
	"assets/variables.json.ANDROID_API": "При перекрестной компиляции для Android с использованием NVIDIA Nsight Tegra Visual Studio Edition это свойство задает версию целевого API для Android (например, 15). Номер версии должен быть положительным десятичным целым числом. Это свойство инициализируется значением переменной CMAKE_ANDROID_API, если она задана при создании целевого объекта.",
	"assets/variables.json.ANDROID_API_MIN": "Задание версии целевого API Android MIN (например, 9). Номер версии должен быть положительным десятичным целым числом. Это свойство инициализируется значением переменной CMAKE_ANDROID_API_MIN, если она задана при создании целевого объекта. Сборка машинного кода производится с использованием этой версии API.",
	"assets/variables.json.ANDROID_ARCH": "При перекрестной компиляции для Android с помощью NVIDIA Nsight Tegra Visual Studio Edition это свойство задает целевую архитектуру Android.",
	"assets/variables.json.ANDROID_ASSETS_DIRECTORIES": "Задание каталогов ресурсов Android для копирования в основную папку ресурсов перед сборкой. Это строковое свойство, содержащее пути каталогов, разделенные точкой с запятой. Оно инициализируется значением переменной CMAKE_ANDROID_ASSETS_DIRECTORIES, если она задана при создании целевого объекта.",
	"assets/variables.json.ANDROID_GUI": "При перекрестной компиляции для Android с помощью NVIDIA Nsight Tegra Visual Studio Edition это свойство указывает, нужно ли создавать исполняемый файл в виде пакета приложения для Android.",
	"assets/variables.json.ANDROID_JAR_DEPENDENCIES": "Задание свойства Android, указывающего зависимости JAR. Это строковое свойство. Оно инициализируется значением переменной CMAKE_ANDROID_JAR_DEPENDENCIES, если она задана при создании целевого объекта.",
	"assets/variables.json.ANDROID_JAR_DIRECTORIES": "Задание свойства Android, определяющего каталоги для поиска библиотек JAR.",
	"assets/variables.json.ANDROID_JAVA_SOURCE_DIR": "Задание свойства Android, определяющего корневые каталоги исходного кода Java. Это строковое свойство, содержащее пути каталогов, разделенные точкой с запятой. Оно инициализируется значением переменной CMAKE_ANDROID_JAVA_SOURCE_DIR, если она задана при создании целевого объекта.",
	"assets/variables.json.ANDROID_NATIVE_LIB_DEPENDENCIES": "Задание свойства Android, определяющего зависимости SO. Это строковое свойство.",
	"assets/variables.json.ANDROID_NATIVE_LIB_DIRECTORIES": "Задание свойства Android, определяющего каталоги для поиска библиотек SO.",
	"assets/variables.json.ANDROID_PROCESS_MAX": "Задание свойства Android, определяющего максимальное число параллельных процессов компилятора Android NDK (например, 4). Данное свойство инициализируется значением переменной CMAKE_ANDROID_PROCESS_MAX, если она задана при создании целевого объекта.",
	"assets/variables.json.ANDROID_PROGUARD": "Если для этого свойства задано значение true, средство ProGuard может сжимать, оптимизировать и маскировать код, удаляя неиспользуемый код и меняя имена классов, полей и методов на менее семантически понятные. Это свойство инициализируется значением переменной CMAKE_ANDROID_PROGUARD, если она задана при создании целевого объекта.",
	"assets/variables.json.ANDROID_PROGUARD_CONFIG_PATH": "Задание свойства Android, указывающего расположение файла конфигурации ProGuard. Оставьте пустым, чтобы использовать значение по умолчанию. Это строковое свойство, содержащее путь к файлу конфигурации ProGuard. Оно инициализируется значением переменной CMAKE_ANDROID_PROGUARD_CONFIG_PATH, если она задана при создании целевого объекта.",
	"assets/variables.json.ANDROID_SECURE_PROPS_PATH": "Задание свойства Android, указывающего расположение файла безопасных свойств. Это строковое свойство, содержащее путь к файлу. Оно инициализируется значением переменной CMAKE_ANDROID_SECURE_PROPS_PATH, если она задана при создании целевого объекта.",
	"assets/variables.json.ANDROID_SKIP_ANT_STEP": "Задание свойства Android, определяющего, требуется ли пропустить этап сборки Ant. Это логическое свойство, инициализируемое значением переменной CMAKE_ANDROID_SKIP_ANT_STEP, если она задана при создании целевого объекта.",
	"assets/variables.json.ANDROID_STL_TYPE": "При перекрестной компиляции для Android с помощью NVIDIA Nsight Tegra Visual Studio Edition это свойство задает тип поддержки STL для проекта. Это строковое свойство, для которого можно задать одно из следующих значений:",
	"assets/variables.json.ARCHIVE_OUTPUT_DIRECTORY": "Выходной каталог, предназначенный для сборки конечных файлов XXX.",
	"assets/variables.json.ARCHIVE_OUTPUT_DIRECTORY_CONFIG": "Представляющий отдельную конфигурацию выходной каталог для конечных файлов ARCHIVE.",
	"assets/variables.json.ARCHIVE_OUTPUT_NAME": "Имя вывода для конечных файлов XXX.",
	"assets/variables.json.ARCHIVE_OUTPUT_NAME_CONFIG": "Представляющее отдельную конфигурацию имя выходных данных для конечных файлов ARCHIVE.",
	"assets/variables.json.AUTOGEN_BETTER_GRAPH_MULTI_CONFIG": "AUTOGEN_BETTER_GRAPH_MULTI_CONFIG — это логическое свойство, которое можно установить для цели, чтобы улучшить график зависимостей для генераторов с несколькими конфигурациями. Если это свойство включено, CMake будет генерировать больше целей для каждой конфигурации. Таким образом, граф зависимостей будет более точным для генераторов с несколькими конфигурациями и можно будет избежать некоторых перекомпиляций.",
	"assets/variables.json.AUTOGEN_BUILD_DIR": "Каталог, где AUTOMOC, AUTOUIC и AUTORCC создают файлы для целевого объекта.",
	"assets/variables.json.AUTOGEN_COMMAND_LINE_LENGTH_MAX": "Ограничение длины командной строки для целей autogen, например moc или uic, которое запускает использование файлов ответов в Windows вместо передачи всех аргументов в командную строку.",
	"assets/variables.json.AUTOGEN_ORIGIN_DEPENDS": "Переключатель для пересылки зависимостей исходной цели на соответствующую цель <ORIGIN>_autogen.",
	"assets/variables.json.AUTOGEN_PARALLEL": "Число параллельных процессов moc или uic, запускаемых при использовании AUTOMOC и AUTOUIC.",
	"assets/variables.json.AUTOGEN_TARGET_DEPENDS": "Дополнительные целевые зависимости соответствующей цели <ORIGIN>_autogen.",
	"assets/variables.json.AUTOGEN_USE_SYSTEM_INCLUDE": "AUTOGEN_USE_SYSTEM_INCLUDE является логическим свойством, которое может быть установлено на целевом объекте, чтобы указать, что целевой каталог включаемых объектов autogen должен быть добавлен в качестве системного каталога включаемых данных или обычного каталога включаемых файлов в целевой объект.",
	"assets/variables.json.AUTOMOC": "Указывает, следует ли обрабатывать целевой объект с помощью auto-moc (для проектов Qt).",
	"assets/variables.json.AUTOMOC_COMPILER_PREDEFINES": "Логическое значение, используемое AUTOMOC для определения того, нужно ли создавать файл предварительных определений компилятора moc_predefs.h.",
	"assets/variables.json.AUTOMOC_DEPEND_FILTERS": "Фильтрация определений, используемых AUTOMOC для извлечения из исходного файла имен файлов, зарегистрированных в качестве дополнительных зависимостей для файла moc исходного файла.",
	"assets/variables.json.AUTOMOC_EXECUTABLE": "AUTOMOC_EXECUTABLE — это путь к файлу, который указывает на исполняемый файл moc, используемый для файлов с поддержкой AUTOMOC. При задании этого свойства CMake будет пропускать автоматическое обнаружение двоичного файла moc, а также тесты работоспособности, которые обычно выполняются для проверки доступности и правильной работы двоичного файла.",
	"assets/variables.json.AUTOMOC_MACRO_NAMES": "Разделенный точками с запятой список имен макросов, используемых AUTOMOC для определения того, нужно ли обрабатывать файл C++ с помощью moc.",
	"assets/variables.json.AUTOMOC_MOC_OPTIONS": "Дополнительные параметры для moc при использовании AUTOMOC",
	"assets/variables.json.AUTOMOC_PATH_PREFIX": "Если это свойство включено, CMake создаст параметр префикса пути -p для moc в целевых объектах Qt, для которых включено свойство AUTOMOC.",
	"assets/variables.json.AUTORCC": "Указывает, следует ли обрабатывать целевой объект с помощью auto-rcc (для проектов Qt).",
	"assets/variables.json.AUTORCC_EXECUTABLE": "AUTORCC_EXECUTABLE — это путь к файлу, который указывает на исполняемый файл rcc, используемый для файлов с поддержкой AUTORCC. При задании этого свойства CMake будет пропускать автоматическое обнаружение двоичного файла rcc, а также тесты работоспособности, которые обычно выполняются для проверки доступности и правильной работы двоичного файла.",
	"assets/variables.json.AUTOUIC": "Указывает, следует ли обрабатывать целевой объект с помощью auto-uic (для проектов Qt).",
	"assets/variables.json.AUTOUIC_EXECUTABLE": "AUTOUIC_EXECUTABLE — это путь к файлу, который указывает на исполняемый файл uic, используемый для файлов с поддержкой AUTOUIC. При задании этого свойства CMake будет пропускать автоматическое обнаружение двоичного файла uic, а также тесты работоспособности, которые обычно выполняются для проверки доступности и правильной работы двоичного файла.",
	"assets/variables.json.AUTOUIC_SEARCH_PATHS": "Список путей поиска, используемый AUTOUIC для поиска включенных файлов UI.",
	"assets/variables.json.BUILD_RPATH": "Разделенный точками с запятой список, в котором указываются записи пути среды выполнения (RPATH), которые будут добавлены в двоичные файлы, ссылки на которые указаны в дереве сборки (для платформ, которые это поддерживают). По умолчанию CMake задает путь среды выполнения двоичных файлов в дереве сборки таким образом, что этот путь содержит пути поиска, необходимые для поиска общих библиотек, с которыми связываются файлы. Переменная BUILD_RPATH в проектах может содержать дополнительные пути поиска.",
	"assets/variables.json.BUILD_RPATH_USE_ORIGIN": "Следует ли использовать относительные пути для RPATH сборки.",
	"assets/variables.json.BUILD_WITH_INSTALL_NAME_DIR": "BUILD_WITH_INSTALL_NAME_DIR — это логическое значение, определяющее, использует ли install_name macOS целевого объекта в дереве сборки каталог, заданный INSTALL_NAME_DIR. Этот параметр применяется только к целевым объектам в macOS.",
	"assets/variables.json.BUILD_WITH_INSTALL_RPATH": "BUILD_WITH_INSTALL_RPATH — это логическое значение, определяющее, нужно ли связывать целевой объект в дереве сборки с INSTALL_RPATH. Этот параметр имеет приоритет над SKIP_BUILD_RPATH и устраняет необходимость в повторном связывании перед установкой.",
	"assets/variables.json.BUNDLE": "Этот целевой объект является CFBundle в macOS.",
	"assets/variables.json.BUNDLE_EXTENSION": "Расширение файла, используемое для именования целевого объекта BUNDLE, FRAMEWORK или MACOSX_BUNDLE в macOS и iOS.",
	"assets/variables.json.COMMON_LANGUAGE_RUNTIME": "При задании этого целевого свойства целевой объект настраивается для сборки с поддержкой C++/CLI.",
	"assets/variables.json.COMPATIBLE_INTERFACE_BOOL": "Свойства, которые должны быть совместимы с их интерфейсом компоновки",
	"assets/variables.json.COMPATIBLE_INTERFACE_NUMBER_MAX": "Свойства, максимальное значение которых из интерфейса компоновки будет использоваться.",
	"assets/variables.json.COMPATIBLE_INTERFACE_NUMBER_MIN": "Свойства, у которых будет использоваться их минимальное значение из интерфейса компоновки.",
	"assets/variables.json.COMPATIBLE_INTERFACE_STRING": "Свойства, которые должны быть совместимы на уровне строк с их интерфейсом компоновки",
	"assets/variables.json.COMPILE_FEATURES": "Функции компилятора, включенные для этого целевого объекта.",
	"assets/variables.json.COMPILE_PDB_NAME": "Имя выходных данных для PDB-файла отладочного символа Майкрософт, созданного компилятором при сборке исходных файлов.",
	"assets/variables.json.COMPILE_PDB_NAME_CONFIG": "Представляющее отдельную конфигурацию имя выходных данных для PDB-файла отладочного символа Майкрософт, созданного компилятором при сборке исходных файлов.",
	"assets/variables.json.COMPILE_PDB_OUTPUT_DIRECTORY": "Выходной каталог для PDB-файла отладочного символа Майкрософт, созданного компилятором при сборке исходных файлов.",
	"assets/variables.json.COMPILE_PDB_OUTPUT_DIRECTORY_CONFIG": "Представляющий отдельную конфигурацию выходной каталог для PDB-файла отладочного символа Майкрософт, созданного компилятором при сборке исходных файлов.",
	"assets/variables.json.COMPILE_WARNING_AS_ERROR": "Укажите, следует ли рассматривать предупреждения при компиляции как ошибки. Если включено, добавляется флажок для обработки предупреждений при компиляции в качестве ошибок. Если в командной строке cmake задан параметр cmake --compile-no-warning-as-error, это свойство игнорируется.",
	"assets/variables.json.CONFIG_OUTPUT_NAME": "Старое базовое имя конечного файла в рамках отдельной конфигурации. Используйте вместо этого OUTPUT_NAME_.",
	"assets/variables.json.CONFIG_POSTFIX": "Постфикс, который нужно добавить к имени конечного файла для конфигурации <CONFIG>.",
	"assets/variables.json.CROSSCOMPILING_EMULATOR": "Использование заданного эмулятора для выполнения исполняемых файлов, созданных при перекрестной компиляции. Эта команда будет добавлена в качестве префикса в команды add_test, add_custom_command и add_custom_target для созданных исполняемых файлов целевой системы.",
	"assets/variables.json.CUDA_ARCHITECTURES": "Список архитектур, для которых нужно создать код устройства.",
	"assets/variables.json.CUDA_CUBIN_COMPILATION": "Компиляция источников CUDA в файлы CUBIN вместо файлов OBJ в библиотеках объектов.",
	"assets/variables.json.CUDA_EXTENSIONS": "Логическое значение, определяющее, запрашиваются ли расширения, связанные с конкретным компилятором.",
	"assets/variables.json.CUDA_FATBIN_COMPILATION": "Компиляция источников CUDA в файлы FATBIN вместо файлов OBJ в библиотеках объектов.",
	"assets/variables.json.CUDA_OPTIX_COMPILATION": "Компиляция источников CUDA в файлы OPTIXIR вместо файлов OBJ в библиотеках объектов.",
	"assets/variables.json.CUDA_PTX_COMPILATION": "Компиляция источников CUDA в файлы PTX вместо файлов OBJ в библиотеках объектов.",
	"assets/variables.json.CUDA_RESOLVE_DEVICE_SYMBOLS": "Только CUDA: включает связывание устройств для целевого объекта указанной библиотеки, когда это необходимо.",
	"assets/variables.json.CUDA_RUNTIME_LIBRARY": "Выберите библиотеку CUDA времени выполнения для использования компиляторами, предназначенными для языка CUDA.",
	"assets/variables.json.CUDA_SEPARABLE_COMPILATION": "Только CUDA: включает раздельную компиляцию кода устройства",
	"assets/variables.json.CUDA_STANDARD": "Стандарт CUDA/C++, компоненты которого требуются для сборки этого целевого объекта.",
	"assets/variables.json.CUDA_STANDARD_REQUIRED": "Логическое значение, описывающее, является ли значение CUDA_STANDARD обязательным.",
	"assets/variables.json.CXX_EXTENSIONS": "Логическое значение, определяющее, запрашиваются ли расширения, связанные с конкретным компилятором.",
	"assets/variables.json.CXX_MODULE_DIRS": "Разделенный точками с запятой список базовых каталогов стандартного набора модулей C++ целевого объекта (то есть набор файлов с именем и типом CXX_MODULES). Это свойство поддерживает выражения генератора <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_DIRS_NAME": "Разделенный точками с запятой список базовых каталогов набора модулей C++ <NAME> целевого объекта с типом набора CXX_MODULES. Это свойство поддерживает выражения генератора <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_SET": "Разделенный точками с запятой список файлов в стандартном наборе модулей C++ целевого объекта (то есть набор файлов с именем и типом CXX_MODULES). Если какие-либо пути являются относительными, они вычисляются по отношению к каталогу источника целевого объекта. Это свойство поддерживает выражения генератора <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_SETS": "Доступный только для чтения список наборов модулей C++ PRIVATE и PUBLIC целевого объекта (то есть все наборы файлов типа CXX_MODULES). Файлы, перечисленные в этих наборах файлов, обрабатываются как исходные файлы в рамках интеграции IDE.",
	"assets/variables.json.CXX_MODULE_SET_NAME": "Разделенный точками с запятой список файлов в наборе модулей C++ <NAME> целевого объекта с типом набора CXX_MODULES. Если какие-либо пути являются относительными, они вычисляются по отношению к каталогу источника целевого объекта. Это свойство поддерживает выражения генератора <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_STD": "CXX_MODULE_STD является логическим значением, указывающим, может ли конечный объект использовать std импорта; его источники C++ или нет.",
	"assets/variables.json.CXX_STANDARD": "Стандарт C++, компоненты которого требуются для сборки этого целевого объекта.",
	"assets/variables.json.CXX_STANDARD_REQUIRED": "Логическое значение, описывающее, является ли значение CXX_STANDARD обязательным.",
	"assets/variables.json.C_EXTENSIONS": "Логическое значение, определяющее, запрашиваются ли расширения, связанные с конкретным компилятором.",
	"assets/variables.json.C_STANDARD": "Стандарт C, компоненты которого требуются для сборки этого целевого объекта.",
	"assets/variables.json.C_STANDARD_REQUIRED": "Логическое значение, описывающее, является ли значение C_STANDARD обязательным.",
	"assets/variables.json.DEBUG_POSTFIX": "См. описание целевого свойства <CONFIG>_POSTFIX.",
	"assets/variables.json.DEFINE_SYMBOL": "Определение символа при компиляции источников этого целевого объекта.",
	"assets/variables.json.DEPLOYMENT_ADDITIONAL_FILES": "Задание AdditionalFiles проекта WinCE в DeploymentTool в файлах VCPROJ, созданных генераторами Visual Studio. Это удобно, если требуется выполнить отладку на удаленном устройстве WinCE. Укажите дополнительные файлы, которые будут скопированы на устройство. Например:",
	"assets/variables.json.DEPLOYMENT_REMOTE_DIRECTORY": "Задание RemoteDirectory проекта WinCE в DeploymentTool и RemoteExecutable в DebuggerTool в файлах VCPROJ, созданных генераторами Visual Studio. Это удобно, если требуется выполнить отладку на удаленном устройстве WinCE. Например:",
	"assets/variables.json.DEPRECATION": "Сообщение об устаревании от разработчика импортированного целевого объекта.",
	"assets/variables.json.DISABLE_PRECOMPILE_HEADERS": "Отключает предварительную компиляцию файлов заголовков, указанных в свойстве PRECOMPILE_HEADERS.",
	"assets/variables.json.DLL_NAME_WITH_SOVERSION": "Это свойство определяет, добавляется ли целевое свойство SOVERSION в имя файла созданных имен DLL для платформы Windows, которое выбирается при заданной переменной WIN32.",
	"assets/variables.json.DOTNET_SDK": "Укажите пакет SDK .NET для проектов C#. Пример: Microsoft.NET.Sdk.",
	"assets/variables.json.DOTNET_TARGET_FRAMEWORK": "Укажите целевую платформу .NET.",
	"assets/variables.json.DOTNET_TARGET_FRAMEWORK_VERSION": "Укажите требуемую версию .NET Framework.",
	"assets/variables.json.EchoString": "Сообщение, отображаемое при сборке целевого объекта.",
	"assets/variables.json.ENABLE_EXPORTS": "Укажите, будет ли исполняемый файл или общая библиотека экспортировать символы.",
	"assets/variables.json.EXCLUDE_FROM_DEFAULT_BUILD": "Исключение целевого объекта из раздела \"Сборка решения\".",
	"assets/variables.json.EXCLUDE_FROM_DEFAULT_BUILD_CONFIG": "Версия исключения целевого объекта из раздела \"Сборка решения\" в рамках отдельной конфигурации.",
	"assets/variables.json.EXPORT_COMPILE_COMMANDS": "Включение или отключение выходных данных команд компиляции во время создания для целевого объекта.",
	"assets/variables.json.EXPORT_FIND_PACKAGE_NAME": "Управляйте именем пакета, связанного с целью зависимости, при экспорте вызова find_dependenty при установке или экспорте. Это можно использовать для присвоения имени пакета пакету, который создан и экспортирован CMake, или для переопределения пакета в вызове find_package, который создал цель.",
	"assets/variables.json.EXPORT_NAME": "Экспортированное имя данных для конечных файлов.",
	"assets/variables.json.EXPORT_NO_SYSTEM": "Это свойство влияет на поведение команд установки и экспорта при установке или экспорте целевого объекта соответственно. Если параметру EXPORT_NO_SYSTEM присвоено значение TRUE, эти команды генерируют импортированный целевой объект, свойству SYSTEM которого присвоено значение FALSE.",
	"assets/variables.json.EXPORT_PROPERTIES": "Список дополнительных свойств, экспортируемых для целевого объекта.",
	"assets/variables.json.FOLDER": "Для IDE, представляющих целевые объекты с использованием иерархии папок, это свойство указывает имя папки, в которую нужно поместить целевой объект. Для указания вложенных папок используйте значения свойства FOLDER, разделяя уровни папок символом \"/\" (например, \"GUI/Dialogs\"). Целевые объекты без свойства FOLDER будут отображаться как сущности верхнего уровня. Целевые объекты с одинаковыми значениями свойства FOLDER будут отображаться в той же папке, что и другие объекты того же уровня.",
	"assets/variables.json.Fortran_BUILDING_INSTRINSIC_MODULES": "Сообщает препроцессору CMake Fortran, что цель создает встроенные функции Fortran для создания компилятора Fortran.",
	"assets/variables.json.Fortran_MODULE_DIRECTORY": "Указание выходного каталога для модулей Fortran, предоставляемых целевым объектом.",
	"assets/variables.json.FRAMEWORK": "Сборка библиотеки SHARED или STATIC в виде пакета платформы для macOS или iOS.",
	"assets/variables.json.FRAMEWORK_MULTI_CONFIG_POSTFIX_CONFIG": "Постфикс, добавляемый к имени файла платформы для конфигурации <CONFIG> при использовании генератора с несколькими конфигурациями (например, Xcode и Ninja).",
	"assets/variables.json.FRAMEWORK_VERSION": "Версия платформы, созданной с помощью целевого свойства FRAMEWORK (например, A).",
	"assets/variables.json.GENERATOR_FILE_NAME": "Файл генератора для этого целевого объекта.",
	"assets/variables.json.GHS_INTEGRITY_APP": "Логическое значение ON/OFF, определяющее, следует ли рассматривать целевой исполняемый файл как приложение целостности.",
	"assets/variables.json.GHS_NO_SOURCE_GROUP_FILE": "Логическое значение ON/OFF для управления тем, должен ли для целевого объекта использоваться один файл проекта или несколько.",
	"assets/variables.json.GNUtoMS": "Преобразование библиотеки импорта GNU (.dll.a) в формат Майкрософт (LIB).",
	"assets/variables.json.HAS_CXX": "Компоновка целевого объекта с помощью компоновщика C++ (устаревший).",
	"assets/variables.json.HEADER_DIRS": "Разделенный точками с запятой список базовых каталогов набора заголовков целевого объекта по умолчанию (т. е. набора файлов с именем и типом HEADERS). Это свойство поддерживает выражения генератора <cmake-generator-expressions(7)>.",
	"assets/variables.json.HEADER_DIRS_NAME": "Разделенный точками с запятой список базовых каталогов набора заголовков <NAME> целевого объекта с типом набора HEADERS. Это свойство поддерживает выражения генератора <cmake-generator-expressions(7)>.",
	"assets/variables.json.HEADER_SET": "Разделенный точками с запятой список файлов в наборе заголовков целевого объекта, используемом по умолчанию (т. е. в наборе файлов с именем и типом HEADERS). Если какие-либо пути являются относительными, они вычисляются по отношению к каталогу источника целевого объекта. Это свойство поддерживает выражения генератора <cmake-generator-expressions(7)>.",
	"assets/variables.json.HEADER_SETS": "Доступный только для чтения список наборов заголовков PRIVATE и PUBLIC целевого объекта (т. е. все наборы файлов типа HEADERS). Файлы, перечисленные в этих наборах файлов, обрабатываются как исходные файлы в рамках интеграции IDE. Кроме того, для свойства HEADER_FILE_ONLY этих файлов устанавливается значение TRUE.",
	"assets/variables.json.HEADER_SET_NAME": "Разделенный точками с запятой список файлов в наборе заголовков <NAME> целевого объекта с типом набора HEADERS. Если какие-либо пути являются относительными, они вычисляются по отношению к каталогу источника целевого объекта. Это свойство поддерживает выражения генератора <cmake-generator-expressions(7)>.",
	"assets/variables.json.HIP_ARCHITECTURES": "Список архитектур GPU, для которых необходимо создать код устройства. Имена архитектур интерпретируются на основе CMAKE_HIP_PLATFORM.",
	"assets/variables.json.HIP_EXTENSIONS": "Логическое значение, определяющее, запрашиваются ли расширения, связанные с конкретным компилятором.",
	"assets/variables.json.HIP_STANDARD": "Стандарт HIP/C++, запрошенный для сборки этого целевого объекта.",
	"assets/variables.json.HIP_STANDARD_REQUIRED": "Логическое значение, описывающее, является ли значение HIP_STANDARD обязательным.",
	"assets/variables.json.IMPORTED": "Доступное только для чтения указание на то, что целевой объект является IMPORTED.",
	"assets/variables.json.IMPORTED_COMMON_LANGUAGE_RUNTIME": "Свойство, определяющее, использует ли целевой объект C++/CLI.",
	"assets/variables.json.IMPORTED_CONFIGURATIONS": "Конфигурации, указанные для импортированного целевого объекта.",
	"assets/variables.json.IMPORTED_CXX_MODULES_COMPILE_DEFINITIONS": "Определения препроцессора для компиляции источников модулей C++ целевого объекта IMPORTED.",
	"assets/variables.json.IMPORTED_CXX_MODULES_COMPILE_FEATURES": "Компоненты компилятора, включенные для модулей C++ этого целевого объекта IMPORTED.",
	"assets/variables.json.IMPORTED_CXX_MODULES_COMPILE_OPTIONS": "Список параметров для передачи компилятору для модулей C++ этого целевого объекта IMPORTED.",
	"assets/variables.json.IMPORTED_CXX_MODULES_INCLUDE_DIRECTORIES": "Список препроцессора включает каталоги поиска файлов при компиляции модулей C++ для целевых объектов IMPORTED.",
	"assets/variables.json.IMPORTED_CXX_MODULES_LINK_LIBRARIES": "Список прямых зависимостей, используемых для требований к использованию модулей C++ в целевых модулях C++.",
	"assets/variables.json.IMPORTED_GLOBAL": "Указание того, виден ли конечный объект IMPORTED на глобальном уровне.",
	"assets/variables.json.IMPORTED_IMPLIB": "Полный путь к библиотеке импорта для целевого объекта IMPORTED.",
	"assets/variables.json.IMPORTED_IMPLIB_CONFIG": "Связанная с <CONFIG> версия свойства IMPORTED_IMPLIB.",
	"assets/variables.json.IMPORTED_LIBNAME": "Указание имени библиотеки компоновки для импортированной библиотеки интерфейса.",
	"assets/variables.json.IMPORTED_LIBNAME_CONFIG": "Связанная с <CONFIG> версия свойства IMPORTED_LIBNAME.",
	"assets/variables.json.IMPORTED_LINK_DEPENDENT_LIBRARIES": "Зависимые общие библиотеки импортированной общей библиотеки.",
	"assets/variables.json.IMPORTED_LINK_DEPENDENT_LIBRARIES_CONFIG": "Связанная с <CONFIG> версия свойства IMPORTED_LINK_DEPENDENT_LIBRARIES.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LANGUAGES": "Языки, скомпилированные в статической библиотеке IMPORTED.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LANGUAGES_CONFIG": "Связанная с <CONFIG> версия IMPORTED_LINK_INTERFACE_LANGUAGES.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LIBRARIES": "Транзитивный интерфейс компоновки целевого объекта IMPORTED.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LIBRARIES_CONFIG": "Связанная с <CONFIG> версия IMPORTED_LINK_INTERFACE_LIBRARIES.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_MULTIPLICITY": "Число повторений для циклов статических библиотек IMPORTED.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_MULTIPLICITY_CONFIG": "Связанная с <CONFIG> версия IMPORTED_LINK_INTERFACE_MULTIPLICITY.",
	"assets/variables.json.IMPORTED_LOCATION": "Полный путь к основному файлу для целевого объекта IMPORTED.",
	"assets/variables.json.IMPORTED_LOCATION_CONFIG": "Связанная с <CONFIG> версия свойства IMPORTED_LOCATION.",
	"assets/variables.json.IMPORTED_NO_SONAME": "Указывает, что у целевого объекта общей библиотеки IMPORTED нет значения soname.",
	"assets/variables.json.IMPORTED_NO_SONAME_CONFIG": "Связанная с <CONFIG> версия свойства IMPORTED_NO_SONAME.",
	"assets/variables.json.IMPORTED_NO_SYSTEM": "Если параметру IMPORTED_NO_SYSTEM для импортированного целевого объекта присвоено значение TRUE, это указывает, что он не является системным целевым объектом. Это вызывает следующие эффекты:",
	"assets/variables.json.IMPORTED_OBJECTS": "Разделенный точками с запятой список абсолютных путей к объектным файлам на диске для импортируемой библиотеки объектов.",
	"assets/variables.json.IMPORTED_OBJECTS_CONFIG": "Связанная с <CONFIG> версия свойства IMPORTED_OBJECTS.",
	"assets/variables.json.IMPORTED_SONAME": "Значение soname для целевого объекта IMPORTED типа общей библиотеки.",
	"assets/variables.json.IMPORTED_SONAME_CONFIG": "Связанная с <CONFIG> версия свойства IMPORTED_SONAME.",
	"assets/variables.json.IMPORT_PREFIX": "Указывает, что стоит перед именем библиотеки импорта.",
	"assets/variables.json.IMPORT_SUFFIX": "Указывает, что следует за именем библиотеки импорта.",
	"assets/variables.json.INSTALL_NAME_DIR": "Имя каталога для установленных целевых объектов на платформах Apple.",
	"assets/variables.json.INSTALL_REMOVE_ENVIRONMENT_RPATH": "Определяет, следует ли удалять определенные цепочкой инструментов пути RPATH во время установки.",
	"assets/variables.json.INSTALL_RPATH": "Значение rpath, используемое для установленных целевых объектов.",
	"assets/variables.json.INSTALL_RPATH_USE_LINK_PATH": "Добавление путей в каталог поиска компоновщика и установленный rpath.",
	"assets/variables.json.INTERFACE_AUTOMOC_MACRO_NAMES": "Разделенный точками с запятой список имен макросов для AUTOMOC, распространяемый для потребителей.",
	"assets/variables.json.INTERFACE_AUTOUIC_OPTIONS": "Список параметров интерфейса для передачи в uic.",
	"assets/variables.json.INTERFACE_COMPILE_DEFINITIONS": "Список общих требований property_name для библиотеки.",
	"assets/variables.json.INTERFACE_COMPILE_FEATURES": "Список общих требований property_name для библиотеки.",
	"assets/variables.json.INTERFACE_COMPILE_OPTIONS": "Список общих требований property_name для библиотеки.",
	"assets/variables.json.INTERFACE_CXX_MODULE_SETS": "Доступный только для чтения список наборов модулей C++ PUBLIC целевого объекта (то есть все наборы файлов типа CXX_MODULES). Файлы, перечисленные в этих наборах модулей C++, можно устанавливать с помощью команды install и экспортировать с помощью команд install и export.",
	"assets/variables.json.INTERFACE_HEADER_SETS": "Доступный только для чтения список набором заголовков INTERFACE и PUBLIC целевого объекта (т. е. все наборы файлов с типом HEADERS). Файлы, перечисленные в этих наборах заголовков, можно устанавливать с помощью команды \"install\" и экспортировать с помощью команд \"install\" и \"export\".",
	"assets/variables.json.INTERFACE_HEADER_SETS_TO_VERIFY": "Используется для указания, какие наборы заголовков PUBLIC и INTERFACE цели должны быть проверены.",
	"assets/variables.json.INTERFACE_INCLUDE_DIRECTORIES": "Список общих требований property_name для библиотеки.",
	"assets/variables.json.INTERFACE_LINK_DEPENDS": "Дополнительные файлы открытых интерфейсов, от которых зависит конечный двоичный файл для связывания.",
	"assets/variables.json.INTERFACE_LINK_DIRECTORIES": "Список общих требований property_name для библиотеки.",
	"assets/variables.json.INTERFACE_LINK_LIBRARIES": "Список библиотек открытых интерфейсов для библиотеки.",
	"assets/variables.json.INTERFACE_LINK_LIBRARIES_DIRECT": "Список библиотек, которые объекты-получатели этой библиотеки должны рассматривать как зависимости прямой связи.",
	"assets/variables.json.INTERFACE_LINK_LIBRARIES_DIRECT_EXCLUDE": "Список библиотек, которые потребители этой библиотеки не должны рассматривать как зависимости прямой ссылки.",
	"assets/variables.json.INTERFACE_LINK_OPTIONS": "Список общих требований property_name для библиотеки.",
	"assets/variables.json.INTERFACE_POSITION_INDEPENDENT_CODE": "Указывает, нужно ли потребителям создать целевой объект, не зависящий от позиции",
	"assets/variables.json.INTERFACE_PRECOMPILE_HEADERS": "Список файлов заголовков интерфейса для предварительной компиляции в потребляющие целевые объекты.",
	"assets/variables.json.INTERFACE_SOURCES": "Список источников интерфейсов для компиляции в потребляющие целевые объекты.",
	"assets/variables.json.INTERFACE_SYSTEM_INCLUDE_DIRECTORIES": "Список общих системных включаемых каталогов для библиотеки.",
	"assets/variables.json.IOS_INSTALL_COMBINED": "Сборка комбинированного (устройство и симулятор) целевого объекта при установке.",
	"assets/variables.json.ISPC_HEADER_DIRECTORY": "Укажите относительный выходной каталог для заголовков ISPC, предоставляемых целевым объектом.",
	"assets/variables.json.ISPC_HEADER_SUFFIX": "Укажите выходной суффикс, который будет использоваться для заголовков, создаваемых ISPC и предоставляемых целевым объектом.",
	"assets/variables.json.ISPC_INSTRUCTION_SETS": "Список архитектур наборов инструкций, для которых нужно создать код.",
	"assets/variables.json.JOB_POOL_COMPILE": "Только Ninja: пул, используемый для компиляции.",
	"assets/variables.json.JOB_POOL_LINK": "Только Ninja: пул, используемый для компоновки.",
	"assets/variables.json.JOB_POOL_PRECOMPILE_HEADER": "Только Ninja: пул, используемый для создания предварительно скомпилированных заголовков.",
	"assets/variables.json.LANG_CLANG_TIDY": "Это свойство реализуется только тогда, когда <LANG> имеет значение C, CXX, OBJC или OBJCXX.",
	"assets/variables.json.LANG_CLANG_TIDY_EXPORT_FIXES_DIR": "Это свойство реализуется только в том случае, если <LANG> имеет значение C, CXX, OBJC или OBJCXX, и действует только в том случае, если установлено свойство <LANG>_CLANG_TIDY.",
	"assets/variables.json.LANG_COMPILER_LAUNCHER": "Это свойство реализуется только тогда, когда <LANG> имеет значение C, CXX, Fortran, HIP, ISPC, OBJC, OBJCXX или CUDA.",
	"assets/variables.json.LANG_CPPCHECK": "Это свойство поддерживается только тогда, когда <LANG> имеет значение C или CXX.",
	"assets/variables.json.LANG_CPPLINT": "Это свойство поддерживается только тогда, когда <LANG> имеет значение C или CXX.",
	"assets/variables.json.LANG_EXTENSIONS": "Варианты:",
	"assets/variables.json.LANG_INCLUDE_WHAT_YOU_USE": "Это свойство реализуется только тогда, когда <LANG> имеет значение C или CXX.",
	"assets/variables.json.LANG_LINKER_LAUNCHER": "Это свойство реализуется только тогда, когда <LANG> имеет значение C, CXX, OBJC или OBJCXX",
	"assets/variables.json.LANG_STANDARD": "Варианты:",
	"assets/variables.json.LANG_STANDARD_REQUIRED": "Варианты:",
	"assets/variables.json.LANG_VISIBILITY_PRESET": "Значение для флагов компиляции видимости символов",
	"assets/variables.json.LIBRARY_OUTPUT_DIRECTORY": "Выходной каталог, предназначенный для сборки конечных файлов XXX.",
	"assets/variables.json.LIBRARY_OUTPUT_DIRECTORY_CONFIG": "Представляющий отдельную конфигурацию выходной каталог для конечных файлов LIBRARY.",
	"assets/variables.json.LIBRARY_OUTPUT_NAME": "Имя вывода для конечных файлов XXX.",
	"assets/variables.json.LIBRARY_OUTPUT_NAME_CONFIG": "Представляющее отдельную конфигурацию имя выходных данных для конечных файлов LIBRARY.",
	"assets/variables.json.LINKER_LANGUAGE": "Задает язык, компилятор которого вызовет компоновщик.",
	"assets/variables.json.LINKER_TYPE": "Укажите, какой компоновщик будет использоваться на этапе связывания. Значение свойства может использовать выражения генератора <cmake-generator-expressions(7)>.",
	"assets/variables.json.LINK_DEPENDS": "Дополнительные файлы, от которых зависит конечный двоичный файл для связывания.",
	"assets/variables.json.LINK_DEPENDS_NO_SHARED": "Отсутствие зависимости от скомпонованных файлов общих библиотек.",
	"assets/variables.json.LINK_FLAGS": "Дополнительные флаги, используемые при связывании этого целевого объекта, если это общая библиотека, библиотека модуля и исполняемый файл. Статические библиотеки должны использовать свойства STATIC_LIBRARY_OPTIONS или STATIC_LIBRARY_FLAGS.",
	"assets/variables.json.LINK_FLAGS_CONFIG": "Представляющие отдельную конфигурацию флаги компоновщика для целевого объекта общей библиотеки, модуля или исполняемого файла.",
	"assets/variables.json.LINK_INTERFACE_LIBRARIES": "Список библиотек открытых интерфейсов для общей библиотеки или исполняемого файла.",
	"assets/variables.json.LINK_INTERFACE_LIBRARIES_CONFIG": "Представляющий отдельную конфигурацию список библиотек открытых интерфейсов для целевого объекта.",
	"assets/variables.json.LINK_INTERFACE_MULTIPLICITY": "Число повторений для библиотек STATIC с циклическими зависимостями.",
	"assets/variables.json.LINK_INTERFACE_MULTIPLICITY_CONFIG": "Число повторений для циклов библиотек STATIC в рамках отдельной конфигурации.",
	"assets/variables.json.LINK_LIBRARIES": "Список прямых зависимостей компоновки.",
	"assets/variables.json.LINK_LIBRARIES_ONLY_TARGETS": "Убедиться, что элементы ссылок, которые могут быть именами целевых объектов, фактически являются существующими целевыми объектами.",
	"assets/variables.json.LINK_LIBRARY_OVERRIDE": "Переопределите функции библиотеки, связанные с библиотеками из выражений генератора LINK_LIBRARY. Это можно использовать для разрешения несовместимых библиотечных функций, возникающих в результате указания разных функций для одной и той же библиотеки в разных выражениях генератора LINK_LIBRARY.",
	"assets/variables.json.LINK_LIBRARY_OVERRIDE_LIBRARY": "Переопределите компонент библиотеки, связанный с <LIBRARY> из LINK_LIBRARY генератора. Это можно использовать для разрешения несовместимых функций библиотеки, которые являются результатом указания различных компонентов для <LIBRARY> в разных выражениях генератора LINK_LIBRARY генератора.",
	"assets/variables.json.LINK_SEARCH_END_STATIC": "Завершение строки связи таким образом, чтобы использовались статические системные библиотеки.",
	"assets/variables.json.LINK_SEARCH_START_STATIC": "Предполагается, что компоновщик ищет статические библиотеки по умолчанию.",
	"assets/variables.json.LINK_WHAT_YOU_USE": "Это логический параметр, который, если установлено значение TRUE, автоматически запускает содержимое переменной CMAKE_LINK_WHAT_YOU_USE_CHECK в целевом объекте после его связывания. Кроме того, флаг компоновщика, указанный в переменной CMAKE_<LANG>_LINK_WHAT_YOU_USE_FLAG, будет передан в целевой объект с командой link, чтобы все библиотеки, указанные в командной строке, были скомпонованы в целевой объект. Итоговая компоновка создает список библиотек, которые не предоставляют символы, используемые этим целевым объектом, но компонуются в него.",
	"assets/variables.json.LOCATION_CONFIG": "Доступное только для чтения свойство, указывающее расположение целевого объекта на диске.",
	"assets/variables.json.MACHO_COMPATIBILITY_VERSION": "Какой номер версии совместимости имеет этот целевой объект для двоичных файлов Mach-O.",
	"assets/variables.json.MACHO_CURRENT_VERSION": "Какой номер текущей версии имеет этот целевой объект для двоичных файлов Mach-O.",
	"assets/variables.json.MACOSX_BUNDLE": "Сборка исполняемого файла в виде пакета приложений для macOS или iOS.",
	"assets/variables.json.MACOSX_BUNDLE_INFO_PLIST": "Указание настраиваемого шаблона Info.plist для пакета приложений macOS и iOS.",
	"assets/variables.json.MACOSX_FRAMEWORK_INFO_PLIST": "Указание настраиваемого шаблона Info.plist для платформы macOS и iOS.",
	"assets/variables.json.MACOSX_RPATH": "Указывает, размещается ли этот целевой объект во время выполнения в macOS или iOS с помощью путей rpath.",
	"assets/variables.json.MANUALLY_ADDED_DEPENDENCIES": "Получение зависимостей, вручную добавленных в другие целевые объекты верхнего уровня.",
	"assets/variables.json.MAP_IMPORTED_CONFIG_CONFIG": "Сопоставление конфигурации проекта с конфигурацией импортированного целевого объекта.",
	"assets/variables.json.MSVC_DEBUG_INFORMATION_FORMAT": "Выберите формат отладочной информации, предназначенной для MSVC ABI.",
	"assets/variables.json.MSVC_RUNTIME_LIBRARY": "Выберите библиотеку MSVC времени выполнения для использования компиляторами, предназначенными для MSVC ABI.",
	"assets/variables.json.NAME": "Логическое имя для целевого объекта.",
	"assets/variables.json.NO_SONAME": "Указывает, следует ли задать значение soname при компоновке общей библиотеки.",
	"assets/variables.json.NO_SYSTEM_FROM_IMPORTED": "Не обрабатывать каталоги включения из интерфейсов используемых импортированных целевых объектов как системные каталоги.",
	"assets/variables.json.OBJCXX_EXTENSIONS": "Логическое значение, определяющее, запрашиваются ли расширения, связанные с конкретным компилятором.",
	"assets/variables.json.OBJCXX_STANDARD": "Стандарт ObjC++, компоненты которого требуются для сборки этого целевого объекта.",
	"assets/variables.json.OBJCXX_STANDARD_REQUIRED": "Логическое значение, описывающее, является ли значение OBJCXX_STANDARD обязательным.",
	"assets/variables.json.OBJC_EXTENSIONS": "Логическое значение, определяющее, запрашиваются ли расширения, связанные с конкретным компилятором.",
	"assets/variables.json.OBJC_STANDARD": "Стандарт OBJC, компоненты которого требуются для сборки этого целевого объекта.",
	"assets/variables.json.OBJC_STANDARD_REQUIRED": "Логическое значение, описывающее, является ли значение OBJC_STANDARD обязательным.",
	"assets/variables.json.OPTIMIZE_DEPENDENCIES": "Активирует оптимизацию зависимостей для статических библиотек и библиотек объектов.",
	"assets/variables.json.OSX_ARCHITECTURES": "Зависящие от целевого объекта архитектуры для macOS.",
	"assets/variables.json.OSX_ARCHITECTURES_CONFIG": "Представляющие отдельную конфигурацию архитектуры двоичных файлов macOS и iOS для целевого объекта.",
	"assets/variables.json.OUTPUT_NAME": "Имя выходных данных для конечных файлов.",
	"assets/variables.json.OUTPUT_NAME_CONFIG": "Базовое имя конечного файла в рамках отдельной конфигурации.",
	"assets/variables.json.PCH_INSTANTIATE_TEMPLATES": "Если это свойство имеет значение true, то параметры компилятора для предварительно скомпилированного заголовка будут содержать флаг для создания экземпляров шаблонов во время создания предварительно скомпилированного заголовка, если это поддерживается. Это может значительно уменьшить время компиляции. Поддерживается в Clang начиная с версии 11.",
	"assets/variables.json.PCH_WARN_INVALID": "Если это свойство имеет значение true, параметры компилятора для предварительной компиляции заголовков будут содержать флаг компилятора, который должен предупреждать о недопустимых предварительно компилируемых заголовках, например -Winvalid-pch для компилятора GNU.",
	"assets/variables.json.PDB_NAME": "Имя выходных данных для PDB-файла отладочных символов Майкрософт, созданного компоновщиком для целевого объекта исполняемого файла или общей библиотеки.",
	"assets/variables.json.PDB_NAME_CONFIG": "Представляющее отдельную конфигурацию имя выходных данных для PDB-файла отладочного символа Майкрософт, созданного компоновщиком для целевого объекта исполняемого файла или общей библиотеки.",
	"assets/variables.json.PDB_OUTPUT_DIRECTORY": "Выходной каталог для PDB-файлов отладочных символов Майкрософт, созданных компоновщиком для целевого объекта исполняемого файла или общей библиотеки.",
	"assets/variables.json.PDB_OUTPUT_DIRECTORY_CONFIG": "Представляющий отдельную конфигурацию выходной каталог для PDB-файла отладочного символа Майкрософт, созданного компоновщиком для целевого объекта исполняемого файла или общей библиотеки.",
	"assets/variables.json.POSITION_INDEPENDENT_CODE": "Указывает, нужно ли создать целевой объект, не зависящий от позиции",
	"assets/variables.json.POST_INSTALL_SCRIPT": "Поддержка нерекомендуемой установки.",
	"assets/variables.json.PRECOMPILE_HEADERS": "Список файлов заголовков для предварительной компиляции.",
	"assets/variables.json.PRECOMPILE_HEADERS_REUSE_FROM": "Целевой объект, из которого следует повторно использовать артефакт сборки предварительно скомпилированных заголовков.",
	"assets/variables.json.PREFIX": "Указывает, что стоит перед именем библиотеки.",
	"assets/variables.json.PRE_INSTALL_SCRIPT": "Поддержка нерекомендуемой установки.",
	"assets/variables.json.PRIVATE_HEADER": "Указание закрытых файлов заголовка в целевом объекте общей библиотеки FRAMEWORK.",
	"assets/variables.json.PROJECT_LABEL": "Изменение имени целевого объекта в среде IDE.",
	"assets/variables.json.PUBLIC_HEADER": "Указание открытых файлов заголовка в целевом объекте общей библиотеки FRAMEWORK.",
	"assets/variables.json.RESOURCE": "Указание файлов ресурсов в FRAMEWORK или BUNDLE.",
	"assets/variables.json.RUNTIME_OUTPUT_DIRECTORY": "Выходной каталог, предназначенный для сборки конечных файлов XXX.",
	"assets/variables.json.RUNTIME_OUTPUT_DIRECTORY_CONFIG": "Представляющий отдельную конфигурацию выходной каталог для конечных файлов RUNTIME.",
	"assets/variables.json.RUNTIME_OUTPUT_NAME": "Имя вывода для конечных файлов XXX.",
	"assets/variables.json.RUNTIME_OUTPUT_NAME_CONFIG": "Представляющее отдельную конфигурацию имя выходных данных для конечных файлов RUNTIME.",
	"assets/variables.json.SKIP_BUILD_RPATH": "Указывает, следует ли использовать пути rpath для дерева сборки.",
	"assets/variables.json.SOURCES": "Указывает список путей к исходным файлам для целевого объекта. Все следующие команды устанавливаются или добавляются к свойству SOURCES целевого объекта и обычно используются для управления им.",
	"assets/variables.json.SOVERSION": "Номер версии ABI целевой общей библиотеки.",
	"assets/variables.json.STATIC_LIBRARY_FLAGS": "Флаги архиватора (или библиотекаря MSVC) для целевого объекта статической библиотеки. Целевые объекты, являющиеся общими библиотеками, модулями или исполняемыми файлами, должны использовать целевые свойства LINK_OPTIONS или LINK_FLAGS.",
	"assets/variables.json.STATIC_LIBRARY_FLAGS_CONFIG": "Представляющие отдельную конфигурацию флаги архиватора (или библиотекаря MSVC) для целевого объекта статической библиотеки.",
	"assets/variables.json.STATIC_LIBRARY_OPTIONS": "Флаги архиватора (или библиотекаря MSVC) для целевого объекта статической библиотеки. Целевые объекты, являющиеся общими библиотеками, модулями или исполняемыми файлами, должны использовать целевое свойство LINK_OPTIONS.",
	"assets/variables.json.SUFFIX": "Указывает, что следует за именем целевого объекта.",
	"assets/variables.json.Swift_COMPILATION_MODE": "Укажите, как Swift компилирует цель.",
	"assets/variables.json.Swift_LANGUAGE_VERSION": "Это свойство задает версию языка для исходного кода Swift в целевом объекте. Если оно не указано, по умолчанию используется версия CMAKE_Swift_LANGUAGE_VERSION при условии, что она задана. В противном случае используется последняя версия, поддерживаемая компилятором.",
	"assets/variables.json.Swift_MODULE_DIRECTORY": "Указание выходного каталога для модулей Swift, предоставляемых целевым объектом.",
	"assets/variables.json.Swift_MODULE_NAME": "Это свойство задает имя модуля Swift. По умолчанию используется имя целевого объекта.",
	"assets/variables.json.TEST_LAUNCHER": "Используйте данную программу запуска для запуска исполняемых файлов. Эта команда будет добавлена в качестве префикса к командам add_test для сборки исполняемых файлов целевой системы и предназначена для запуска на хост-компьютере.",
	"assets/variables.json.TRANSITIVE_COMPILE_PROPERTIES": "Свойства, которые TARGET_PROPERTY генератора на целевом объекте и его зависимых объектах, вычисляется как объединение значений, собранных из транзитивного закрытия зависимостей связи, за исключением записей, защищенных LINK_ONLY.",
	"assets/variables.json.TRANSITIVE_LINK_PROPERTIES": "Свойства, которые TARGET_PROPERTY генератора на целевом объекте и его зависимых объектах, вычисляется как объединение значений, собранных из транзитивного закрытия зависимостей ссылок, включая записи, защищенные LINK_ONLY.",
	"assets/variables.json.UNITY_BUILD": "Если это свойство имеет значение true, целевые исходные файлы будут объединены в пакеты для более быстрой компиляции. Для этого создаются исходные файлы Unity, которые включают (#include) изначальные исходные файлы, а затем эти исходные файлы Unity компилируются вместо изначальных. Это называется сборкой Unity или Jumbo.",
	"assets/variables.json.UNITY_BUILD_BATCH_SIZE": "Задает максимальное число исходных файлов, которые могут быть объединены в один исходный файл Unity при включении сборок Unity с помощью целевого свойства UNITY_BUILD. Изначальные исходные файлы будут распределены по необходимому количеству исходных файлов Unity с учетом этого ограничения.",
	"assets/variables.json.UNITY_BUILD_CODE_AFTER_INCLUDE": "Фрагмент кода, включаемый в буквальном виде функцией UNITY_BUILD сразу после каждого оператора #include в создаваемых исходных файлах Unity. Пример:",
	"assets/variables.json.UNITY_BUILD_CODE_BEFORE_INCLUDE": "Фрагмент кода, включаемый в буквальном виде функцией UNITY_BUILD непосредственно перед каждым оператором #include в создаваемых исходных файлах Unity. Пример:",
	"assets/variables.json.UNITY_BUILD_MODE": "CMake предоставляет различные алгоритмы для выбора источников, группируемых в контейнер. Выбор определяется этим свойством, которое имеет следующие допустимые значения:",
	"assets/variables.json.UNITY_BUILD_UNIQUE_ID": "Имя допустимого идентификатора C, для которого задается уникальное значение для каждого файла во время сборок Unity.",
	"assets/variables.json.VERIFY_INTERFACE_HEADER_SETS": "Используется для проверки того, что все заголовки в наборах заголовков PUBLIC и INTERFACE цели могут быть включены сами по себе.",
	"assets/variables.json.VERSION": "Номер версии целевой общей библиотеки.",
	"assets/variables.json.VISIBILITY_INLINES_HIDDEN": "Указывает, следует ли добавлять флаг компиляции для скрытия символов встроенных функций",
	"assets/variables.json.VS_CONFIGURATION_TYPE": "Тип конфигурации для проекта Visual Studio.",
	"assets/variables.json.VS_DEBUGGER_COMMAND": "Задает команду локального отладчика для Visual Studio целевых объектов C++. Значение свойства может использовать выражения генератора <cmake-generator-expressions(7)>. Определяется в <LocalDebuggerCommand> в Visual Studio проекта. Это свойство инициализируется значением переменной, CMAKE_VS_DEBUGGER_COMMAND если оно задано при создании целевого объекта.",
	"assets/variables.json.VS_DEBUGGER_COMMAND_ARGUMENTS": "Задает аргументы командной строки локального отладчика для Visual Studio целевых объектов C++. Значение свойства может использовать выражения генератора <cmake-generator-expressions(7)>. Определяется в <LocalDebuggerCommandArguments> в Visual Studio проекта. Это свойство инициализируется значением переменной, CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS если оно задано при создании целевого объекта.",
	"assets/variables.json.VS_DEBUGGER_ENVIRONMENT": "Задает среду локального отладчика для Visual Studio целевых объектов C++. Значение свойства может использовать выражения генератора <cmake-generator-expressions(7)>. Определяется в <LocalDebuggerEnvironment> в Visual Studio проекта. Это свойство инициализируется значением переменной, CMAKE_VS_DEBUGGER_ENVIRONMENT если оно задано при создании целевого объекта.",
	"assets/variables.json.VS_DEBUGGER_WORKING_DIRECTORY": "Задает рабочий каталог локального отладчика для Visual Studio целевых объектов C++. Значение свойства может использовать выражения генератора <cmake-generator-expressions(7)>. Определяется в <LocalDebuggerWorkingDirectory> в Visual Studio проекта. Это свойство инициализируется значением переменной, CMAKE_VS_DEBUGGER_WORKING_DIRECTORY если оно задано при создании целевого объекта.",
	"assets/variables.json.VS_DESKTOP_EXTENSIONS_VERSION": "Версия расширений Windows 10 Desktop для Visual Studio",
	"assets/variables.json.VS_DOTNET_DOCUMENTATION_FILE": "Выходная документация .NET для управляемого проекта Visual Studio",
	"assets/variables.json.VS_DOTNET_REFERENCEPROP_refname_TAG_tagname": "Определяет свойство XML <tagname> для ссылки .NET <refname>.",
	"assets/variables.json.VS_DOTNET_REFERENCES": "Ссылки .NET на управляемый проект Visual Studio",
	"assets/variables.json.VS_DOTNET_REFERENCES_COPY_LOCAL": "Задает свойство \"Копировать локально\" для всех ссылок на указания .NET в целевом объекте",
	"assets/variables.json.VS_DOTNET_REFERENCE_refname": "Ссылка .NET на управляемый проект Visual Studio с именем <refname> и путем указания.",
	"assets/variables.json.VS_DOTNET_STARTUP_OBJECT": "Задает свойство запускаемого объекта в целевых объектах Visual Studio .NET. Значение свойства определяет полное имя класса (включая имя пакета), например: MyCompany.Package.MyStarterClass.",
	"assets/variables.json.VS_DOTNET_TARGET_FRAMEWORK_VERSION": "Укажите требуемую версию .NET Framework.",
	"assets/variables.json.VS_DPI_AWARE": "Задайте параметр \"Инструмент манифеста\" -> \"Вход и выход\" -> \"Поддержка DPI\" в свойствах целевого проекта Visual Studio.",
	"assets/variables.json.VS_FILTER_PROPS": "Задает файл свойств фильтра, включаемый в файл фильтра проектов Visual Studio C++.",
	"assets/variables.json.VS_GLOBAL_KEYWORD": "Visual Studio проект ключевое слово.",
	"assets/variables.json.VS_GLOBAL_PROJECT_TYPES": "Типы проектов Visual Studio.",
	"assets/variables.json.VS_GLOBAL_ROOTNAMESPACE": "Корневое пространство имен для проекта Visual Studio.",
	"assets/variables.json.VS_GLOBAL_variable": "Глобальная переменная для конкретного проекта Visual Studio.",
	"assets/variables.json.VS_IOT_EXTENSIONS_VERSION": "Версия расширений Windows 10 IoT для Visual Studio",
	"assets/variables.json.VS_IOT_STARTUP_TASK": "Непрерывная фоновая задача Windows 10 IoT для Visual Studio",
	"assets/variables.json.VS_JUST_MY_CODE_DEBUGGING": "Включите функцию \"Только мой код\" в отладчике Visual Studio.",
	"assets/variables.json.VS_KEYWORD": "Удаленный. Ранее был указан Visual Studio проект ключевое слово для генератора Visual Studio 9 2008 и более ранних версий, но все эти генераторы были удалены.",
	"assets/variables.json.VS_MOBILE_EXTENSIONS_VERSION": "Версия расширения Windows 10 Mobile для Visual Studio",
	"assets/variables.json.VS_NO_COMPILE_BATCHING": "Отключите пакетную обработку компиляции для цели. Обычно MSBuild вызывает компилятор с несколькими файлами c/cpp, и компилятор запускает подпроцессы для каждого файла, чтобы сделать сборку параллельной. Если вы хотите, чтобы компилятор вызывался с одним файлом за раз, установите для параметра VS_NO_COMPILE_BATCHING значение ON. Если этот флаг установлен, MSBuild будет вызывать компилятор с одним файлом c/cpp за раз. Полезно, когда вы хотите использовать инструмент, который заменяет компилятор, например, какой-нибудь инструмент кэширования сборки.",
	"assets/variables.json.VS_NO_SOLUTION_DEPLOY": "Укажите, что целевой объект не должен быть помечен для развертывания на устройстве Windows CE или Windows Phone в созданном решении Visual Studio.",
	"assets/variables.json.VS_PACKAGE_REFERENCES": "Ссылки на пакеты Visual Studio для NuGet.",
	"assets/variables.json.VS_PLATFORM_TOOLSET": "Переопределяет набор инструментов платформы, используемый для сборки целевого объекта.",
	"assets/variables.json.VS_PROJECT_IMPORT": "Импортируемые компоненты управляемого проекта Visual Studio",
	"assets/variables.json.VS_SCC_AUXPATH": "Вспомогательный путь для управления исходным кодом Visual Studio.",
	"assets/variables.json.VS_SCC_LOCALPATH": "Локальный путь для управления исходным кодом Visual Studio.",
	"assets/variables.json.VS_SCC_PROJECTNAME": "Проект управления исходным кодом Visual Studio.",
	"assets/variables.json.VS_SCC_PROVIDER": "Поставщик управления исходным кодом Visual Studio.",
	"assets/variables.json.VS_SDK_REFERENCES": "Ссылки на пакет SDK для проекта Visual Studio. Укажите разделенный точками с запятой список ссылок на пакет SDK, которые нужно добавить в создаваемый проект Visual Studio, например Microsoft.AdMediatorWindows81, Version=1.0.",
	"assets/variables.json.VS_SOLUTION_DEPLOY": "Укажите, что целевой объект должен быть помечен для развертывания, если не предназначен для приложения Windows CE, Windows Phone или Магазина Windows.",
	"assets/variables.json.VS_SOURCE_SETTINGS_tool": "Задайте метаданные для любых элементов во всех файлах, использующих <tool>, сборка которых не производилась.",
	"assets/variables.json.VS_USER_PROPS": "Задает пользовательский файл свойств, включаемый в файл проекта Visual Studio C++. Стандартным путем является $(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props, который в большинстве случаев совпадает с %LOCALAPPDATA%\\\\Microsoft\\\\MSBuild\\\\v4.0\\\\Microsoft.Cpp.Win32.user.props или %LOCALAPPDATA%\\\\Microsoft\\\\MSBuild\\\\v4.0\\\\Microsoft.Cpp.x64.user.props.",
	"assets/variables.json.VS_USE_DEBUG_LIBRARIES": "Укажите генераторам Visual Studio, какие конфигурации считаются отладочными. Это управляет настройкой UseDebugLibraries в каждой конфигурации файла .vcxproj.",
	"assets/variables.json.VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION": "Минимальная версия целевой платформы Windows для Visual Studio",
	"assets/variables.json.VS_WINRT_COMPONENT": "Пометка целевого объекта в качестве компонента среды выполнения Windows для генератора Visual Studio. Компилируйте целевой объект с использованием языковых расширений C++/CX для среды выполнения Windows. Для библиотек MODULE и SHARED также определяет макрос препроцессора _WINRT_DLL.",
	"assets/variables.json.VS_WINRT_EXTENSIONS": "Не рекомендуется. Вместо этого используйте VS_WINRT_COMPONENT. Это свойство было экспериментальной частичной реализацией данного компонента.",
	"assets/variables.json.VS_WINRT_REFERENCES": "Ссылки на метаданные среды выполнения Windows проекта Visual Studio",
	"assets/variables.json.WATCOM_RUNTIME_LIBRARY": "Выберите библиотеку времени выполнения Watcom для использования компиляторами, ориентированными на Watcom ABI.",
	"assets/variables.json.WIN32_EXECUTABLE": "Сборка исполняемого файла с точкой входа WinMain для Windows.",
	"assets/variables.json.WINDOWS_EXPORT_ALL_SYMBOLS": "Это свойство реализуется только для средств в Windows, совместимых с платформой Майкрософт.",
	"assets/variables.json.XCODE_ATTRIBUTE_an-attribute": "Укажите атрибуты целевого объекта Xcode напрямую.",
	"assets/variables.json.XCODE_EMBED_FRAMEWORKS_CODE_SIGN_ON_COPY": "Сообщить генератору Xcode о том, что необходимо выполнить подписывание кода для всех платформ и библиотек, встроенных с помощью свойства XCODE_EMBED_FRAMEWORKS <XCODE_EMBED_<type>>.",
	"assets/variables.json.XCODE_EMBED_FRAMEWORKS_REMOVE_HEADERS_ON_COPY": "Сообщить генератору Xcode о том, что необходимо удалить заголовки для всех платформ, встроенных с помощью свойства XCODE_EMBED_FRAMEWORKS <XCODE_EMBED_<type>>.",
	"assets/variables.json.XCODE_EMBED_type": "Попросите генератор Xcode внедрить указанный список элементов в целевой пакет. <type> указывает используемый этап внедрения сборки. См. информацию о расположении базы каждого элемента <type>в документации по Xcode.",
	"assets/variables.json.XCODE_EMBED_type_CODE_SIGN_ON_COPY": "Логическое свойство, используемое только генератором Xcode. Указывает необходимость подписывания кода для элементов, внедренных с помощью свойства XCODE_EMBED_.",
	"assets/variables.json.XCODE_EMBED_type_PATH": "Это свойство используется только генератором Xcode. Если определено, свойство указывает относительный путь, используемый при встраивании элементов, указанных в XCODE_EMBED_. Путь указывается относительно расположения базы этапа сборки Embed XXX, связанного с <type>. См. информацию о расположении базы каждого элемента <type> в документации по Xcode.",
	"assets/variables.json.XCODE_EMBED_type_REMOVE_HEADERS_ON_COPY": "Логическое свойство, используемое только генератором Xcode. Указывает необходимость удалять заголовки из всех платформ, внедренных с помощью свойства XCODE_EMBED_.",
	"assets/variables.json.XCODE_GENERATE_SCHEME": "Если включен, генератор Xcode создаст файлы схемы. Они могут быть удобны для вызова действий анализа, архивации, сборки для тестирования и тестирования из командной строки.",
	"assets/variables.json.XCODE_LINK_BUILD_PHASE_MODE": "При использовании генератора Xcode библиотеки, которые необходимо скомпоновать, будут указаны в файле проекта Xcode с помощью этапа сборки \"Связывание двоичных файлов с библиотеками\" или непосредственно в качестве флагов компоновщика. Первый вариант позволяет Xcode управлять путями сборки, что может потребоваться при создании архивов Xcode, поскольку для обычной сборки могут использоваться различные пути сборки.",
	"assets/variables.json.XCODE_PRODUCT_TYPE": "Задание атрибута productType Xcode по его ссылке на целевой объект. CMake вычисляет значение по умолчанию на основе целевого типа, но это свойство позволяет задать его явно.",
	"assets/variables.json.XCODE_SCHEME_ADDRESS_SANITIZER": "Указывает, следует ли включить санитайзер адресов в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN": "Указывает, следует ли включить обнаружение использования стека в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_ARGUMENTS": "Укажите аргументы командной строки, которые нужно добавить в раздел аргументов созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_DEBUG_AS_ROOT": "Указывает, следует ли отлаживать целевой объект как корневой.",
	"assets/variables.json.XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING": "Следует ли включать параметр \"Разрешить отладку\" при использовании браузера версий документов в разделе \"Параметры\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER": "Указывает, следует ли отключить Main Thread Checker в разделе Diagnostics созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS": "Указывает, следует ли включить загрузки динамических библиотек в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE": "Указывает, следует ли включить использование API динамического компоновщика в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_ENABLE_GPU_API_VALIDATION": "Значение свойства для Metal: проверка API в разделе \"Параметры\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE": "Значение свойства \"GPU Frame Capture\" в разделе параметров сформированной схемы Xcode. Примеры значений: \"Metal\" и \"Disabled\".",
	"assets/variables.json.XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION": "Значение свойства для Metal: проверка шейдера в разделе \"Параметры\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_ENVIRONMENT": "Укажите переменные среды, которые нужно добавить в раздел аргументов созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_EXECUTABLE": "Укажите путь к исполняемому файлу в разделе сведений созданной схемы Xcode. Если значение не задано, генератор схемы выберет текущий целевой объект, если он действительно является исполняемым файлом.",
	"assets/variables.json.XCODE_SCHEME_GUARD_MALLOC": "Указывает, следует ли включить Guard Malloc в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_LAUNCH_CONFIGURATION": "Настройте конфигурацию сборки для запуска целевого объекта.",
	"assets/variables.json.XCODE_SCHEME_LAUNCH_MODE": "Значение свойства для Launch в разделе \"Сведения\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP": "Указывает, следует ли включить Main Thread Checker — Pause при проблемах в разделе Diagnostics созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_MALLOC_GUARD_EDGES": "Указывает, следует ли включить Malloc Guard Edges в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_MALLOC_SCRIBBLE": "Указывает, следует ли включить Malloc Scribble в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_MALLOC_STACK": "Указывает, следует ли включить Malloc Stack в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_THREAD_SANITIZER": "Указывает, следует ли включить санитайзер потоков в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_THREAD_SANITIZER_STOP": "Указывает, следует ли включить параметр приостановки при проблемах для санитайзера потоков в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER": "Указывает, следует ли включить санитайзер неопределенного поведения в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP": "Указывает, следует ли включить параметр приостановки при проблемах для санитайзера неопределенного поведения в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_SCHEME_WORKING_DIRECTORY": "Укажите рабочий каталог для действий запуска и профилирования в созданной схеме Xcode. Если значение содержит выражения генератора, они вычисляются.",
	"assets/variables.json.XCODE_SCHEME_ZOMBIE_OBJECTS": "Указывает, следует ли включить зомби-объекты в разделе \"Диагностика\" созданной схемы Xcode.",
	"assets/variables.json.XCODE_XCCONFIG": "Если установлено, генератор Xcode зарегистрирует указанный файл как файл XCConfig целевого уровня. Глобальные файлы XCConfig см. в переменной CMAKE_XCODE_XCCONFIG.",
	"assets/variables.json.XCTEST": "Этот целевой объект является XCTest CFBundle в Mac."
}
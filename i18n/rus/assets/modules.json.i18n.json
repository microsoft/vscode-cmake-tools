/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"assets/modules.json.AddFileDependencies": "Добавление зависимостей в исходный файл.",
	"assets/modules.json.AndroidTestUtilities": "Создание теста, который автоматически загружает указанные данные на устройство Android.",
	"assets/modules.json.BundleUtilities": "Функции сборки приложения изолированного пакета.",
	"assets/modules.json.CheckCCompilerFlag": "Проверка, поддерживает ли компилятор C данный флаг.",
	"assets/modules.json.CheckCompilerFlag": "Проверка, поддерживает ли компилятор данный флаг.",
	"assets/modules.json.CheckCSourceCompiles": "Проверка возможности скомпилировать и скомпоновать данный исходный код C в исполняемый файл.",
	"assets/modules.json.CheckCSourceRuns": "Проверка возможности скомпилировать и скомпоновать данный исходный код C в исполняемый файл и впоследствии запустить его.",
	"assets/modules.json.CheckCXXCompilerFlag": "Проверка, поддерживает ли компилятор CXX данный флаг.",
	"assets/modules.json.CheckCXXSourceCompiles": "Проверка возможности скомпилировать и скомпоновать данный исходный код C++ в исполняемый файл.",
	"assets/modules.json.CheckCXXSourceRuns": "Проверка возможности скомпилировать и скомпоновать данный исходный код C++ в исполняемый файл и впоследствии запустить его.",
	"assets/modules.json.CheckCXXSymbolExists": "Проверка существования символа в C++ как функции, переменной или макроса.",
	"assets/modules.json.CheckFortranCompilerFlag": "Проверка, поддерживает ли компилятор Fortran данный флаг.",
	"assets/modules.json.CheckFortranFunctionExists": "Проверка существования функции Fortran.",
	"assets/modules.json.CheckFortranSourceCompiles": "Проверка возможности скомпилировать и скомпоновать данный исходный код Fortran в исполняемый файл.",
	"assets/modules.json.CheckFortranSourceRuns": "Проверка возможности скомпилировать и скомпоновать данный исходный код Fortran в исполняемый файл и впоследствии запустить его.",
	"assets/modules.json.CheckFunctionExists": "Проверка, можно ли компоновать функцию C",
	"assets/modules.json.CheckIncludeFile": "Предоставляет макрос для проверки возможности включения файла заголовков в C.",
	"assets/modules.json.CheckIncludeFileCXX": "Предоставляет макрос для проверки возможности включения файла заголовков в CXX.",
	"assets/modules.json.CheckIncludeFiles": "Предоставляет макрос для проверки возможности включения списка из одного или нескольких файлов заголовков сразу.",
	"assets/modules.json.CheckIPOSupported": "Проверка, поддерживает ли компилятор межпроцедурную оптимизацию (IPO/LTO). Используйте ее перед включением свойства целевого объекта INTERPROCEDURAL_OPTIMIZATION.",
	"assets/modules.json.CheckLanguage": "Проверка возможности включить язык командой enable_language или проекта:",
	"assets/modules.json.CheckLibraryExists": "Проверка существования функции.",
	"assets/modules.json.CheckLinkerFlag": "Проверка, поддерживает ли компилятор данный флаг компоновки.",
	"assets/modules.json.CheckOBJCCompilerFlag": "Проверка, поддерживает ли компилятор Objective-C данный флаг.",
	"assets/modules.json.CheckOBJCSourceCompiles": "Проверка возможности скомпилировать и скомпоновать данный исходный код Objective-C в исполняемый файл.",
	"assets/modules.json.CheckOBJCSourceRuns": "Проверка возможности скомпилировать и скомпоновать данный исходный код Objective-C в исполняемый файл и впоследствии запустить его.",
	"assets/modules.json.CheckOBJCXXCompilerFlag": "Проверка, поддерживает ли компилятор Objective-C++ данный флаг.",
	"assets/modules.json.CheckOBJCXXSourceCompiles": "Проверка возможности скомпилировать и скомпоновать данный исходный код Objective-C++ в исполняемый файл.",
	"assets/modules.json.CheckOBJCXXSourceRuns": "Проверка возможности скомпилировать и скомпоновать данный исходный код Objective-C++ в исполняемый файл и впоследствии запустить его.",
	"assets/modules.json.CheckPIESupported": "Проверка, поддерживает ли компоновщик позиционно-независимый код (PIE) или позиционно-зависимый код (NO_PIE) для исполняемых файлов. Используйте ее, чтобы учитывать свойство POSITION_INDEPENDENT_CODE целевых исполняемых файлов во время компоновки.",
	"assets/modules.json.CheckPrototypeDefinition": "Проверка правильности ожидаемого прототипа.",
	"assets/modules.json.CheckSourceCompiles": "Проверка возможности скомпилировать и скомпоновать данный исходный код в исполняемый файл.",
	"assets/modules.json.CheckSourceRuns": "Проверка возможности скомпилировать и скомпоновать данный исходный код в исполняемый файл и впоследствии запустить его.",
	"assets/modules.json.CheckStructHasMember": "Проверка наличия указанной переменной-члена в данной структуре или классе",
	"assets/modules.json.CheckSymbolExists": "Предоставляет макрос для проверки существования символа в C как функции, переменной или макроса.",
	"assets/modules.json.CheckTypeSize": "Проверка размера типа",
	"assets/modules.json.CheckVariableExists": "Проверка существования переменной.",
	"assets/modules.json.CMakeAddFortranSubdirectory": "Добавление подпапки, предназначенной только для Fortran, поиск компилятора Fortran и выполнение сборки.",
	"assets/modules.json.CMakeBackwardCompatibilityCXX": "определение группы переменных для обратной совместимости",
	"assets/modules.json.CMakeDependentOption": "Макрос для предоставления параметра в зависимости от других параметров.",
	"assets/modules.json.CMakeDetermineVSServicePack": "Функциональность этого модуля была заменена переменной CMAKE_<LANG>_COMPILER_VERSION которая содержит номер версии компилятора.",
	"assets/modules.json.CMakeExpandImportedTargets": "Этот модуль был необходим для расширения импортируемых целевых объектов на библиотеки, на которые они ссылались на диске, с целью использования с командами try_compile и try_run. Теперь эти команды поддерживают импортируемые библиотеки в своих параметрах LINK_LIBRARIES (начиная с CMake 2.8.11 для try_compile и начиная с CMake 3.2 для try_run).",
	"assets/modules.json.CMakeFindDependencyMacro": "Макрос ``find_dependency()`` создает оболочку для вызова :command:`find_package` для поддержки зависимости пакета.",
	"assets/modules.json.CMakeFindFrameworks": "вспомогательный модуль для поиска платформ OSX",
	"assets/modules.json.CMakeFindPackageMode": "Этот файл выполняется инструментом cmake при вызове с аргументом --find-package <Find-Package Tool Mode>. Предполагается, что заданы следующие переменные с помощью параметра -D:",
	"assets/modules.json.CMakeForceCompiler": "Макросы, предоставленные этим модулем, предназначались для использования файлами цепочки инструментов перекрестной компиляции в случае, когда CMake не может автоматически определить идентификацию компилятора. С момента появления этого модуля возможности идентификации компиляторов CMake улучшились, и теперь можно распознавать любой компилятор. Кроме того, набор сведений, которые CMake получает из компиляторов, слишком широк, чтобы их можно было предоставлять в файлах цепочки инструментов с помощью этих макросов.",
	"assets/modules.json.CMakeGraphVizOptions": "Встроенная поддержка CMake в Graphviz.",
	"assets/modules.json.CMakePackageConfigHelpers": "Вспомогательные функции для создания файлов конфигурации, которые могут быть включены в другие проекты для поиска и использования пакета.",
	"assets/modules.json.CMakeParseArguments": "Этот модуль раньше реализовал команду cmake_parse_arguments, которая теперь реализована внутри CMake. Теперь это пустой заполнитель для обеспечения совместимости с проектами, которые включают этот модуль для вызова команды из CMake 3.4 и более ранних версий.",
	"assets/modules.json.CMakePrintHelpers": "Удобные функции для печати свойств и переменных, полезные, например, для отладки.",
	"assets/modules.json.CMakePrintSystemInformation": "Печать сведений о системе.",
	"assets/modules.json.CMakePushCheckState": "В этом модуле определены три макроса: CMAKE_PUSH_CHECK_STATE() CMAKE_POP_CHECK_STATE() и CMAKE_RESET_CHECK_STATE(). Эти макросы можно использовать для сохранения, восстановления и сброса (т. е. очистки содержимого) состояния переменных CMAKE_REQUIRED_FLAGS, CMAKE_REQUIRED_DEFINITIONS, CMAKE_REQUIRED_LINK_OPTIONS, CMAKE_REQUIRED_LIBRARIES, CMAKE_REQUIRED_INCLUDES и CMAKE_EXTRA_INCLUDE_FILES, которые используются различными check-файлами из комплекта CMake, такими как check_function_exists() и др. Содержимое переменной отправляется в стек, поддерживается многократная отправка. Это полезно, например, при выполнении таких тестов в модуле Find, где эти переменные задаются, но после выполнения модуля Find они должны иметь то же значение, что и раньше.",
	"assets/modules.json.CMakeVerifyManifest": "CMakeVerifyManifest.cmake",
	"assets/modules.json.CPack": "Настройка генераторов для двоичных установщиков и исходных пакетов.",
	"assets/modules.json.CPackArchive": "Документация по генератору CPack Archive перемещена сюда: Генератор CPack Archive",
	"assets/modules.json.CPackBundle": "Документация по генератору CPack Bundle перемещена сюда: Генератор CPack Bundle",
	"assets/modules.json.CPackComponent": "Настройка компонентов для двоичных установщиков и исходных пакетов.",
	"assets/modules.json.CPackCygwin": "Документация по генератору CPack Cygwin перемещена сюда: Генератор CPack Cygwin",
	"assets/modules.json.CPackDeb": "Документация по генератору CPack DEB перемещена сюда: Генератор CPack DEB",
	"assets/modules.json.CPackDMG": "Документация по генератору CPack DragNDrop перемещена сюда: Генератор CPack DragNDrop",
	"assets/modules.json.CPackFreeBSD": "Документация по генератору CPack FreeBSD перемещена сюда: Генератор CPack FreeBSD",
	"assets/modules.json.CPackIFW": "Этот модуль ищет расположение утилит командной строки, поставляемых с платформой установщика Qt (QtIFW).",
	"assets/modules.json.CPackIFWConfigureFile": "Модуль определяет команду, аналогичную configure_file, для настройки шаблонов файлов, подготовленных в стиле QtIFW/SDK/Creator.",
	"assets/modules.json.CPackNSIS": "Документация по генератору CPack NSIS перемещена сюда: Генератор CPack NSIS",
	"assets/modules.json.CPackNuGet": "Документация по генератору CPack NuGet перемещена сюда: Генератор CPack NuGet",
	"assets/modules.json.CPackProductBuild": "Документация по генератору CPack productbuild перемещена сюда: Генератор CPack productbuild",
	"assets/modules.json.CPackRPM": "Документация по генератору CPack RPM перемещена сюда: Генератор CPack RPM",
	"assets/modules.json.CPackWIX": "Документация по генератору CPack WIX перемещена сюда: Генератор CPack WIX",
	"assets/modules.json.CSharpUtilities": "Функции для облегчения конфигурации целевых объектов CSharp/.NET.",
	"assets/modules.json.CTest": "Настройка проекта для тестирования с помощью CTest/CDash",
	"assets/modules.json.CTestCoverageCollectGCOV": "Этот модуль предоставляет функцию ctest_coverage_collect_gcov.",
	"assets/modules.json.CTestScriptMode": "Этот файл считывается инструментом ctest в режиме сценария (-S)",
	"assets/modules.json.CTestUseLaunchers": "Задание глобальных свойств RULE_LAUNCH_* при включенном параметре CTEST_USE_LAUNCHERS.",
	"assets/modules.json.Dart": "Настройка проекта для тестирования с помощью CTest или старого клиента Dart Tcl",
	"assets/modules.json.DeployQt4": "Функции сборки изолированного исполняемого файла Qt4.",
	"assets/modules.json.Documentation": "Этот модуль обеспечивает поддержку платформы документирования VTK. Он использует несколько инструментов (Doxygen, Perl и т. д.).",
	"assets/modules.json.ExternalData": "Управление файлами данных, хранящимися за пределами дерева исходного кода",
	"assets/modules.json.ExternalProject": "Функция ExternalProject_Add() создает настраиваемый целевой объект для скачивания, обновления или исправления, настройки, сборки, установки и тестирования внешнего проекта",
	"assets/modules.json.FeatureSummary": "Функции генерирования сводки включенных и отключенных функций.",
	"assets/modules.json.FetchContent": "Этот модуль позволяет заполнить содержимое во время настройки, используя любой метод, поддерживаемый модулем ExternalProject. ExternalProject_Add() загружается во время сборки, тогда как модуль FetchContent сразу же делает содержимое доступным, что позволяет использовать содержимое на этапе настройки в таких командах, как add_subdirectory(), include() или file().",
	"assets/modules.json.FindALSA": "Поиск архитектуры Advanced Linux Sound Architecture (ALSA)",
	"assets/modules.json.FindArmadillo": "Поиск библиотеки Armadillo C++. Armadillo — это библиотека линейной алгебры и методов научных вычислений.",
	"assets/modules.json.FindASPELL": "Попытка найти ASPELL",
	"assets/modules.json.FindAVIFile": "Поиск библиотеки и путей к включениям AVIFILE",
	"assets/modules.json.FindBacktrace": "Поиск поставщика backtrace(3).",
	"assets/modules.json.FindBISON": "Поиск исполняемого файла bison и предоставление макроса для создания настраиваемых правил сборки.",
	"assets/modules.json.FindBLAS": "Поиск библиотеки Basic Linear Algebra Subprograms (BLAS)",
	"assets/modules.json.FindBoost": "Поиск каталогов вложений и библиотек Boost",
	"assets/modules.json.FindBullet": "Попытка найти обработчик физики Bullet",
	"assets/modules.json.FindBZip2": "Попытка найти BZip2",
	"assets/modules.json.FindCABLE": "Поиск CABLE",
	"assets/modules.json.FindCoin3D": "Поиск Coin3D (Open Inventor)",
	"assets/modules.json.FindCUDA": "Больше не требуется использовать этот модуль или вызывать find_package(CUDA) для компиляции кода CUDA. Вместо этого включите CUDA в список языков, именуемых в вызове команды проекта верхнего уровня, или вызовите команду enable_language с CUDA. Затем можно добавить исходные файлы CUDA (.cu) непосредственно в целевые объекты, как это делается для других языков.",
	"assets/modules.json.FindCUDAToolkit": "Этот сценарий находит инструментарий NVIDIA CUDA и связанные библиотеки, но не требует включения языка CUDA для данного проекта. Этот модуль не ищет образцы NVIDIA CUDA.",
	"assets/modules.json.FindCups": "Поиск сервера Common UNIX Printing System (CUPS).",
	"assets/modules.json.FindCURL": "Поиск собственных заголовков и библиотек CURL.",
	"assets/modules.json.FindCurses": "Поиск файла включения и библиотеки curses или ncurses.",
	"assets/modules.json.FindCVS": "Поиск системы Concurrent Versions System (CVS).",
	"assets/modules.json.FindCxxTest": "Поиск платформы тестирования модулей CxxTest.",
	"assets/modules.json.FindCygwin": "Поиск Cygwin, совместимой с POSIX среды, которая работает в Microsoft Windows",
	"assets/modules.json.FindDart": "Поиск DART",
	"assets/modules.json.FindDCMTK": "Поиск библиотек и приложений DICOM ToolKit (DCMTK)",
	"assets/modules.json.FindDevIL": "Этот модуль находит библиотеку образов разработчика. https://openil.sourceforge.net/",
	"assets/modules.json.FindDoxygen": "Doxygen — это средство создания документации (см. https://www.doxygen.nl). Этот модуль ищет Doxygen и некоторые дополнительные инструменты, которые он поддерживает:",
	"assets/modules.json.FindEnvModules": "Поиск реализации модуля среды и обеспечение доступа к командам в сценариях CMake, чтобы их можно было использовать. Этот модуль совместим как с Lmod на основе Lua, так и с модулями среды на основе TCL.",
	"assets/modules.json.FindEXPAT": "Поиск собственных заголовков и библиотеки Expat. Expat — это ориентированная на потоки библиотека анализаторов XML, написанная на C.",
	"assets/modules.json.FindFLEX": "Поиск исполняемого файла Fast Lexical Analyzer (Flex) и создание макроса для генерирования настраиваемых правил сборки",
	"assets/modules.json.FindFLTK": "Поиск библиотеки Fast Light Toolkit (FLTK)",
	"assets/modules.json.FindFLTK2": "Поиск собственных включений и библиотеки FLTK 2.0",
	"assets/modules.json.FindFontconfig": "Поиск заголовков и библиотеки Fontconfig.",
	"assets/modules.json.FindFreetype": "Поиск включений и библиотеки отрисовщика шрифтов FreeType.",
	"assets/modules.json.FindGCCXML": "Поиск исполняемого файла интерфейса GCC-XML.",
	"assets/modules.json.FindGDAL": "Поиск библиотеки Geospatial Data Abstraction Library (GDAL).",
	"assets/modules.json.FindGettext": "Поиск инструментов GNU gettext",
	"assets/modules.json.FindGIF": "Поиск библиотеки GIF (giflib)",
	"assets/modules.json.FindGit": "В модуле определены следующие переменные:",
	"assets/modules.json.FindGLEW": "Поиск библиотеки OpenGL Extension Wrangler Library (GLEW)",
	"assets/modules.json.FindGLUT": "Поиск библиотеки и файлов включения OpenGL Utility Toolkit (GLUT).",
	"assets/modules.json.FindGnuplot": "Этот модуль ищет gnuplot",
	"assets/modules.json.FindGnuTLS": "Поиск библиотеки GNU TLS (gnutls)",
	"assets/modules.json.FindGSL": "Поиск собственных включений и библиотек GNU Scientific Library (GSL).",
	"assets/modules.json.FindGTest": "Поиск платформы тестирования C++ Google.",
	"assets/modules.json.FindGTK": "Поиски GTK, glib и GTKGLArea",
	"assets/modules.json.FindGTK2": "Поиск библиотеки мини-приложений GTK2 и некоторых других дополнительных компонентов, таких как gtkmm, glade и glademm.",
	"assets/modules.json.FindHDF5": "Поиск Hierarchical Data Format (HDF5), библиотеки чтения и записи самоописываемых данных массивов.",
	"assets/modules.json.FindHg": "Извлечение сведений из рабочей копии Mercurial.",
	"assets/modules.json.FindHSPELL": "Попытка найти средство проверки орфографии (Hspell) и обработчик морфологии для иврита.",
	"assets/modules.json.FindHTMLHelp": "Этот модуль ищет компилятор справки Microsoft HTML",
	"assets/modules.json.FindIce": "Поиск программ, библиотек и данных ZeroC Internet Communication Engine (ICE).",
	"assets/modules.json.FindIconv": "Этот модуль находит в системе функции iconv() POSIX.1. Эти функции могут быть предоставлены в обычной библиотеке C или внешним образом в виде дополнительной библиотеки.",
	"assets/modules.json.FindIcotool": "Поиск icotool",
	"assets/modules.json.FindICU": "Поиск библиотек и программ International Components for Unicode (ICU).",
	"assets/modules.json.FindImageMagick": "Поиск ImageMagick — набора программного обеспечения для отображения, преобразования и обработки растровых изображений.",
	"assets/modules.json.FindIntl": "Поиск заголовков и библиотек Gettext libintl.",
	"assets/modules.json.FindITK": "Этот модуль больше не существует.",
	"assets/modules.json.FindJasper": "Поиск библиотеки Jasper JPEG2000.",
	"assets/modules.json.FindJava": "Поиск Java",
	"assets/modules.json.FindJNI": "Поиск заголовков и библиотек Java Native Interface (JNI).",
	"assets/modules.json.FindJPEG": "Поиск библиотеки JPEG (libjpeg)",
	"assets/modules.json.FindKDE3": "Поиск каталогов включений и библиотек KDE3, препроцессоров KDE и определение некоторых макросов",
	"assets/modules.json.FindKDE4": "Поиск KDE4 и предоставление всех необходимых переменных и макросов для компиляции программного обеспечения. Поиск KDE 4 производится в следующих каталогах в указанном порядке:",
	"assets/modules.json.FindLAPACK": "Поиск библиотеки Linear Algebra PACKage (LAPACK)",
	"assets/modules.json.FindLATEX": "Поиск LaTeX",
	"assets/modules.json.FindLibArchive": "Поиск библиотеки и заголовков libarchive. Libarchive — это библиотека многоформатного архивирования и сжатия.",
	"assets/modules.json.FindLibinput": "Поиск заголовков и библиотеки libinput.",
	"assets/modules.json.FindLibLZMA": "Поиск заголовков и библиотеки алгоритма сжатия LZMA.",
	"assets/modules.json.FindLibXml2": "Поиск библиотеки обработки XML (libxml2).",
	"assets/modules.json.FindLibXslt": "Поиск библиотеки преобразований XSL, Extensible Stylesheet Language Transformations (XSLT) (LibXslt)",
	"assets/modules.json.FindLTTngUST": "Поиск библиотеки Linux Trace Toolkit Next Generation (LTTng-UST).",
	"assets/modules.json.FindLua": "Поиск библиотеки Lua.",
	"assets/modules.json.FindLua50": "Поиск библиотеки Lua.",
	"assets/modules.json.FindLua51": "Поиск библиотеки Lua. Этот модуль определяет:",
	"assets/modules.json.FindMatlab": "Находит Matlab или Matlab Compiler Runtime (MCR) и предоставляет инструменты, библиотеки и компиляторы Matlab для CMake.",
	"assets/modules.json.FindMFC": "Поиск библиотеки Microsoft Foundation Class Library (MFC) в Windows",
	"assets/modules.json.FindMotif": "Попытка найти Motif (или lesstif)",
	"assets/modules.json.FindMPEG": "Поиск собственных включений и библиотеки MPEG",
	"assets/modules.json.FindMPEG2": "Поиск собственных включений и библиотеки MPEG2",
	"assets/modules.json.FindMPI": "Поиск реализации Message Passing Interface (MPI).",
	"assets/modules.json.FindMsys": "Поиск MSYS, совместимой с POSIX среды, которая работает в Microsoft Windows",
	"assets/modules.json.FindODBC": "Поиск каталога вложений и библиотеки ODBC.",
	"assets/modules.json.FindOpenACC": "Обнаружение поддержки OpenACC компилятором.",
	"assets/modules.json.FindOpenAL": "Находит библиотеку Open Audio Library (OpenAL).",
	"assets/modules.json.FindOpenCL": "Находит библиотеку Open Computing Language (OpenCL)",
	"assets/modules.json.FindOpenGL": "Модуль поиска OpenGL и OpenGL Utility Library (GLU).",
	"assets/modules.json.FindOpenMP": "Находит поддержку Open Multi-Processing (OpenMP).",
	"assets/modules.json.FindOpenSceneGraph": "Поиск OpenSceneGraph (интерфейса прикладного программирования для 3D-графики)",
	"assets/modules.json.FindOpenSP": "Попытка найти библиотеку OpenSP.",
	"assets/modules.json.FindOpenSSL": "Поиск библиотеки шифрования OpenSSL.",
	"assets/modules.json.FindOpenThreads": "OpenThreads — это библиотека потоковой обработки на основе C++. По-видимому самая большая база ее пользователей — OpenSceneGraph, поэтому вы можете заметить, что я использую OSGDIR как путь к среде. Я рассматриваю эту часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль.",
	"assets/modules.json.Findosg": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgAnimation": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgDB": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgFX": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgGA": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgIntrospection": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgManipulator": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgParticle": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgPresentation": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgProducer": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgQt": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgShadow": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgSim": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgTerrain": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgText": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgUtil": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgViewer": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgVolume": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.FindosgWidget": "Это часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Все компоненты являются отдельными, и вы должны дать согласие на каждый модуль. Необходимо также дать согласие на OpenGL и OpenThreads (и при необходимости Producer), так как эти модули не включаются самостоятельно. Это нужно для того, чтобы вы могли управлять своей системой по частям, если требуется отказаться от определенных компонентов или изменить поведение поиска для определенного модуля (например, из-за того, что стандартный модуль FindOpenGL не работает с вашей системой). Если вы хотите использовать более удобный модуль, который включает все, используйте FindOpenSceneGraph вместо модулей Findosg*.cmake.",
	"assets/modules.json.Findosg_functions": "Этот файл CMake содержит два макроса для поиска библиотек и наборов узлов OSG. Полную документацию см. в описании модуля FindOpenSceneGraph.",
	"assets/modules.json.FindPackageHandleStandardArgs": "Этот модуль предоставляет функции, предназначенные для использования в модулях Find, реализующих вызовы find_package(<PackageName>).",
	"assets/modules.json.FindPackageMessage": "Эта функция предназначена для использования в файлах модулей FindXXX.cmake. Для каждого уникального результата поиска выводится одно сообщение. Это полезно для того, чтобы у пользователя было время найти пакет. Первый аргумент задает имя пакета (XXX). Второй аргумент задает отображаемое сообщение. В третьем аргументе указываются сведения о результатах поиска, при изменении которых сообщение отображается снова. Макрос также учитывает аргумент QUIET команды find_package.",
	"assets/modules.json.FindPatch": "В модуле определены следующие переменные:",
	"assets/modules.json.FindPerl": "Поиск интерпретатора Perl.",
	"assets/modules.json.FindPerlLibs": "Поиск библиотек Perl",
	"assets/modules.json.FindPHP4": "Поиск PHP4",
	"assets/modules.json.FindPhysFS": "Поиск библиотеки PhysFS. Этот модуль определяет:",
	"assets/modules.json.FindPike": "Поиск Pike",
	"assets/modules.json.FindPkgConfig": "Модуль pkg-config для CMake.",
	"assets/modules.json.FindPNG": "Поиск libpng, официальной справочной библиотеки по формату изображения PNG.",
	"assets/modules.json.FindPostgreSQL": "Поиск установки PostgreSQL.",
	"assets/modules.json.FindProducer": "Хотя Producer не входит в состав OpenSceneGraph непосредственно, его основным пользователем является OSG, поэтому я рассматриваю эту часть набора Findosg*, используемого для поиска компонентов OpenSceneGraph. Вы заметите, что я использую OSGDIR как путь к среде.",
	"assets/modules.json.FindProtobuf": "Поиск и настройка библиотеки Google Protocol Buffers.",
	"assets/modules.json.FindPython": "Поиск интерпретатора, компилятора и среды разработки Python (включая каталоги и библиотеки).",
	"assets/modules.json.FindPython2": "Поиск интерпретатора, компилятора и среды разработки Python 2 (включая каталоги и библиотеки).",
	"assets/modules.json.FindPython3": "Поиск интерпретатора, компилятора и среды разработки Python 3 (включая каталоги и библиотеки).",
	"assets/modules.json.FindPythonInterp": "Поиск интерпретатора Python",
	"assets/modules.json.FindPythonLibs": "Поиск библиотек Python",
	"assets/modules.json.FindQt": "Ищет все установленные версии Qt3 или Qt4.",
	"assets/modules.json.FindQt3": "Поиск путей к включениям и библиотек Qt",
	"assets/modules.json.FindQt4": "Этот модуль можно использовать для поиска Qt4. Главная особенность состоит в том, что инструмент qmake из Qt4 доступен через системный путь. Затем этот инструмент используется для обнаружения всего остального. Этот модуль определяет ряд импортируемых целевых объектов, макросов и переменных.",
	"assets/modules.json.FindQuickTime": "Поиск QuickTime. Этот модуль определяет:",
	"assets/modules.json.FindRTI": "Попытка найти библиотеки RTI M&S HLA",
	"assets/modules.json.FindRuby": "Поиск Ruby",
	"assets/modules.json.FindSDL": "Поиск библиотеки SDL",
	"assets/modules.json.FindSDL_gfx": "Поиск библиотеки SDL_gfx",
	"assets/modules.json.FindSDL_image": "Поиск библиотеки SDL_image",
	"assets/modules.json.FindSDL_mixer": "Поиск библиотеки SDL_mixer",
	"assets/modules.json.FindSDL_net": "Поиск библиотеки SDL_net",
	"assets/modules.json.FindSDL_sound": "Поиск библиотеки SDL_sound",
	"assets/modules.json.FindSDL_ttf": "Поиск библиотеки SDL_ttf",
	"assets/modules.json.FindSelfPackers": "Поиск upx",
	"assets/modules.json.FindSQLite3": "Поиск библиотек SQLite v3",
	"assets/modules.json.FindSquish": "-- Типичное использование",
	"assets/modules.json.FindSubversion": "Извлечение сведений из рабочей копии Subversion.",
	"assets/modules.json.FindSWIG": "Поиск исполняемого файла Simplified Wrapper and Interface Generator (SWIG).",
	"assets/modules.json.FindTCL": "TK_INTERNAL_PATH удален.",
	"assets/modules.json.FindTclsh": "Поиск tclsh",
	"assets/modules.json.FindTclStub": "TCL_STUB_LIBRARY_DEBUG и TK_STUB_LIBRARY_DEBUG удалены.",
	"assets/modules.json.FindThreads": "Этот модуль определяет библиотеку потоков системы.",
	"assets/modules.json.FindTIFF": "Поиск библиотеки TIFF (libtiff, https://libtiff.gitlab.io/libtiff/).",
	"assets/modules.json.FindUnixCommands": "Поиск команд Unix, включая команды Cygwin",
	"assets/modules.json.FindVTK": "Этот модуль больше не существует.",
	"assets/modules.json.FindVulkan": "Поиск Vulkan — кроссплатформенного API-интерфейса для 3D-графики и вычислений с высокими накладными расходами.",
	"assets/modules.json.FindWget": "Поиск wget",
	"assets/modules.json.FindWish": "Поиск установки wish",
	"assets/modules.json.FindwxWidgets": "Поиск установки wxWidgets (или wxWindows).",
	"assets/modules.json.FindwxWindows": "Поиск установки wxWindows (wxWidgets)",
	"assets/modules.json.FindX11": "Поиск установки X11",
	"assets/modules.json.FindXalanC": "Поиск заголовков и библиотек процессора преобразования XSL Apache Xalan-C++.",
	"assets/modules.json.FindXCTest": "Функции создания и выполнения пакетов XCTest.",
	"assets/modules.json.FindXercesC": "Поиск заголовков и библиотек анализа и проверки XML Apache Xerces-C++.",
	"assets/modules.json.FindXMLRPC": "Поиск xmlrpc",
	"assets/modules.json.FindZLIB": "Поиск собственных включений и библиотеки ZLIB.",
	"assets/modules.json.FortranCInterface": "Обнаружение интерфейса Fortran/C",
	"assets/modules.json.GenerateExportHeader": "Функция генерирования макросов экспорта для библиотек",
	"assets/modules.json.GetPrerequisites": "Функции анализа и получения списка необходимых компонентов для исполняемого файла.",
	"assets/modules.json.GNUInstallDirs": "Определение стандартных каталогов установки GNU",
	"assets/modules.json.GoogleTest": "Этот модуль определяет функции, которые помогают использовать инфраструктуру Google Test. Предоставляются два механизма добавления тестов. gtest_add_tests существует уже некоторое время, сначала из find_package(GTest), а gtest_discover_tests появился в CMake 3.10.",
	"assets/modules.json.InstallRequiredSystemLibraries": "Включите этот модуль для поиска системных библиотек среды выполнения, предоставляемых компилятором, и добавления правил установки для них. Для регулировки поведения модуля перед его включением можно задать некоторые необязательные переменные:",
	"assets/modules.json.MacroAddFileDependencies": "Не используйте эту команду в новом коде. Это просто оболочка:",
	"assets/modules.json.ProcessorCount": "ProcessorCount(var)",
	"assets/modules.json.SelectLibraryConfigurations": "Этот макрос принимает в качестве аргумента базовое имя библиотеки и выбирает хорошие значения для переменных",
	"assets/modules.json.SquishTestScript": "Этот сценарий запускает тест GUI с помощью Squish. Не следует вызывать сценарий напрямую; вместо этого следует получить доступ к нему с помощью макроса SQUISH_ADD_TEST, определенного в FindSquish.cmake.",
	"assets/modules.json.TestBigEndian": "Проверка порядка байтов в целевой архитектуре: прямой или обратный.",
	"assets/modules.json.TestCXXAcceptsFlag": "Проверка, принимает ли компилятор CXX флаг.",
	"assets/modules.json.TestForANSIForScope": "Проверка поддержки ANSI в области",
	"assets/modules.json.TestForANSIStreamHeaders": "Проверка поддержки компилятором ANSI в заголовках потоков iostream и др.",
	"assets/modules.json.TestForSSTREAM": "Проверка поддержки компилятором ANSI в заголовке sstream",
	"assets/modules.json.TestForSTDNamespace": "Проверка поддержки пространства имен std::",
	"assets/modules.json.UseEcos": "Этот модуль определяет переменные и макросы, необходимые для сборки приложения eCos.",
	"assets/modules.json.UseJava": "Этот файл предоставляет поддержку для Java. Предполагается, что модуль FindJava уже загружен. Сведения о том, как загрузить Java в проект CMake, см. в описании модуля FindJava.",
	"assets/modules.json.UseJavaClassFilelist": "Этот модуль был ранее задокументирован по ошибке и никогда не предназначался для прямого включения в код проекта. См. модуль :module:`UseJava`.",
	"assets/modules.json.UseJavaSymlinks": "Этот модуль был ранее задокументирован по ошибке и никогда не предназначался для прямого включения в код проекта. См. модуль :module:`UseJava`.",
	"assets/modules.json.UsePkgConfig": "Устаревший модуль pkg-config для CMake, используйте вместо него FindPkgConfig.",
	"assets/modules.json.UseSWIG": "Этот файл предоставляет поддержку для SWIG. Предполагается, что модуль FindSWIG уже загружен.",
	"assets/modules.json.UsewxWidgets": "Удобное включение для использования библиотеки wxWidgets.",
	"assets/modules.json.Use_wxWindows": "Эта вспомогательная функция проверяет, установлен ли wxWindows, и задает соответствующие библиотеки, каталоги включений, флаги и т. д. Автор: Jan Woetzel <jw -at- mip.informatik.uni-kiel.de> (07/2003)",
	"assets/modules.json.WriteBasicConfigVersionFile": "Не рекомендуется начиная с версии 3.0: используйте идентичную команду write_basic_package_version_file() из модуля CMakePackageConfigHelpers.",
	"assets/modules.json.WriteCompilerDetectionHeader": "Этот модуль предоставляет функцию write_compiler_detection_header()."
}
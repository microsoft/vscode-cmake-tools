/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"assets/modules.json.AddFileDependencies": "Ajoutez des dépendances à un fichier source.",
	"assets/modules.json.AndroidTestUtilities": "Créez un test qui charge automatiquement les données spécifiées sur un appareil Android.",
	"assets/modules.json.BundleUtilities": "Fonctions permettant d’assembler une application groupée autonome.",
	"assets/modules.json.CheckCCompilerFlag": "Vérifiez si le compilateur C prend en charge un indicateur donné.",
	"assets/modules.json.CheckCompilerFlag": "Vérifiez si le compilateur prend en charge un indicateur donné.",
	"assets/modules.json.CheckCSourceCompiles": "Vérifiez si la source C donnée compile et lie un fichier exécutable.",
	"assets/modules.json.CheckCSourceRuns": "Vérifiez si la source C donnée compile et lie dans un exécutable et peut ensuite être exécutée.",
	"assets/modules.json.CheckCXXCompilerFlag": "Vérifiez si le compilateur CXX prend en charge un indicateur donné.",
	"assets/modules.json.CheckCXXSourceCompiles": "Vérifiez si la source C++ donnée compile et lie un fichier exécutable.",
	"assets/modules.json.CheckCXXSourceRuns": "Vérifiez si la source C++ donnée compile et lie dans un exécutable et peut ensuite être exécutée.",
	"assets/modules.json.CheckCXXSymbolExists": "Vérifiez si un symbole existe en tant que fonction, variable ou macro en C++.",
	"assets/modules.json.CheckFortranCompilerFlag": "Vérifiez si le compilateur Fortran prend en charge un indicateur donné.",
	"assets/modules.json.CheckFortranFunctionExists": "Vérifiez si une fonction Fortran existe.",
	"assets/modules.json.CheckFortranSourceCompiles": "Vérifiez si la source Fortran donnée compile et lie dans un exécutable.",
	"assets/modules.json.CheckFortranSourceRuns": "Vérifiez si la source Fortran donnée compile et lie dans un exécutable et peut ensuite être exécutée.",
	"assets/modules.json.CheckFunctionExists": "Vérifier si une fonction C peut être liée",
	"assets/modules.json.CheckIncludeFile": "Fournit une macro pour vérifier si un fichier d’en-tête peut être inclus dans C.",
	"assets/modules.json.CheckIncludeFileCXX": "Fournit une macro pour vérifier si un fichier d’en-tête peut être inclus dans CXX.",
	"assets/modules.json.CheckIncludeFiles": "Fournit une macro pour vérifier si une liste d’un ou plusieurs fichiers d’en-tête peut être incluse.",
	"assets/modules.json.CheckIPOSupported": "Vérifiez si le compilateur prend en charge une optimisation interprocédurale (IPO/LTO). Utilisez cette option avant d’activer la propriété cible INTERPROCEDURAL_OPTIMIZATION.",
	"assets/modules.json.CheckLanguage": "Vérifiez si un langage peut être activée par les commandes de enable_language ou de projet :",
	"assets/modules.json.CheckLibraryExists": "Vérifiez si la fonction existe.",
	"assets/modules.json.CheckLinkerFlag": "Vérifiez si le compilateur prend en charge un indicateur de lien donné.",
	"assets/modules.json.CheckOBJCCompilerFlag": "Vérifiez si le compilateur Objective-C prend en charge un indicateur donné.",
	"assets/modules.json.CheckOBJCSourceCompiles": "Vérifiez si la source Objective-C donnée compile et lie un fichier exécutable.",
	"assets/modules.json.CheckOBJCSourceRuns": "Vérifiez si la source Objective-C donnée compile et lie un fichier exécutable et peut ensuite être exécutée.",
	"assets/modules.json.CheckOBJCXXCompilerFlag": "Vérifiez si le compilateur Objective-C++ prend en charge un indicateur donné.",
	"assets/modules.json.CheckOBJCXXSourceCompiles": "Vérifiez si la source Objective-C++ donnée compile et lie un fichier exécutable.",
	"assets/modules.json.CheckOBJCXXSourceRuns": "Vérifiez si la source Objective-C++ donnée compile et lie un fichier exécutable et peut ensuite être exécutée.",
	"assets/modules.json.CheckPIESupported": "Vérifiez si l’éditeur de liens prend en charge le code indépendant de position (PIE) ou aucun code indépendant de position (NO_PIE) pour les exécutables. Utilisez cette option pour vous assurer que la propriété cible POSITION_INDEPENDENT_CODE pour les exécutables sera respectée au moment du lien.",
	"assets/modules.json.CheckPrototypeDefinition": "Vérifiez si le prototype attendu est correct.",
	"assets/modules.json.CheckSourceCompiles": "Vérifiez si la source donnée compile et lie un fichier exécutable.",
	"assets/modules.json.CheckSourceRuns": "Vérifiez si une source donnée compile et lie un fichier exécutable et peut ensuite être exécutée.",
	"assets/modules.json.CheckStructHasMember": "Vérifier si le struct ou la classe donné a la variable membre spécifiée",
	"assets/modules.json.CheckSymbolExists": "Fournit une macro pour vérifier si un symbole existe en tant que fonction, variable ou macro en C.",
	"assets/modules.json.CheckTypeSize": "Vérifier la taille d’un type",
	"assets/modules.json.CheckVariableExists": "Vérifiez si la variable existe.",
	"assets/modules.json.CMakeAddFortranSubdirectory": "Ajoutez un sous-répertoire fortran seul, recherchez un compilateur fortran et générez.",
	"assets/modules.json.CMakeBackwardCompatibilityCXX": "définir un ensemble de variables de compatibilité descendante",
	"assets/modules.json.CMakeDependentOption": "Macro pour fournir une option qui dépend d’autres options.",
	"assets/modules.json.CMakeDetermineVSServicePack": "La fonctionnalité de ce module a été remplacée par la variable CMAKE_<LANG>_COMPILER_VERSION qui contient le numéro de version du compilateur.",
	"assets/modules.json.CMakeExpandImportedTargets": "Ce module était auparavant nécessaire pour développer les cibles importées dans les bibliothèques sous-jacentes qu’ils référencent sur le disque pour les utiliser avec les commandes try_compile et try_run. Ces commandes prennent désormais en charge les bibliothèques importées dans leurs options de LINK_LIBRARIES (depuis CMake 2.8.11 pour try_compile et depuis CMake 3.2 pour try_run).",
	"assets/modules.json.CMakeFindDependencyMacro": "La macro ``find_dependency()`` encapsule un appel :command:`find_package` pour une dépendance de package.",
	"assets/modules.json.CMakeFindFrameworks": "module d’assistance pour rechercher des frameworks OSX",
	"assets/modules.json.CMakeFindPackageMode": "Ce fichier est exécuté par cmake lorsqu’il est appelé avec --find-package <Find-Package Tool Mode>. Il s’attend à ce que les variables suivantes soient définies à l’aide de -D :",
	"assets/modules.json.CMakeForceCompiler": "Les macros fournies par ce module étaient auparavant destinées à être utilisées par des fichiers de chaîne d’outils de compilation croisée lorsque CMake n’était pas en mesure de détecter automatiquement l’identification du compilateur. Depuis l'introduction de ce module, les capacités d'identification des compilateurs de CMake ont été améliorées et il est désormais possible de leur apprendre à reconnaître n'importe quel compilateur. En outre, la suite d’informations détectées par CMake à partir d’un compilateur est désormais trop étendue pour être fournie par les fichiers de chaîne d’outils à l’aide de ces macros.",
	"assets/modules.json.CMakeGraphVizOptions": "Prise en charge Graphviz intégrée de CMake.",
	"assets/modules.json.CMakePackageConfigHelpers": "Fonctions d’assistance permettant de créer des fichiers de configuration qui peuvent être inclus par d’autres projets pour rechercher et utiliser un package.",
	"assets/modules.json.CMakeParseArguments": "Ce module a implémenté une fois la commande cmake_parse_arguments qui est maintenant implémentée en mode natif par CMake. Il s'agit maintenant d'un espace vide pour des raisons de compatibilité avec les projets qui l'incluent pour obtenir la commande à partir de CMake 3.4 et des versions inférieures.",
	"assets/modules.json.CMakePrintHelpers": "Fonctions pratiques pour l’impression de propriétés et de variables, utiles par exemple pour le débogage.",
	"assets/modules.json.CMakePrintSystemInformation": "Imprimez les informations système.",
	"assets/modules.json.CMakePushCheckState": "Ce module définit trois macros : CMAKE_PUSH_CHECK_STATE() CMAKE_POP_CHECK_STATE() et CMAKE_RESET_CHECK_STATE() Ces macros peuvent être utilisées pour enregistrer, restaurer et réinitialiser (c’est-à-dire effacer le contenu) l’état des variables CMAKE_REQUIRED_FLAGS, CMAKE_REQUIRED_DEFINITIONS, CMAKE_REQUIRED_LINK_OPTIONS, CMAKE_REQUIRED_LIBRARIES, CMAKE_REQUIRED_INCLUDES et CMAKE_EXTRA_INCLUDE_FILES utilisées par les différents fichiers d’archivage en provenance de CMake, par exemple, check_function_exists() etc. Le contenu de la variable est envoyé (push) sur une pile, il est possible de l’envoer (push) plusieurs fois. Cela est utile, par exemple, lors de l’exécution de ces tests dans un module Find, où ils doivent être définis, mais une fois le module Find exécuté, ils doivent avoir la même valeur qu’auparavant.",
	"assets/modules.json.CMakeVerifyManifest": "CMakeVerifyManifest.cmake",
	"assets/modules.json.CPack": "Configurez des générateurs pour les programmes d’installation binaires et les packages sources.",
	"assets/modules.json.CPackArchive": "La documentation du générateur d’archivage CPack a été déplacée ici : Générateur CPack Archive",
	"assets/modules.json.CPackBundle": "La documentation du générateur de CPack Bundle a été déplacée ici : Générateur CPack Bundle",
	"assets/modules.json.CPackComponent": "Configurez des composants pour les programmes d’installation binaires et les packages sources.",
	"assets/modules.json.CPackCygwin": "La documentation du générateur CPack Cygwin a été déplacée ici : Générateur CPack Cygwin",
	"assets/modules.json.CPackDeb": "La documentation du générateur CPack DEB a été déplacée ici : Générateur CPack DEB",
	"assets/modules.json.CPackDMG": "La documentation du générateur DragNDrop CPack a été déplacée ici : Générateur DragNDrop CPack",
	"assets/modules.json.CPackFreeBSD": "La documentation du générateur CPack FreeBSD a été déplacée ici : Générateur CPack FreeBSD",
	"assets/modules.json.CPackIFW": "Ce module recherche l’emplacement des utilitaires de ligne de commande fournis avec Qt Installer Framework (QtIFW).",
	"assets/modules.json.CPackIFWConfigureFile": "Le module définit la commande similaire configure_file pour configurer les modèles de fichiers préparés dans le style QtIFW/SDK/Creator.",
	"assets/modules.json.CPackNSIS": "La documentation du générateur NSIS CPack a été déplacée ici : Générateur NSIS CPack",
	"assets/modules.json.CPackNuGet": "La documentation du générateur NuGet CPack a été déplacée ici : Générateur CPack NuGet",
	"assets/modules.json.CPackProductBuild": "La documentation du générateur de productbuild CPack a été déplacée ici : Générateur de productbuild CPack",
	"assets/modules.json.CPackRPM": "La documentation du générateur CPack RPM a été déplacée ici : Générateur CPack RPM",
	"assets/modules.json.CPackWIX": "La documentation du générateur NuGet CPack a été déplacée ici : Générateur NuGet CPack",
	"assets/modules.json.CSharpUtilities": "Fonctions pour faciliter la configuration des cibles CSharp/.NET.",
	"assets/modules.json.CTest": "Configurer un projet à des fins de test avec CTest/CDash",
	"assets/modules.json.CTestCoverageCollectGCOV": "Ce module fournit la fonction ctest_coverage_collect_gcov.",
	"assets/modules.json.CTestScriptMode": "Ce fichier est lu par ctest en mode script (-S)",
	"assets/modules.json.CTestUseLaunchers": "Définissez les propriétés globales RULE_LAUNCH_* lorsque CTEST_USE_LAUNCHERS est activé.",
	"assets/modules.json.Dart": "Configurer un projet pour le tester avec CTest ou l'ancien client Tcl de Dart",
	"assets/modules.json.DeployQt4": "Fonctions permettant d’assembler un exécutable Qt4 autonome.",
	"assets/modules.json.Documentation": "Ce module prend en charge l’infrastructure de documentation VTK. Il s’appuie sur plusieurs outils (Doxygen, Perl, etc.).",
	"assets/modules.json.ExternalData": "Gérer les fichiers de données stockés en dehors de l’arborescence source",
	"assets/modules.json.ExternalProject": "La fonction ExternalProject_Add() crée une cible personnalisée pour générer les étapes de téléchargement, de mise à jour/correctif, de configuration, de génération, d’installation et de test d’un projet externe",
	"assets/modules.json.FeatureSummary": "Fonctions permettant de générer un résumé des fonctionnalités activées/désactivées.",
	"assets/modules.json.FetchContent": "Ce module permet de remplir le contenu au moment de la configuration via n’importe quelle méthode prise en charge par le module ExternalProject. Alors que ExternalProject_Add() télécharge au moment de la build, le module FetchContent rend le contenu disponible immédiatement, ce qui permet à l'étape configure d'utiliser le contenu dans des commandes telles que add_subdirectory(), include() ou file().",
	"assets/modules.json.FindALSA": "Rechercher une architecture audio Linux avancée (ALSA)",
	"assets/modules.json.FindArmadillo": "Recherchez la bibliothèque Armadillo C++. Armadillo est une bibliothèque pour l'algèbre linéaire et le calcul scientifique.",
	"assets/modules.json.FindASPELL": "Essayer de rechercher ASPELL",
	"assets/modules.json.FindAVIFile": "Localiser la bibliothèque AVIFILE et inclure les chemins d’accès",
	"assets/modules.json.FindBacktrace": "Rechercher un fournisseur pour backtrace(3).",
	"assets/modules.json.FindBISON": "Recherchez un exécutable et fournissez une macro pour générer des règles de build personnalisées.",
	"assets/modules.json.FindBLAS": "Rechercher la bibliothèque BLAS (Basic Linear Algebra Subprograms)",
	"assets/modules.json.FindBoost": "Rechercher les répertoires et bibliothèques d'inclusion de Boost",
	"assets/modules.json.FindBullet": "Essayer de rechercher le moteur physique Bullet",
	"assets/modules.json.FindBZip2": "Essayer de rechercher BZip2",
	"assets/modules.json.FindCABLE": "Rechercher CABLE",
	"assets/modules.json.FindCoin3D": "Rechercher Coin3D (Open Inventor)",
	"assets/modules.json.FindCUDA": "Il n’est plus nécessaire d’utiliser ce module ou d’appeler find_package (CUDA) pour compiler du code CUDA. Au lieu de cela, répertoriez CUDA parmi les langues nommées dans l’appel de niveau supérieur à la commande de projet, ou appelez la commande enable_language avec CUDA. Ensuite, vous pouvez ajouter des sources CUDA (.cu) directement à des cibles similaires à d’autres langages.",
	"assets/modules.json.FindCUDAToolkit": "Ce script recherche le kit de ressources CUDA NVIDIA et les bibliothèques associées, mais ne nécessite pas l’activation du langage CUDA pour un projet donné. Ce module ne recherche pas les exemples CUDA NVIDIA.",
	"assets/modules.json.FindCups": "Recherchez le système d'impression commun d'UNIX (CUPS).",
	"assets/modules.json.FindCURL": "Recherchez les bibliothèques et en-têtes CURL natifs.",
	"assets/modules.json.FindCurses": "Recherchez les chemins d’accès ou les éléments suivants : fichier et bibliothèque.",
	"assets/modules.json.FindCVS": "Recherchez le système de versions simultanées (CVS).",
	"assets/modules.json.FindCxxTest": "Recherchez l’infrastructure de test unitaire CxxTest.",
	"assets/modules.json.FindCygwin": "Rechercher Cygwin, un environnement compatible POSIX qui s’exécute en mode natif sur Microsoft Windows",
	"assets/modules.json.FindDart": "Rechercher DART",
	"assets/modules.json.FindDCMTK": "Rechercher des bibliothèques et des applications DCMTK (DICOM ToolKit)",
	"assets/modules.json.FindDevIL": "Ce module localise la bibliothèque d’images du développeur. https://openil.sourceforge.net/",
	"assets/modules.json.FindDoxygen": "Doxygen est un outil de génération de documentation (voir https://www.doxygen.nl). Ce module recherche Doxygen et certains outils facultatifs qu’il prend en charge :",
	"assets/modules.json.FindEnvModules": "Recherchez une implémentation de module d’environnement et mettez les commandes à la disposition des scripts CMake pour les utiliser. Ceci est compatible avec les Lmod basés sur Lua et les EnvironmentModules basés sur TCL.",
	"assets/modules.json.FindEXPAT": "Rechercher les en-têtes et la bibliothèque native d'Expat. Expat est une bibliothèque d'analyseur XML orienté flux écrite en C.",
	"assets/modules.json.FindFLEX": "Recherche l'exécutable Fast Lexical Analyzer (Flex) et fournit une macro pour générer des règles de build personnalisées.",
	"assets/modules.json.FindFLTK": "Rechercher la bibliothèque FLTK (Fast Light Toolkit)",
	"assets/modules.json.FindFLTK2": "Rechercher les inclusions et les bibliothèques natives de FLTK 2.0",
	"assets/modules.json.FindFontconfig": "Recherchez les en-têtes et la bibliothèque Fontconfig.",
	"assets/modules.json.FindFreetype": "Rechercher les inclusions et la bibliothèque du moteur de rendu des polices FreeType.",
	"assets/modules.json.FindGCCXML": "Recherchez l’exécutable Front-end GCC-XML.",
	"assets/modules.json.FindGDAL": "Rechercher la bibliothèque d’abstraction de données géospatiales (GDAL).",
	"assets/modules.json.FindGettext": "Rechercher des outils gettext GNU",
	"assets/modules.json.FindGIF": "Recherche la bibliothèque format GIF (GIF) (giflib)",
	"assets/modules.json.FindGit": "Le module définit les variables suivantes :",
	"assets/modules.json.FindGLEW": "Rechercher la bibliothèque Wrangler d’extension OpenGL (GLEW)",
	"assets/modules.json.FindGLUT": "Recherchez la bibliothèque GLUT (OpenGL Utility Toolkit) et incluez des fichiers.",
	"assets/modules.json.FindGnuplot": "ce module recherche gnuplot",
	"assets/modules.json.FindGnuTLS": "Rechercher la bibliothèque de protocole TLS GNU (gnutls)",
	"assets/modules.json.FindGSL": "Rechercher les inclusions et les bibliothèques natives de la bibliothèque scientifique GNU (GSL).",
	"assets/modules.json.FindGTest": "Recherchez l’infrastructure de test Google C++.",
	"assets/modules.json.FindGTK": "Rechercher GTK, glib et GTKGLArea",
	"assets/modules.json.FindGTK2": "Recherchez les bibliothèques de widgets GTK2 et plusieurs de ses autres composants facultatifs tels que gtkmm, glade et glademm.",
	"assets/modules.json.FindHDF5": "Recherchez Hierarchical Data Format (HDF5), une bibliothèque permettant de lire et d'écrire des données sous forme de tableaux auto-décrivants.",
	"assets/modules.json.FindHg": "Extrayez les informations d’une copie de travail mercurielle.",
	"assets/modules.json.FindHSPELL": "Essayez de rechercher le vérificateur orthographique hébreu (Hspell) et le moteur de l’orthographe.",
	"assets/modules.json.FindHTMLHelp": "Ce module recherche le compilateur d’aide HTML Microsoft",
	"assets/modules.json.FindIce": "Recherchez les programmes, bibliothèques et fichiers de données du moteur de communication Internet (ICE) ZeroC.",
	"assets/modules.json.FindIconv": "Ce module recherche les fonctions POSIX.1 iconv() sur le système. Ces fonctions peuvent être fournies dans la bibliothèque C standard ou en externe sous la forme d’une bibliothèque supplémentaire.",
	"assets/modules.json.FindIcotool": "Rechercher icotool",
	"assets/modules.json.FindICU": "Recherchez les bibliothèques et programmes ICU (International Components for Unicode).",
	"assets/modules.json.FindImageMagick": "Recherchez ImageMagick, suite logicielle pour l’affichage, la conversion et la manipulation d’images raster.",
	"assets/modules.json.FindIntl": "Rechercher les en-têtes et les bibliothèques de Gettext libintl.",
	"assets/modules.json.FindITK": "Ce module n’existe plus.",
	"assets/modules.json.FindJasper": "Recherchez la bibliothèque Jasper JPEG2000.",
	"assets/modules.json.FindJava": "Rechercher Java",
	"assets/modules.json.FindJNI": "Recherchez les en-têtes et bibliothèques Java Native Interface (JNI).",
	"assets/modules.json.FindJPEG": "Rechercher la bibliothèque du Joint Photographic Experts Group (JPEG) (libjpeg)",
	"assets/modules.json.FindKDE3": "Rechercher les répertoires d'inclusion et de bibliothèque de KDE3, les préprocesseurs de KDE et définir quelques macros.",
	"assets/modules.json.FindKDE4": "Recherchez KDE4 et fournissez toutes les variables et macros nécessaires pour compiler les logiciels pour celui-ci. Il recherche KDE 4 dans les répertoires suivants dans l’ordre donné :",
	"assets/modules.json.FindLAPACK": "Rechercher la bibliothèque PACKage d’algèbre linéaire (LAPACK)",
	"assets/modules.json.FindLATEX": "Rechercher LaTeX",
	"assets/modules.json.FindLibArchive": "Rechercher la bibliothèque libarchive et les en-têtes. Libarchive est une bibliothèque d’archivage et de compression multi-format.",
	"assets/modules.json.FindLibinput": "Recherchez les en-têtes et la bibliothèque libinput.",
	"assets/modules.json.FindLibLZMA": "Recherchez les en-têtes et la bibliothèque de l’algorithme de compression LZMA.",
	"assets/modules.json.FindLibXml2": "Recherchez la bibliothèque de traitement XML (libxml2).",
	"assets/modules.json.FindLibXslt": "Rechercher les transformations XSL, bibliothèque XSLT (Extensible Stylesheet Language Transformations) (LibXslt)",
	"assets/modules.json.FindLTTngUST": "Recherchez la bibliothèque LTTng-UST (Linux Trace Toolkit Next Generation).",
	"assets/modules.json.FindLua": "Localisez la bibliothèque Lua.",
	"assets/modules.json.FindLua50": "Localisez la bibliothèque Lua.",
	"assets/modules.json.FindLua51": "Localisez la bibliothèque Lua. Ce module définit :",
	"assets/modules.json.FindMatlab": "Recherche Matlab ou Matlab Compiler Runtime (MCR) et fournit des outils, des bibliothèques et des compilateurs Matlab à CMake.",
	"assets/modules.json.FindMFC": "Rechercher bibliothèque MFC (Microsoft Foundation Class) (MFC) sur Windows",
	"assets/modules.json.FindMotif": "Essayez de rechercher Motif (ou lesstif)",
	"assets/modules.json.FindMPEG": "Rechercher les inclusions et la bibliothèque MPEG natives",
	"assets/modules.json.FindMPEG2": "Rechercher les inclusions et la bibliothèque MPEG2 natives",
	"assets/modules.json.FindMPI": "Rechercher une implémentation de l'interface de passage de messages (MPI).",
	"assets/modules.json.FindMsys": "Recherchez MSYS, un environnement compatible POSIX qui s’exécute en mode natif sur Microsoft Windows",
	"assets/modules.json.FindODBC": "Recherchez un répertoire d'inclusion et une bibliothèque ODBC (Open Database Connectivity).",
	"assets/modules.json.FindOpenACC": "Détectez la prise en charge d’OpenACC par le compilateur.",
	"assets/modules.json.FindOpenAL": "Recherche Open Audio Library (OpenAL).",
	"assets/modules.json.FindOpenCL": "Recherche Open Computing Language (OpenCL)",
	"assets/modules.json.FindOpenGL": "FindModule pour OpenGL et la bibliothèque d’utilitaires OpenGL (GLU).",
	"assets/modules.json.FindOpenMP": "Recherche la prise en charge d’Open Multi-Processing (OpenMP).",
	"assets/modules.json.FindOpenSceneGraph": "Rechercher OpenSceneGraph (interface de programmation d’applications graphiques 3D)",
	"assets/modules.json.FindOpenSP": "Essayez de rechercher la bibliothèque OpenSP.",
	"assets/modules.json.FindOpenSSL": "Recherchez la bibliothèque de chiffrement OpenSSL.",
	"assets/modules.json.FindOpenThreads": "OpenThreads est une bibliothèque de threads basée sur C++. Sa base d’utilisateurs la plus grande semble être OpenSceneGraph. Vous remarquerez peut-être que j’accepte OSGDIR comme chemin d’accès à l’environnement. Je considère que cela fait partie de la suite Findosg* utilisée pour rechercher les composants d'OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module.",
	"assets/modules.json.Findosg": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgAnimation": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgDB": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgFX": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgGA": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgIntrospection": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgManipulator": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgParticle": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgPresentation": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgProducer": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgQt": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgShadow": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgSim": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgTerrain": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgText": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgUtil": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgViewer": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgVolume": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.FindosgWidget": "Ceci fait partie de la suite Findosg* utilisée pour rechercher les composants OpenSceneGraph. Chaque composant est distinct et vous devez accepter chaque module. Vous devez également choisir OpenGL et OpenThreads (et Producer si nécessaire), car ces modules ne le feront pas pour vous. Cela vous permet de contrôler votre propre système, morceau par morceau, au cas où vous auriez besoin de vous passer de certains composants ou de changer le comportement de Find pour un module particulier (par exemple, parce que le module FindOpenGL par défaut ne fonctionne pas avec votre système). Si vous souhaitez utiliser un module plus pratique qui inclut tout, utilisez FindOpenSceneGraph au lieu des modules Findosg*.cmake.",
	"assets/modules.json.Findosg_functions": "Ce fichier CMake contient deux macros pour faciliter la recherche de bibliothèques OSG et de nodekits. Pour obtenir une documentation complète, consultez FindOpenSceneGraph.",
	"assets/modules.json.FindPackageHandleStandardArgs": "Ce module fournit des fonctions destinées à être utilisées dans les modules de recherche implémentant des appels find_package(<PackageName>).",
	"assets/modules.json.FindPackageMessage": "Cette fonction est destinée à être utilisée dans les fichiers de modules FindXXX.cmake. Elle imprimera un message une fois pour chaque résultat de recherche unique. Cela est utile pour indiquer à l’utilisateur où un package a été trouvé. Le premier argument spécifie le nom (XXX) du package. Le deuxième argument spécifie le message à afficher. Le troisième argument répertorie des détails sur le résultat de la recherche afin que s’ils changent, le message s’affiche à nouveau. La macro obéit également à l'argument QUIET de la commande find_package.",
	"assets/modules.json.FindPatch": "Le module définit les variables suivantes :",
	"assets/modules.json.FindPerl": "Recherchez un interpréteur Perl.",
	"assets/modules.json.FindPerlLibs": "Rechercher les bibliothèques Perl",
	"assets/modules.json.FindPHP4": "Rechercher PHP4",
	"assets/modules.json.FindPhysFS": "Localiser la bibliothèque PhysFS Ce module définit :",
	"assets/modules.json.FindPike": "Rechercher Pike",
	"assets/modules.json.FindPkgConfig": "Module pkg-config pour CMake.",
	"assets/modules.json.FindPNG": "Recherchez libpng, la bibliothèque de référence officielle pour le format d’image PNG.",
	"assets/modules.json.FindPostgreSQL": "Recherchez l’installation de PostgreSQL.",
	"assets/modules.json.FindProducer": "Bien que Producer ne fasse pas directement partie d'OpenSceneGraph, son principal utilisateur est OSG et je considère donc qu'il fait partie de la suite Findosg* utilisée pour trouver les composants d'OpenSceneGraph. Vous remarquerez que j’accepte OSGDIR comme chemin d’accès à l’environnement.",
	"assets/modules.json.FindProtobuf": "Recherchez et configurez la bibliothèque de mémoires tampons de protocole Google.",
	"assets/modules.json.FindPython": "Recherchez l’interpréteur Python, le compilateur et l’environnement de développement (y compris les répertoires et les bibliothèques).",
	"assets/modules.json.FindPython2": "Recherchez l’interpréteur Python 2, le compilateur et l’environnement de développement (y compris les répertoires et les bibliothèques).",
	"assets/modules.json.FindPython3": "Recherchez l’interpréteur Python 3, le compilateur et l’environnement de développement (y compris les répertoires et les bibliothèques).",
	"assets/modules.json.FindPythonInterp": "Rechercher un interpréteur Python",
	"assets/modules.json.FindPythonLibs": "Rechercher les bibliothèques Python",
	"assets/modules.json.FindQt": "Recherche toutes les versions installées de Qt3 ou Qt4.",
	"assets/modules.json.FindQt3": "Localiser les chemins d'inclusion et les bibliothèques de Qt",
	"assets/modules.json.FindQt4": "Ce module peut être utilisé pour rechercher Qt4. Le problème le plus important est que Qt4 qmake est disponible via le chemin d’accès système. Ce qmake est ensuite utilisé pour détecter essentiellement tout le reste. Ce module définit un certain nombre de cibles, macros et variables IMPORTÉES.",
	"assets/modules.json.FindQuickTime": "Localiser QuickTime Ce module définit :",
	"assets/modules.json.FindRTI": "Essayer de trouver des bibliothèques RTI M&S HLA",
	"assets/modules.json.FindRuby": "Rechercher Ruby",
	"assets/modules.json.FindSDL": "Localiser la bibliothèque SDL",
	"assets/modules.json.FindSDL_gfx": "Localiser la bibliothèque SDL_gfx",
	"assets/modules.json.FindSDL_image": "Localiser la bibliothèque SDL_image",
	"assets/modules.json.FindSDL_mixer": "Localiser la bibliothèque SDL_mixer",
	"assets/modules.json.FindSDL_net": "Localiser la bibliothèque SDL_net",
	"assets/modules.json.FindSDL_sound": "Localise la bibliothèque SDL_sound",
	"assets/modules.json.FindSDL_ttf": "Localiser la bibliothèque SDL_ttf",
	"assets/modules.json.FindSelfPackers": "Rechercher upx",
	"assets/modules.json.FindSQLite3": "Rechercher les bibliothèques SQLite, v3",
	"assets/modules.json.FindSquish": "-- Utilisation classique",
	"assets/modules.json.FindSubversion": "Extraire des informations d’une copie de travail subversion",
	"assets/modules.json.FindSWIG": "Recherchez l'exécutable SWIG (Simplified Wrapper and Interface Generator).",
	"assets/modules.json.FindTCL": "TK_INTERNAL_PATH a été supprimé.",
	"assets/modules.json.FindTclsh": "Rechercher tclsh",
	"assets/modules.json.FindTclStub": "TCL_STUB_LIBRARY_DEBUG et TK_STUB_LIBRARY_DEBUG ont été supprimés.",
	"assets/modules.json.FindThreads": "Ce module détermine la bibliothèque de threads du système.",
	"assets/modules.json.FindTIFF": "Recherchez la bibliothèque TIFF (libtiff, https://libtiff.gitlab.io/libtiff/).",
	"assets/modules.json.FindUnixCommands": "Rechercher des commandes Unix, y compris celles de Cygwin",
	"assets/modules.json.FindVTK": "Ce module n’existe plus.",
	"assets/modules.json.FindVulkan": "Recherchez Vulkan, qui est une API de calcul et graphiques 3D multiplateformes à faible surcharge.",
	"assets/modules.json.FindWget": "Rechercher wget",
	"assets/modules.json.FindWish": "Rechercher l’installation de wish",
	"assets/modules.json.FindwxWidgets": "Trouvez une installation de wxWidgets (alias wxWindows).",
	"assets/modules.json.FindwxWindows": "Rechercher l’installation de wxWindows (wxWidgets)",
	"assets/modules.json.FindX11": "Rechercher l’installation de X11",
	"assets/modules.json.FindXalanC": "Recherchez les bibliothèques et en-têtes de processeur de transformation XSL Apache Xalan-C++.",
	"assets/modules.json.FindXCTest": "Fonctions permettant de créer et d’exécuter des bundles XCTest.",
	"assets/modules.json.FindXercesC": "Recherchez les bibliothèques et en-têtes d’analyseur XML de validation Apache Xerces-C++.",
	"assets/modules.json.FindXMLRPC": "Rechercher xmlrpc",
	"assets/modules.json.FindZLIB": "Recherchez les inclusions et les bibliothèques natives de ZLIB.",
	"assets/modules.json.FortranCInterface": "Détection de l’interface Fortran/C",
	"assets/modules.json.GenerateExportHeader": "Fonction pour la génération de macros d’exportation pour les bibliothèques",
	"assets/modules.json.GetPrerequisites": "Fonctions permettant d’analyser et de répertorier les prérequis des fichiers exécutables.",
	"assets/modules.json.GNUInstallDirs": "Définir les répertoires d’installation standard GNU",
	"assets/modules.json.GoogleTest": "Ce module définit des fonctions pour faciliter l’utilisation de l’infrastructure Google Test. Deux mécanismes d’ajout de tests sont fournis. gtest_add_tests existe depuis un certain temps, à l’origine via find_package(GTest). gtest_discover_tests a été introduit dans CMake 3.10.",
	"assets/modules.json.InstallRequiredSystemLibraries": "Incluez ce module pour rechercher des bibliothèques de runtime système fournies par le compilateur et ajouter des règles d’installation pour celles-ci. Certaines variables facultatives peuvent être définies avant d’inclure le module pour ajuster le comportement :",
	"assets/modules.json.MacroAddFileDependencies": "N’utilisez pas cette commande dans le nouveau code. Il s’agit simplement d’un wrapper autour de :",
	"assets/modules.json.ProcessorCount": "ProcessorCount(var)",
	"assets/modules.json.SelectLibraryConfigurations": "Cette macro prend un nom de base de bibliothèque comme argument et choisit les bonnes valeurs pour les variables",
	"assets/modules.json.SquishTestScript": "Ce script lance un test d’interface graphique utilisateur à l’aide de Squish. Vous ne devez pas appeler le script directement ; au lieu de cela, vous devez y accéder via la macro SQUISH_ADD_TEST définie dans FindSquish.cmake.",
	"assets/modules.json.TestBigEndian": "Vérifiez si l’architecture cible est de type avec primauté des octets de poids fort (big-endian) ou mode Little Endian.",
	"assets/modules.json.TestCXXAcceptsFlag": "Vérifiez si le compilateur CXX accepte un indicateur.",
	"assets/modules.json.TestForANSIForScope": "Rechercher ANSI pour la prise en charge de l’étendue",
	"assets/modules.json.TestForANSIStreamHeaders": "Testez la prise en charge par le compilateur des en-têtes de flux ANSI iostream, etc.",
	"assets/modules.json.TestForSSTREAM": "Tester la prise en charge par le compilateur de l’en-tête sstream ANSI",
	"assets/modules.json.TestForSTDNamespace": "Test de prise en charge de l'espace de noms std::",
	"assets/modules.json.UseEcos": "Ce module définit les variables et les macros requises pour générer l’application eCos.",
	"assets/modules.json.UseJava": "Ce fichier prend en charge Java. Il est supposé que FindJava a déjà été chargé. Pour plus d’informations sur le chargement de Java dans votre projet CMake, consultez FindJava.",
	"assets/modules.json.UseJavaClassFilelist": "Ce module a été précédemment documenté par erreur et n’a jamais été destiné à une inclusion directe par le code du projet.  Consultez le module :module:`UseJava`.",
	"assets/modules.json.UseJavaSymlinks": "Ce module a été précédemment documenté par erreur et n’a jamais été destiné à une inclusion directe par le code du projet.  Consultez le module :module:`UseJava`.",
	"assets/modules.json.UsePkgConfig": "Module pkg-config obsolète pour CMake, utilisez FindPkgConfig à la place.",
	"assets/modules.json.UseSWIG": "Ce fichier fournit un support pour SWIG. On suppose que le module FindSWIG a déjà été chargé.",
	"assets/modules.json.UsewxWidgets": "Include de commodité pour l'utilisation de la bibliothèque wxWidgets.",
	"assets/modules.json.Use_wxWindows": "Cette inclusion de commodité vérifie si wxWindows est installé et définit les librairies, incdirs, drapeaux, etc. appropriés. auteur Jan Woetzel <jw -at- mip.informatik.uni-kiel.de> (07/2003)",
	"assets/modules.json.WriteBasicConfigVersionFile": "Déconseillé depuis la version 3.0 : utilisez la commande identique write_basic_package_version_file() du module CMakePackageConfigHelpers.",
	"assets/modules.json.WriteCompilerDetectionHeader": "Ce module fournit la fonction write_compiler_detection_header()."
}
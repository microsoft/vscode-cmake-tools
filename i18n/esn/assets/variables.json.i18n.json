/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"assets/variables.json.ANDROID": "Se establece en 1 cuando el sistema de destino (CMAKE_SYSTEM_NAME) es Android.",
	"assets/variables.json.APPLE": "Se establece en True cuando el sistema de destino es una plataforma de Apple (macOS, iOS, tvOS, visionOS o watchOS).",
	"assets/variables.json.BORLAND": "True si se está usando el compilador Borland.",
	"assets/variables.json.BSD": "Se establece como valor de cadena cuando el sistema de destino es BSD. Este valor puede ser uno de los siguientes: DragonFlyBSD, FreeBSD, OpenBSD o NetBSD.",
	"assets/variables.json.BUILD_SHARED_LIBS": "Indique a add_library que establezca de forma predeterminada las bibliotecas SHARED, en lugar de las bibliotecas STATIC, cuando se le llame sin ningún tipo de biblioteca explícito.",
	"assets/variables.json.CACHE": "Operador para leer las variables de caché.",
	"assets/variables.json.CMAKE_ABSOLUTE_DESTINATION_FILES": "Lista de archivos que se han instalado con una ruta de acceso ABSOLUTE DESTINATION.",
	"assets/variables.json.CMAKE_ADD_CUSTOM_COMMAND_DEPENDS_EXPLICIT_ONLY": "Indica si se debe habilitar la opción DEPENDS_EXPLICIT_ONLY de forma predeterminada en add_custom_command.",
	"assets/variables.json.CMAKE_ADSP_ROOT": "Cuando :ref:`Cross Compiling para ADSP SHARC/Blackfin`, esta variable contiene la ruta de acceso completa a la última instalación de CCES o VDSP++. Se espera que el directorio contenga los compiladores cc21k.exe y ccblkfn.exe. Esto se establecerá automáticamente si se puede encontrar una instalación predeterminada de CCES o VDSP++.",
	"assets/variables.json.CMAKE_AIX_EXPORT_ALL_SYMBOLS": "Valor predeterminado de la propiedad AIX_EXPORT_ALL_SYMBOLS de destino. La variable se usa para inicializar la propiedad en cada destino al crearse.",
	"assets/variables.json.CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS": "Valor predeterminado de la propiedad ANDROID_ANT_ADDITIONAL_OPTIONS de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_API": "Cuando se realiza la compilación cruzada para Android con NVIDIA Nsight Tegra Visual Studio Edition, esta variable puede establecer que se especifique el valor predeterminado para la propiedad de destino ANDROID_API. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_API_MIN": "Valor predeterminado de la propiedad ANDROID_API_MIN de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_ARCH": "Cuando se realiza la compilación cruzada para Android con NVIDIA Nsight Tegra Visual Studio Edition, esta variable puede establecer que se especifique el valor predeterminado para la propiedad de destino ANDROID_ARCH. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_ARCH_ABI": "Cuando se realiza la compilación cruzada para Android, esta variable especifica la arquitectura de destino y el ABI que se van a usar. Los valores válidos son:",
	"assets/variables.json.CMAKE_ANDROID_ARM_MODE": "Cuando se realiza la compilación cruzada para Android y CMAKE_ANDROID_ARCH_ABI está establecido en una de las arquitecturas de armeabi, establezca CMAKE_ANDROID_ARM_MODE en ON para destinarlo a procesadores ARM de 32 bits (-marm). En caso contrario, la configuración predeterminada consiste en destinarlo a procesadores Thumb de 16 bits (-mthumb).",
	"assets/variables.json.CMAKE_ANDROID_ARM_NEON": "Cuando se realiza la compilación cruzada para Android y CMAKE_ANDROID_ARCH_ABI está establecido en armeabi-v7a, establezca CMAKE_ANDROID_ARM_NEON en ON para destinarlo a dispositivos ARM NEON.",
	"assets/variables.json.CMAKE_ANDROID_ASSETS_DIRECTORIES": "Valor predeterminado de la propiedad ANDROID_ASSETS_DIRECTORIES de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_EXCEPTIONS": "Cuando se realiza la compilación cruzada para Android con el NDK, esta variable puede establecerse para especificar si las excepciones están habilitadas.",
	"assets/variables.json.CMAKE_ANDROID_GUI": "Valor predeterminado de la propiedad ANDROID_GUI de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_JAR_DEPENDENCIES": "Valor predeterminado de la propiedad ANDROID_JAR_DEPENDENCIES de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_JAR_DIRECTORIES": "Valor predeterminado de la propiedad ANDROID_JAR_DIRECTORIES de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_JAVA_SOURCE_DIR": "Valor predeterminado de la propiedad ANDROID_JAVA_SOURCE_DIR de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_NATIVE_LIB_DEPENDENCIES": "Valor predeterminado de la propiedad ANDROID_NATIVE_LIB_DEPENDENCIES de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_NATIVE_LIB_DIRECTORIES": "Valor predeterminado de la propiedad ANDROID_NATIVE_LIB_DIRECTORIES de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_NDK": "Cuando se realiza la compilación cruzada para Android con el NDK, esta variable contiene la ruta de acceso absoluta al directorio raíz del NDK. El directorio debe incluir un subdirectorio de plataformas que contenga los directorios android-<api>.",
	"assets/variables.json.CMAKE_ANDROID_NDK_DEPRECATED_HEADERS": "Cuando se realiza la compilación cruzada para Android con el NDK, esta variable puede establecerse para especificar si se van a usar los encabezados por nivel de API en desuso en lugar de los encabezados unificados.",
	"assets/variables.json.CMAKE_ANDROID_NDK_TOOLCHAIN_HOST_TAG": "Cuando se realiza la compilación cruzada para Android con el NDK, esta variable proporciona la \"etiqueta de host\" del NDK que se usa para construir la ruta de acceso a las cadenas de herramientas precompiladas que se ejecutan en el host.",
	"assets/variables.json.CMAKE_ANDROID_NDK_TOOLCHAIN_VERSION": "Cuando se realiza la compilación cruzada para Android con el NDK, esta variable puede establecerse para especificar la versión de la cadena de herramientas que se va a usar como compilador.",
	"assets/variables.json.CMAKE_ANDROID_NDK_VERSION": "Cuando se realiza la compilación cruzada para Android con el NDK, con la versión 11 o posterior de dicho NDK de Android, CMake proporciona esta variable para notificar el número de versión del NDK.",
	"assets/variables.json.CMAKE_ANDROID_PROCESS_MAX": "Valor predeterminado de la propiedad ANDROID_PROCESS_MAX de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_PROGUARD": "Valor predeterminado de la propiedad ANDROID_PROGUARD de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_PROGUARD_CONFIG_PATH": "Valor predeterminado de la propiedad ANDROID_PROGUARD_CONFIG_PATH de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_RTTI": "Cuando se realiza la compilación cruzada para Android con el NDK, esta variable puede establecerse para especificar si RTTI está habilitado.",
	"assets/variables.json.CMAKE_ANDROID_SECURE_PROPS_PATH": "Valor predeterminado de la propiedad ANDROID_SECURE_PROPS_PATH de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_SKIP_ANT_STEP": "Valor predeterminado de la propiedad ANDROID_SKIP_ANT_STEP de destino. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_ANDROID_STANDALONE_TOOLCHAIN": "Cuando se realiza la compilación cruzada para Android con una cadena de herramientas estándar, esta variable contiene la ruta de acceso absoluta al directorio raíz de la cadena de herramientas. El directorio especificado debe contener un subdirectorio sysroot.",
	"assets/variables.json.CMAKE_ANDROID_STL_TYPE": "Cuando se realiza la compilación cruzada para Android con NVIDIA Nsight Tegra Visual Studio Edition, esta variable puede establecer que se especifique el valor predeterminado para la propiedad de destino ANDROID_STL_TYPE. Consulte dicha propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_APPBUNDLE_PATH": "Lista separada por signos de punto y coma de los directorios que especifican una ruta de acceso de búsqueda para los lotes de aplicaciones de macOS que usan los comandos find_program y find_package.",
	"assets/variables.json.CMAKE_APPLE_SILICON_PROCESSOR": "En los hosts de Apple Silicon que ejecutan macOS, establezca esta variable para indicar a CMake qué arquitectura debe usarse para CMAKE_HOST_SYSTEM_PROCESSOR. El valor debe ser arm64 o x86_64.",
	"assets/variables.json.CMAKE_AR": "Nombre de las herramientas de archivado para las bibliotecas estáticas.",
	"assets/variables.json.CMAKE_ARCHIVE_OUTPUT_DIRECTORY": "Indica dónde colocar todos los archivos de destino ARCHIVE cuando se compilan.",
	"assets/variables.json.CMAKE_ARCHIVE_OUTPUT_DIRECTORY_CONFIG": "Indica dónde colocar todos los archivos de destino ARCHIVE cuando se compilan para una configuración específica.",
	"assets/variables.json.CMAKE_ARGC": "Número de argumentos de la línea de comandos que se pasa a CMake en modo de script.",
	"assets/variables.json.CMAKE_ARGV0": "Argumento de la línea de comandos que se pasa a CMake en modo de script.",
	"assets/variables.json.CMAKE_AUTOGEN_BETTER_GRAPH_MULTI_CONFIG": "Esta variable se usa para inicializar la propiedad AUTOGEN_BETTER_GRAPH_MULTI_CONFIG en todos los destinos a medida que se crean. Consulte la propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_AUTOGEN_COMMAND_LINE_LENGTH_MAX": "Límite de longitud de la línea de comandos para destinos de autogen, es decir, moc o uíc, que desencadena el uso de archivos de respuesta en Windows en lugar de pasar todos los argumentos a la línea de comandos.",
	"assets/variables.json.CMAKE_AUTOGEN_ORIGIN_DEPENDS": "Modificador para reenviar las dependencias de origen y destino a los destinos <ORIGIN>_autogen correspondientes.",
	"assets/variables.json.CMAKE_AUTOGEN_PARALLEL": "Número de procesos moc o uic paralelos que se van a iniciar al usar AUTOMOC y AUTOUIC.",
	"assets/variables.json.CMAKE_AUTOGEN_USE_SYSTEM_INCLUDE": "Esta variable se usa para inicializar la propiedad AUTOGEN_USE_SYSTEM_INCLUDE en todos los destinos a medida que se crean. Consulte la propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_AUTOGEN_VERBOSE": "Establece el nivel de detalle de AUTOMOC, AUTOUIC y AUTORCC. Un valor entero positivo o un valor booleano true permite que los generadores de AUTO* proporcionen información de procesamiento adicional.",
	"assets/variables.json.CMAKE_AUTOMOC": "Indica si se debe controlar moc automáticamente para los destinos Qt.",
	"assets/variables.json.CMAKE_AUTOMOC_COMPILER_PREDEFINES": "Esta variable se usa para inicializar la propiedad AUTOMOC_COMPILER_PREDEFINES en todos los destinos. Consulte la propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_AUTOMOC_DEPEND_FILTERS": "Definiciones de filtro que CMAKE_AUTOMOC usa para extraer los nombres del archivo del código fuente como dependencias adicionales para el archivo moc.",
	"assets/variables.json.CMAKE_AUTOMOC_EXECUTABLE": "Esta variable se usa para inicializar la propiedad AUTOMOC_EXECUTABLE en todos los destinos. Consulte la propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_AUTOMOC_MACRO_NAMES": "Lista separada por signos de punto y coma de los nombres de macro que CMAKE_AUTOMOC usa para determinar si moc debe procesar un archivo de C++.",
	"assets/variables.json.CMAKE_AUTOMOC_MOC_OPTIONS": "Opciones adicionales para moc cuando se usa CMAKE_AUTOMOC.",
	"assets/variables.json.CMAKE_AUTOMOC_PATH_PREFIX": "Indica si debe generarse la opción de prefijo de ruta de acceso -p para moc en los destinos de Qt habilitados para AUTOMOC.",
	"assets/variables.json.CMAKE_AUTOMOC_RELAXED_MODE": "Cambia entre el modo estricto y flexible de automoc.",
	"assets/variables.json.CMAKE_AUTORCC": "Indica si se debe controlar rcc automáticamente para los destinos Qt.",
	"assets/variables.json.CMAKE_AUTORCC_EXECUTABLE": "Esta variable se usa para inicializar la propiedad AUTORCC_EXECUTABLE en todos los destinos. Consulte la propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_AUTORCC_OPTIONS": "Opciones adicionales para rcc cuando se usa CMAKE_AUTORCC.",
	"assets/variables.json.CMAKE_AUTOUIC": "Indica si se debe controlar uic automáticamente para los destinos Qt.",
	"assets/variables.json.CMAKE_AUTOUIC_EXECUTABLE": "Esta variable se usa para inicializar la propiedad AUTOUIC_EXECUTABLE en todos los destinos. Consulte la propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_AUTOUIC_OPTIONS": "Opciones adicionales para uic cuando se usa CMAKE_AUTOUIC.",
	"assets/variables.json.CMAKE_AUTOUIC_SEARCH_PATHS": "Lista de rutas de acceso de búsqueda que CMAKE_AUTOUIC usa para buscar los archivos .ui de inclusión.",
	"assets/variables.json.CMAKE_BACKWARDS_COMPATIBILITY": "En desuso. Consulte la documentación de la directiva de CMake CMP0001.",
	"assets/variables.json.CMAKE_BINARY_DIR": "La ruta de acceso al nivel superior del árbol de compilación.",
	"assets/variables.json.CMAKE_BUILD_RPATH": "Lista separada por signos de punto y coma que especifica las entradas de la ruta de acceso del entorno de ejecución (RPATH) que se van a agregar a los binarios vinculados en el árbol de compilación (para las plataformas que lo admiten). Las entradas no se usarán para los binarios en el árbol de instalación. Consulte también la variable CMAKE_INSTALL_RPATH.",
	"assets/variables.json.CMAKE_BUILD_RPATH_USE_ORIGIN": "Indica si se deben usar rutas de acceso relativas para la ruta RPATH de compilación.",
	"assets/variables.json.CMAKE_BUILD_TOOL": "Esta variable solo existe para la compatibilidad con versiones anteriores. Contiene el mismo valor que CMAKE_MAKE_PROGRAM. Use dicha variable en su lugar.",
	"assets/variables.json.CMAKE_BUILD_TYPE": "Especifica el tipo de compilación en generadores de configuración única (por ejemplo, generadores de archivos Make o Ninja). Los valores típicos incluyen Debug, Release, RelWithDebInfo y MinSizeRel, pero también se pueden definir tipos de compilación personalizados.",
	"assets/variables.json.CMAKE_BUILD_WITH_INSTALL_NAME_DIR": "Indica si se va a usar INSTALL_NAME_DIR en los destinos del árbol de compilación.",
	"assets/variables.json.CMAKE_BUILD_WITH_INSTALL_RPATH": "Usa la ruta de acceso de instalación para RPATH.",
	"assets/variables.json.CMAKE_CACHEFILE_DIR": "CMake usa internamente esta variable y no se puede establecer durante la primera configuración de un árbol de compilación. Cuando se establece, tiene el mismo valor que CMAKE_BINARY_DIR. Use esa variable en su lugar.",
	"assets/variables.json.CMAKE_CACHE_MAJOR_VERSION": "Versión principal de CMake que se usa para crear el archivo CMakeCache.txt.",
	"assets/variables.json.CMAKE_CACHE_MINOR_VERSION": "Versión secundaria de CMake que se usa para crear el archivo CMakeCache.txt",
	"assets/variables.json.CMAKE_CACHE_PATCH_VERSION": "Versión de revisión de CMake que se usa para crear el archivo CMakeCache.txt",
	"assets/variables.json.CMAKE_CFG_INTDIR": "Referencia en tiempo de compilación al subdirectorio de salida por configuración.",
	"assets/variables.json.CMAKE_CLANG_VFS_OVERLAY": "Cuando se realiza la compilación cruzada para Windows con clang-cl, esta variable puede ser una ruta de acceso absoluta que señala a un archivo YAML de sistema de archivos virtual de clang, que permitirá que clang-cl resuelva los nombres de encabezado de Windows en un sistema de archivos con distinción de mayúsculas y minúsculas.",
	"assets/variables.json.CMAKE_CL_64": "No se recomienda. Use CMAKE_SIZEOF_VOID_P en su lugar.",
	"assets/variables.json.CMAKE_CODEBLOCKS_COMPILER_ID": "Cambia el identificador del compilador en los archivos de proyecto CodeBlocks generados.",
	"assets/variables.json.CMAKE_CODEBLOCKS_EXCLUDE_EXTERNAL_FILES": "Cambia la forma en que el generador CodeBlocks crea los archivos del proyecto.",
	"assets/variables.json.CMAKE_CODELITE_USE_TARGETS": "Cambia la forma en que el generador CodeLite crea los archivos del proyecto.",
	"assets/variables.json.CMAKE_COLOR_DIAGNOSTICS": "Habilite el diagnóstico de color en todo el proceso.",
	"assets/variables.json.CMAKE_COLOR_MAKEFILE": "Habilita la salida de color al usar los generadores de Makefile.",
	"assets/variables.json.CMAKE_COMMAND": "Ruta de acceso completa al ejecutable de CMake.",
	"assets/variables.json.CMAKE_COMPILER_2005": "Uso del compilador de Visual Studio 2005 de Microsoft",
	"assets/variables.json.CMAKE_COMPILER_IS_GNUCC": "Verdadero si el compilador de C es GNU.",
	"assets/variables.json.CMAKE_COMPILER_IS_GNUCXX": "Verdadero si el compilador de C++ (CXX) es GNU.",
	"assets/variables.json.CMAKE_COMPILER_IS_GNUG77": "Verdadero si el compilador de Fortran es GNU.",
	"assets/variables.json.CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY": "Directorio de salida para los archivos .pdb de símbolos de depuración de MS que el compilador genera durante la compilación de archivos de origen.",
	"assets/variables.json.CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY_CONFIG": "Directorio de salida por configuración para los archivos .pdb de símbolos de depuración de MS que el compilador genera durante la compilación de archivos de origen.",
	"assets/variables.json.CMAKE_COMPILE_WARNING_AS_ERROR": "Especifique si se deben tratar las advertencias en la compilación como errores.",
	"assets/variables.json.CMAKE_CONFIGURATION_TYPES": "Especifica los tipos de compilación (configuraciones) disponibles en generadores multi-config (por ejemplo, Visual Studio, Xcode o Ninja Multi-Config). Los valores típicos incluyen Debug, Release, RelWithDebInfo y MinSizeRel, pero también se pueden definir tipos de compilación personalizados.",
	"assets/variables.json.CMAKE_CONFIG_POSTFIX": "Propiedad postfix de nombre de archivo predeterminada para las bibliotecas en configuración <CONFIG>.",
	"assets/variables.json.CMAKE_CPACK_COMMAND": "Ruta de acceso completa al comando cpack instalado con CMake.",
	"assets/variables.json.CMAKE_CROSSCOMPILING": "CMake establece esta variable para indicar si se trata de una compilación cruzada, pero tenga en cuenta las limitaciones que se describen a continuación.",
	"assets/variables.json.CMAKE_CROSSCOMPILING_EMULATOR": "Esta variable solo se usa cuando CMAKE_CROSSCOMPILING está activado. Debe apuntar a un comando en el sistema host que pueda ejecutar archivos ejecutables compilados para el sistema de destino.",
	"assets/variables.json.CMAKE_CROSS_CONFIGS": "Especifica una lista separada por signos de punto y coma de las configuraciones disponibles de todos los archivos build-<Config>.ninja en el generador Ninja Multi-Config. Esta variable activa el modo de configuración cruzada. Los destinos de cada configuración que se especifican en esta variable pueden compilarse desde cualquier archivo build-<Config>.ninja. Los comandos personalizados usarán la configuración nativa de build-<Config>.ninja. Si se establece en Todo, todas las configuraciones de CMAKE_CONFIGURATION_TYPES se aplican entre configuraciones. Si no se especifica o se deja vacía, cada archivo build-<Config>.ninja solo contendrá solo las reglas de compilación de su configuración propia.",
	"assets/variables.json.CMAKE_CTEST_ARGUMENTS": "Establezca esta opción en una lista de argumentos de línea de comandos, separados por punto y coma, que se pasan a ctest al ejecutar pruebas en el destino de prueba (o RUN_TESTS) del sistema de compilación generado.",
	"assets/variables.json.CMAKE_CTEST_COMMAND": "Ruta de acceso completa al comando ctest instalado con CMake.",
	"assets/variables.json.CMAKE_CUDA_ARCHITECTURES": "Valor predeterminado de la propiedad CUDA_ARCHITECTURES de los destinos.",
	"assets/variables.json.CMAKE_CUDA_COMPILE_FEATURES": "Lista de características conocidas para el compilador de CUDA.",
	"assets/variables.json.CMAKE_CUDA_EXTENSIONS": "Valor predeterminado de propiedad de destino CUDA_EXTENSIONS si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_CUDA_HOST_COMPILER": "Este es el nombre original específico de CUDA para la variable CMAKE_<LANG>_HOST_COMPILER más general. Consulte el último para obtener más información.",
	"assets/variables.json.CMAKE_CUDA_RESOLVE_DEVICE_SYMBOLS": "Valor predeterminado para CUDA_RESOLVE_DEVICE_SYMBOLS propiedad de destino cuando se define. De forma predeterminada, esta variable no está definida.",
	"assets/variables.json.CMAKE_CUDA_RUNTIME_LIBRARY": "Seleccione la biblioteca en tiempo de ejecución de CUDA para usarla al compilar y vincular CUDA. Esta variable se usa para inicializar la propiedad CUDA_RUNTIME_LIBRARY en todos los destinos a medida que se crean.",
	"assets/variables.json.CMAKE_CUDA_SEPARABLE_COMPILATION": "Valor predeterminado de la propiedad CUDA_SEPARABLE_COMPILATION de destino. La variable se usa para inicializar la propiedad en cada destino al crearse.",
	"assets/variables.json.CMAKE_CUDA_STANDARD": "Valor predeterminado de propiedad de destino CUDA_STANDARD si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_CUDA_STANDARD_REQUIRED": "Valor predeterminado de propiedad de destino CUDA_STANDARD_REQUIRED si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES": "Cuando se ha habilitado el lenguaje CUDA, proporciona una lista separada por signos de punto y coma de los directorios de inclusión que ofrece el kit de herramientas de CUDA. El valor puede ser útil para que los archivos de código fuente de C++ incluyan encabezados CUDA.",
	"assets/variables.json.CMAKE_CURRENT_BINARY_DIR": "Ruta de acceso al directorio binario que se está procesando.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION": "Cuando se ejecuta código dentro de una función, esta variable contiene el nombre de la función actual. Puede ser útil para los mensajes de depuración o diagnóstico.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION_LIST_DIR": "Cuando se ejecuta código dentro de una función, esta variable contiene el directorio completo del archivo de lista que definió la función actual.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION_LIST_FILE": "Cuando se ejecuta código dentro de una función, esta variable contiene la ruta de acceso completa al archivo de lista que definió la función actual.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION_LIST_LINE": "Cuando se ejecuta código dentro de una función, esta variable contiene el número de línea del archivo de lista en el que se definió la función actual.",
	"assets/variables.json.CMAKE_CURRENT_LIST_DIR": "Directorio completo del archivo de lista que se está procesando.",
	"assets/variables.json.CMAKE_CURRENT_LIST_FILE": "Ruta de acceso completa al archivo de lista que se está procesando.",
	"assets/variables.json.CMAKE_CURRENT_LIST_LINE": "Número de línea del archivo que se está procesando.",
	"assets/variables.json.CMAKE_CURRENT_SOURCE_DIR": "Ruta de acceso al directorio de origen que se está procesando.",
	"assets/variables.json.CMAKE_CXX_COMPILER_IMPORT_STD": "Lista de niveles estándar de C++ para los que existe compatibilidad con std de importación para la cadena actual de herramientas de C++. Se puede detectar compatibilidad con C++<NN> mediante un predicado <NN> IN_LIST CMAKE_CXX_COMPILER_IMPORT_STD con el comando if.",
	"assets/variables.json.CMAKE_CXX_COMPILE_FEATURES": "Lista de características conocidas para el compilador de C++.",
	"assets/variables.json.CMAKE_CXX_EXTENSIONS": "Valor predeterminado de propiedad de destino CXX_EXTENSIONS si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_CXX_MODULE_STD": "Si se van a agregar destinos de utilidad como dependencias a destinos con al menos cxx_std_23 o no.",
	"assets/variables.json.CMAKE_CXX_SCAN_FOR_MODULES": "Indica si se van a examinar los archivos de código fuente de C++ en busca de dependencias de módulo.",
	"assets/variables.json.CMAKE_CXX_STANDARD": "Valor predeterminado de propiedad de destino CXX_STANDARD si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_CXX_STANDARD_REQUIRED": "Valor predeterminado de propiedad de destino CXX_STANDARD_REQUIRED si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_C_COMPILE_FEATURES": "Lista de características conocidas para el compilador de C.",
	"assets/variables.json.CMAKE_C_EXTENSIONS": "Valor predeterminado de propiedad de destino C_EXTENSIONS si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_C_STANDARD": "Valor predeterminado de propiedad de destino C_STANDARD si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_C_STANDARD_REQUIRED": "Valor predeterminado de propiedad de destino C_STANDARD_REQUIRED si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_DEBUG_POSTFIX": "Consulte la variable CMAKE_<CONFIG>_POSTFIX.",
	"assets/variables.json.CMAKE_DEBUG_TARGET_PROPERTIES": "Habilita la salida del seguimiento para las propiedades de destino.",
	"assets/variables.json.CMAKE_DEFAULT_BUILD_TYPE": "Especifica la configuración que se va a usar de forma predeterminada en un archivo build.ninja en el generador Ninja Multi-Config. Si se especifica esta variable, build.ninja usa las reglas de compilación de build-<Config>.ninja de forma predeterminada. Todos los comandos personalizados se ejecutan con esta configuración. Si la variable no se especifica, se usa el primer elemento de CMAKE_CONFIGURATION_TYPES en su lugar.",
	"assets/variables.json.CMAKE_DEFAULT_CONFIGS": "Especifica una lista separada por signos de punto y coma de las configuraciones que se van a compilar para un destino en build.ninja si no se especifica ningún sufijo :<Config> en el generador Ninja Multi-Config. Si se establece en Todo, se usan todas las configuraciones de CMAKE_CROSS_CONFIGS. Si no se especifica, se establece CMAKE_DEFAULT_BUILD_TYPE como valor predeterminado.",
	"assets/variables.json.CMAKE_DEPENDS_IN_PROJECT_ONLY": "Cuando se establece en TRUE en un directorio, el sistema de compilación que producen los generadores de Makefile se configura para tener en cuenta solamente las dependencias de los archivos de origen que aparecen en el directorio de origen o binario. Los cambios en los archivos de origen fuera de estos directorios no causarán recompilaciones.",
	"assets/variables.json.CMAKE_DEPENDS_USE_COMPILER": "Para los generadores de archivos Make, el propio compilador genera ahora las dependencias de origen, para una selección de compiladores. Al definir esta variable con el valor FALSE, puede restaurar el comportamiento heredado (es decir, usar CMake para la detección de dependencias).",
	"assets/variables.json.CMAKE_DIRECTORY_LABELS": "Especifica las etiquetas para el directorio actual.",
	"assets/variables.json.CMAKE_DISABLE_FIND_PACKAGE_PackageName": "Variable para deshabilitar las llamadas find_package.",
	"assets/variables.json.CMAKE_DISABLE_PRECOMPILE_HEADERS": "Valor predeterminado de la propiedad DISABLE_PRECOMPILE_HEADERS de los destinos.",
	"assets/variables.json.CMAKE_DLL_NAME_WITH_SOVERSION": "Esta variable se usa para inicializar la propiedad DLL_NAME_WITH_SOVERSION en destinos de biblioteca compartida para la plataforma Windows, que se selecciona cuando se establece la variable WIN32.",
	"assets/variables.json.CMAKE_DL_LIBS": "Nombre de la biblioteca que contiene dlopen y dlclose.",
	"assets/variables.json.CMAKE_DOTNET_SDK": "Valor predeterminado de la propiedad C_STANDARD de los destinos.",
	"assets/variables.json.CMAKE_DOTNET_TARGET_FRAMEWORK": "Valor predeterminado de la propiedad DOTNET_TARGET_FRAMEWORK de los destinos.",
	"assets/variables.json.CMAKE_DOTNET_TARGET_FRAMEWORK_VERSION": "Valor predeterminado de la propiedad DOTNET_TARGET_FRAMEWORK_VERSION de los destinos.",
	"assets/variables.json.CMAKE_ECLIPSE_GENERATE_LINKED_RESOURCES": "El generador de proyectos de Eclipse usa esta variable de caché. Consulte los generadores de CMake.",
	"assets/variables.json.CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT": "El generador de proyectos de Eclipse usa esta variable de caché. Consulte los generadores de CMake.",
	"assets/variables.json.CMAKE_ECLIPSE_MAKE_ARGUMENTS": "El generador de proyectos de Eclipse usa esta variable de caché. Consulte los generadores de CMake.",
	"assets/variables.json.CMAKE_ECLIPSE_RESOURCE_ENCODING": "Esta variable de caché indica al generador de proyectos Eclipse CDT4 que establezca la codificación de recursos en el valor dado en los archivos de proyecto generados. Si no se proporciona ningún valor, no se establecerá ninguna codificación.",
	"assets/variables.json.CMAKE_ECLIPSE_VERSION": "El generador de proyectos de Eclipse usa esta variable de caché. Consulte los generadores de CMake.",
	"assets/variables.json.CMAKE_EDIT_COMMAND": "Ruta de acceso completa a cmake-gui o ccmake. Solo se define para generadores Makefile y generadores Ninja cuando no se usa ningún generador adicional.",
	"assets/variables.json.CMAKE_ENABLE_EXPORTS": "Especifique si los ejecutables exportan los símbolos para los módulos cargables.",
	"assets/variables.json.CMAKE_ERROR_DEPRECATED": "Indica si se deben emitir errores para una funcionalidad en desuso.",
	"assets/variables.json.CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION": "Solicite al script cmake_install.cmake que genere un error tan pronto como se encuentre un archivo con un valor INSTALL DESTINATION absoluto.",
	"assets/variables.json.CMAKE_EXECUTABLE_ENABLE_EXPORTS": "Especifique si los ejecutables exportan los símbolos para los módulos cargables.",
	"assets/variables.json.CMAKE_EXECUTABLE_SUFFIX": "Sufijo para los ejecutables en esta plataforma.",
	"assets/variables.json.CMAKE_EXECUTABLE_SUFFIX_LANG": "El sufijo a utilizar para el final de un nombre de archivo ejecutable de la arquitectura de destino del compilador <LANG>, si lo hay.",
	"assets/variables.json.CMAKE_EXECUTE_PROCESS_COMMAND_ECHO": "Si esta variable se establece en STDERR, STDOUT o NONE, los comandos en las llamadas a execute_process se imprimirán en stderr o en stdout o bien no se imprimirán.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS": "Marcas del enlazador que se van a usar para crear ejecutables.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS_CONFIG": "Marcas que se van a usar al vincular un ejecutable.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS_CONFIG_INIT": "Valor que se usa para inicializar la entrada de caché CMAKE_EXE_LINKER_FLAGS la primera vez que se configura un árbol de compilación. La variable la debe establecer un archivo de cadena de herramientas. CMake puede anteponer o anexar contenido al valor en función del entorno y la plataforma de destino.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS_INIT": "Valor que se usa para inicializar la entrada de caché CMAKE_EXE_LINKER_FLAGS la primera vez que se configura un árbol de compilación. La variable la debe establecer un archivo de cadena de herramientas. CMake puede anteponer o anexar contenido al valor en función del entorno y la plataforma de destino.",
	"assets/variables.json.CMAKE_EXPORT_COMPILE_COMMANDS": "Habilita o deshabilita la salida de comandos de compilación durante la generación.",
	"assets/variables.json.CMAKE_EXPORT_FIND_PACKAGE_NAME": "Inicializa el valor de EXPORT_FIND_PACKAGE_NAME.",
	"assets/variables.json.CMAKE_EXPORT_NO_PACKAGE_REGISTRY": "Deshabilita el comando de exportación cuando CMP0090 no se ha establecido en NEW.",
	"assets/variables.json.CMAKE_EXPORT_PACKAGE_REGISTRY": "Habilita el comando de exportación cuando CMP0090 se ha establecido en NEW.",
	"assets/variables.json.CMAKE_EXTRA_GENERATOR": "Generador adicional que se usa para compilar el proyecto. Consulte cmake-generators.",
	"assets/variables.json.CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES": "Sufijos adicionales para las bibliotecas compartidas.",
	"assets/variables.json.CMAKE_FIND_APPBUNDLE": "Esta variable afecta a la forma en que los comandos find_* eligen entre los lotes de aplicaciones de macOS y los componentes de paquete de estilo Unix.",
	"assets/variables.json.CMAKE_FIND_DEBUG_MODE": "Imprimir información adicional de la llamada de búsqueda para los comandos siguientes en el error estándar:",
	"assets/variables.json.CMAKE_FIND_FRAMEWORK": "Esta variable afecta a la forma en que los comandos find_* eligen entre los marcos de macOS y los componentes de paquete de estilo Unix.",
	"assets/variables.json.CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX": "Especifica un elemento <suffix> para indicar al comando find_library que busque en un directorio lib<suffix> antes de cada directorio lib en el que se buscaría normalmente.",
	"assets/variables.json.CMAKE_FIND_LIBRARY_PREFIXES": "Prefijos que se anteponen al buscar bibliotecas.",
	"assets/variables.json.CMAKE_FIND_LIBRARY_SUFFIXES": "Sufijos que se anexan al buscar bibliotecas.",
	"assets/variables.json.CMAKE_FIND_NO_INSTALL_PREFIX": "Excluye los valores de las variables CMAKE_INSTALL_PREFIX y CMAKE_STAGING_PREFIX de CMAKE_SYSTEM_PREFIX_PATH. CMake agrega estos prefijos de destino de proyecto a CMAKE_SYSTEM_PREFIX_PATH de forma predeterminada para admitir la compilación de una serie de paquetes dependientes y su instalación en un prefijo común. Establezca CMAKE_FIND_NO_INSTALL_PREFIX en TRUE para suprimir este comportamiento.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_NAME": "Opción definida por el comando find_package al cargar un módulo de búsqueda para registrar el nombre del paquete especificado por el autor de la llamada. Consulte la documentación de los comandos para obtener más detalles.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY": "De forma predeterminada, esta variable no se establece. Si no se ha establecido CMAKE_FIND_USE_PACKAGE_REGISTRY ni CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY, find_package() usará el registro del paquete de usuario, a menos que se proporcione la opción NO_CMAKE_PACKAGE_REGISTRY.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY": "De forma predeterminada, esta variable no se establece. Si no se ha establecido CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY ni CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY, find_package() usará el registro del paquete de sistema, a menos que se proporcione la opción NO_CMAKE_SYSTEM_PACKAGE_REGISTRY.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_PREFER_CONFIG": "Indica a find_package que pruebe el modo \"Config\" antes del modo \"Module\" si no se especificó ningún modo.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_REDIRECTS_DIR": "Esta variable de solo lectura especifica un directorio que el comando find_package comprobará primero antes de buscar en cualquier otro lugar un módulo o un archivo de paquete de configuración. Un archivo de paquete de configuración en este directorio siempre se encontrará con preferencia a cualquier otro archivo del módulo Buscar o archivo de paquete de configuración.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS": "Se establece en TRUE para indicar que las llamadas a find_package resuelvan los vínculos simbólicos en el valor de <PackageName>_DIR.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_SORT_DIRECTION": "Dirección de ordenación que CMAKE_FIND_PACKAGE_SORT_ORDER usa. Asume uno de los valores siguientes:",
	"assets/variables.json.CMAKE_FIND_PACKAGE_SORT_ORDER": "Orden predeterminado de los paquetes que se encuentran con find_package. Asume uno de los valores siguientes:",
	"assets/variables.json.CMAKE_FIND_PACKAGE_TARGETS_GLOBAL": "Si se establece en VERDADERO, promueve todos los destinos IMPORTED detectados por find_package a un ámbito GLOBAL.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_WARN_NO_MODULE": "Indica a find_package que genere una advertencia si se le llama sin un modo explícito.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH": "Lista separada por signos de punto y coma de las rutas de acceso raíz que se van a buscar en el sistema de archivos.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_INCLUDE": "Esta variable controla si FIND_XXX usa CMAKE_FIND_ROOT_PATH y CMAKE_SYSROOT.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_LIBRARY": "Esta variable controla si FIND_XXX usa CMAKE_FIND_ROOT_PATH y CMAKE_SYSROOT.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_PACKAGE": "Esta variable controla si FIND_XXX usa CMAKE_FIND_ROOT_PATH y CMAKE_SYSROOT.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_PROGRAM": "Esta variable controla si FIND_XXX usa CMAKE_FIND_ROOT_PATH y CMAKE_SYSROOT.",
	"assets/variables.json.CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH": "Controla el comportamiento predeterminado de los comandos siguientes para determinar si debe buscarse o no en las rutas de acceso que proporcionan las variables de entorno específicas de CMake:",
	"assets/variables.json.CMAKE_FIND_USE_CMAKE_PATH": "Controla el comportamiento predeterminado de los comandos siguientes para determinar si debe buscarse o no en las rutas de acceso que proporcionan las variables de caché específicas de CMake:",
	"assets/variables.json.CMAKE_FIND_USE_CMAKE_SYSTEM_PATH": "Controla el comportamiento predeterminado de los comandos siguientes para determinar si debe buscarse o no en las rutas de acceso que proporcionan las variables de CMake específicas de la plataforma:",
	"assets/variables.json.CMAKE_FIND_USE_INSTALL_PREFIX": "Controla el comportamiento predeterminado de los siguientes comandos para determinar si se deben buscar o no en las ubicaciones de las variables CMAKE_INSTALL_PREFIX y CMAKE_STAGING_PREFIX.",
	"assets/variables.json.CMAKE_FIND_USE_PACKAGE_REGISTRY": "Controla el comportamiento predeterminado del comando find_package para determinar si debe buscarse o no en las rutas de acceso que proporciona el registro del paquete de usuario.",
	"assets/variables.json.CMAKE_FIND_USE_PACKAGE_ROOT_PATH": "Controla el comportamiento predeterminado de los comandos siguientes para determinar si debe buscarse o no en las rutas de acceso que proporcionan las variables <PackageName>_ROOT:",
	"assets/variables.json.CMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH": "Controla el comportamiento predeterminado de los comandos siguientes para determinar si debe buscarse o no en las rutas de acceso que proporcionan las variables de entorno estándar del sistema:",
	"assets/variables.json.CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY": "Controla la búsqueda del registro del paquete de sistema con el comando find_package.",
	"assets/variables.json.CMAKE_FOLDER": "Establece el nombre de la carpeta. Use esta opción para organizar los destinos en un IDE.",
	"assets/variables.json.CMAKE_Fortran_FORMAT": "Se establece en FIXED o FREE para indicar el diseño de origen de Fortran.",
	"assets/variables.json.CMAKE_Fortran_MODDIR_DEFAULT": "Directorio de salida del módulo predeterminado de Fortran.",
	"assets/variables.json.CMAKE_Fortran_MODDIR_FLAG": "Marca de Fortran para el directorio de salida del módulo.",
	"assets/variables.json.CMAKE_Fortran_MODOUT_FLAG": "Marca de Fortran para habilitar la salida del módulo.",
	"assets/variables.json.CMAKE_Fortran_MODULE_DIRECTORY": "Directorio de salida del módulo de Fortran.",
	"assets/variables.json.CMAKE_Fortran_PREPROCESS": "Valor predeterminado de la propiedad Fortran_PREPROCESS de los destinos.",
	"assets/variables.json.CMAKE_FRAMEWORK": "Valor predeterminado de la propiedad FRAMEWORK de los destinos.",
	"assets/variables.json.CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_CONFIG": "Nombre de archivo del marco predeterminado postfijo en la configuración <CONFIG> cuando se usa un generador de varias configuraciones.",
	"assets/variables.json.CMAKE_FRAMEWORK_PATH": "Lista separada por signos de punto y coma de los directorios que especifican una ruta de acceso de búsqueda para los marcos de macOS que usan los comandos find_library, find_package, find_path y find_file.",
	"assets/variables.json.CMAKE_GENERATOR": "Generador que se usa para compilar el proyecto. Consulte cmake-generators.",
	"assets/variables.json.CMAKE_GENERATOR_INSTANCE": "Especificación de instancia del generador que proporciona el usuario.",
	"assets/variables.json.CMAKE_GENERATOR_PLATFORM": "Especificación de plataforma de destino del generador que proporciona el usuario.",
	"assets/variables.json.CMAKE_GENERATOR_TOOLSET": "Especificación del conjunto de herramientas del sistema de compilación nativa que proporciona el usuario.",
	"assets/variables.json.CMAKE_GHS_NO_SOURCE_GROUP_FILE": "Valor booleano ON/OFF para controlar si el archivo del proyecto de un destino debe ser un único archivo o varios archivos. Consulte GHS_NO_SOURCE_GROUP_FILE para obtener más detalles.",
	"assets/variables.json.CMAKE_GLOBAL_AUTOGEN_TARGET": "Modificador para habilitar la generación de un destino autogen global.",
	"assets/variables.json.CMAKE_GLOBAL_AUTOGEN_TARGET_NAME": "Cambie el nombre del destino autogen global.",
	"assets/variables.json.CMAKE_GLOBAL_AUTORCC_TARGET": "Modificador para habilitar la generación de un destino autorcc global.",
	"assets/variables.json.CMAKE_GLOBAL_AUTORCC_TARGET_NAME": "Cambie el nombre del destino autorcc global.",
	"assets/variables.json.CMAKE_GNUtoMS": "Convierte las bibliotecas de importación GNU (.dll.a) a formato MS (.lib).",
	"assets/variables.json.CMAKE_HIP_ARCHITECTURES": "Lista de arquitecturas de GPU para las que se va a generar código de dispositivo. Los nombres de arquitectura se interpretan en función de CMAKE_HIP_PLATFORM.",
	"assets/variables.json.CMAKE_HIP_COMPILE_FEATURES": "Lista de características conocidas para el compilador de desafío HIP",
	"assets/variables.json.CMAKE_HIP_EXTENSIONS": "Valor predeterminado de propiedad de destino HIP_EXTENSIONS si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_HIP_PLATFORM": "Plataforma GPU para la que se van a compilar los orígenes de lenguaje HIP.",
	"assets/variables.json.CMAKE_HIP_STANDARD": "Valor predeterminado de propiedad de destino HIP_STANDARD si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_HIP_STANDARD_REQUIRED": "Valor predeterminado de propiedad de destino HIP_STANDARD_REQUIRED si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_HOME_DIRECTORY": "Ruta de acceso a la parte superior del árbol de origen. Igual que CMAKE_SOURCE_DIR.",
	"assets/variables.json.CMAKE_HOST_APPLE": "True para los sistemas operativos Apple macOS.",
	"assets/variables.json.CMAKE_HOST_BSD": "Se establece como valor de cadena cuando el sistema host es BSD. Este valor puede ser uno de los siguientes: DragonFlyBSD, FreeBSD, OpenBSD o NetBSD.",
	"assets/variables.json.CMAKE_HOST_LINUX": "Se establece como true cuando el sistema host es Linux.",
	"assets/variables.json.CMAKE_HOST_SOLARIS": "True para los sistemas operativos Oracle Solaris.",
	"assets/variables.json.CMAKE_HOST_SYSTEM": "Nombre compuesto del sistema operativo en el que CMake se está ejecutando.",
	"assets/variables.json.CMAKE_HOST_SYSTEM_NAME": "Nombre del sistema operativo en el que se está ejecutando CMake.",
	"assets/variables.json.CMAKE_HOST_SYSTEM_PROCESSOR": "Nombre de la CPU en la que se ejecuta CMake.",
	"assets/variables.json.CMAKE_HOST_SYSTEM_VERSION": "Versión del sistema operativo en el que se ejecuta CMake.",
	"assets/variables.json.CMAKE_HOST_UNIX": "True para los sistemas operativos UNIX y tipo UNIX.",
	"assets/variables.json.CMAKE_HOST_WIN32": "True si el sistema host ejecuta Windows, incluidos Windows de 64 bits y MSYS.",
	"assets/variables.json.CMAKE_IGNORE_PATH": "Lista separada por signos de punto y coma de los directorios que omitirán los diversos resultados de la búsqueda... () comandos.",
	"assets/variables.json.CMAKE_IGNORE_PREFIX_PATH": "Lista separada por signos de punto y coma de los prefijos de búsqueda que deben omitir los comandos find_program, find_library, find_file y find_path. El modo Config del comando find_package también omite los prefijos (el modo módulo no se ve afectado). Para omitir directorios específicos, vea CMAKE_IGNORE_NONPREFIX_VAR.",
	"assets/variables.json.CMAKE_IMPORT_LIBRARY_PREFIX": "Prefijo para las bibliotecas de importación a las que se vincula.",
	"assets/variables.json.CMAKE_IMPORT_LIBRARY_SUFFIX": "Sufijo para las bibliotecas de importación a las que se vincula.",
	"assets/variables.json.CMAKE_INCLUDE_CURRENT_DIR": "Agrega automáticamente los directorios de origen y compilación actuales a la ruta de acceso de inclusión.",
	"assets/variables.json.CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE": "Agrega automáticamente los directorios de origen y compilación actuales a la propiedad de destino INTERFACE_INCLUDE_DIRECTORIES.",
	"assets/variables.json.CMAKE_INCLUDE_DIRECTORIES_BEFORE": "Indica si se deben anexar o anteponer directorios en include_directories de forma predeterminada.",
	"assets/variables.json.CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE": "Indica si se debe forzar la anteposición de directorios de inclusión de proyectos.",
	"assets/variables.json.CMAKE_INCLUDE_PATH": "Lista separada por signos de punto y coma de los directorios que especifican una ruta de acceso de búsqueda para los comandos find_file y find_path. De manera predeterminada está vacía, debe establecerla el proyecto.",
	"assets/variables.json.CMAKE_INSTALL_DEFAULT_COMPONENT_NAME": "Componente predeterminado que se usa en los comandos de instalación.",
	"assets/variables.json.CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS": "Permisos predeterminados para los directorios creados de forma implícita durante la instalación de archivos mediante install y file.",
	"assets/variables.json.CMAKE_INSTALL_MESSAGE": "Especifica el nivel de detalle del código de script de instalación que genera el comando install (con el comando file). Para las rutas de acceso que se acaban de instalar o actualizar, la instalación puede imprimir líneas como esta:",
	"assets/variables.json.CMAKE_INSTALL_NAME_DIR": "Nombre de directorio para los destinos instalados en las plataformas de Apple.",
	"assets/variables.json.CMAKE_INSTALL_PREFIX": "Directorio de instalación que se usa para instalar.",
	"assets/variables.json.CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT": "CMake establece esta variable en un valor TRUE cuando el CMAKE_INSTALL_PREFIX se acaba de inicializar en su valor predeterminado, normalmente en la primera ejecución de CMake dentro de un nuevo árbol de compilación y la variable de entorno CMAKE_INSTALL_PREFIX no se establece en la primera ejecución de CMake. El código del proyecto lo puede usar para cambiar el valor predeterminado sin reemplazar un valor proporcionado por el usuario:",
	"assets/variables.json.CMAKE_INSTALL_REMOVE_ENVIRONMENT_RPATH": "Establece el valor predeterminado en el caso de que las rutas rpath definidas por la cadena de herramientas deban quitarse durante la instalación.",
	"assets/variables.json.CMAKE_INSTALL_RPATH": "Ruta rpath que se va a usar para los destinos instalados.",
	"assets/variables.json.CMAKE_INSTALL_RPATH_USE_LINK_PATH": "Agrega rutas de acceso a la búsqueda del enlazador y a la ruta rpath instalada.",
	"assets/variables.json.CMAKE_INTERNAL_PLATFORM_ABI": "Variable interna sujeta a cambios.",
	"assets/variables.json.CMAKE_INTERPROCEDURAL_OPTIMIZATION": "Valor predeterminado de la propiedad INTERPROCEDURAL_OPTIMIZATION de los destinos.",
	"assets/variables.json.CMAKE_INTERPROCEDURAL_OPTIMIZATION_CONFIG": "Valor predeterminado de la propiedad INTERPROCEDURAL_OPTIMIZATION de los destinos.",
	"assets/variables.json.CMAKE_IOS_INSTALL_COMBINED": "Valor predeterminado de la propiedad IOS_INSTALL_COMBINED de los destinos.",
	"assets/variables.json.CMAKE_ISPC_HEADER_DIRECTORY": "ISPC ha generado el directorio de salida del encabezado.",
	"assets/variables.json.CMAKE_ISPC_HEADER_SUFFIX": "Sufijo de salida que se va a usar para los encabezados que genera ISPC.",
	"assets/variables.json.CMAKE_ISPC_INSTRUCTION_SETS": "Valor predeterminado de la propiedad ISPC_INSTRUCTION_SETS de los destinos.",
	"assets/variables.json.CMAKE_JOB_POOLS": "Si la propiedad global JOB_POOLS no se establece, se usa el valor de esta variable en su lugar. Consulte JOB_POOLS para obtener más información.",
	"assets/variables.json.CMAKE_JOB_POOL_COMPILE": "Esta variable se usa para inicializar la propiedad JOB_POOL_COMPILE en todos los destinos. Consulte JOB_POOL_COMPILE para obtener más información.",
	"assets/variables.json.CMAKE_JOB_POOL_LINK": "Esta variable se usa para inicializar la propiedad JOB_POOL_LINK en todos los destinos. Consulte JOB_POOL_LINK para obtener más información.",
	"assets/variables.json.CMAKE_JOB_POOL_PRECOMPILE_HEADER": "Esta variable se usa para inicializar la propiedad JOB_POOL_PRECOMPILE_HEADER en todos los destinos. Consulte JOB_POOL_PRECOMPILE_HEADER para obtener más información.",
	"assets/variables.json.CMAKE_KATE_FILES_MODE": "Esta variable de caché la usa el generador de proyectos Kate y controla en qué modo se establecerá la entrada de archivos en el archivo de proyecto. Consulte los generadores de CMake.",
	"assets/variables.json.CMAKE_KATE_MAKE_ARGUMENTS": "El generador de proyectos de Kate usa esta variable de caché. Consulte los generadores de CMake.",
	"assets/variables.json.CMAKE_LANG_ANDROID_TOOLCHAIN_MACHINE": "Cuando se realiza la compilación cruzada para Android, esta variable contiene el nombre de máquina de binutils de la cadena de herramientas (por ejemplo, cc -dumpmachine). Las binutils suelen incluir el prefijo <machine>- en el nombre.",
	"assets/variables.json.CMAKE_LANG_ANDROID_TOOLCHAIN_PREFIX": "Cuando se realiza la compilación cruzada para Android, esta variable contiene la ruta de acceso absoluta como prefijo del compilador GNU de cadena de herramientas y sus binutils.",
	"assets/variables.json.CMAKE_LANG_ANDROID_TOOLCHAIN_SUFFIX": "Cuando se realiza la compilación cruzada para Android, esta variable contiene el sufijo de plataforma host del compilador GNU de cadena de herramientas y sus binutils.",
	"assets/variables.json.CMAKE_LANG_ARCHIVE_APPEND": "Variable de regla para anexar a un archivo estático.",
	"assets/variables.json.CMAKE_LANG_ARCHIVE_CREATE": "Variable de regla para crear un archivo estático.",
	"assets/variables.json.CMAKE_LANG_ARCHIVE_FINISH": "Variable de regla para finalizar un archivo estático existente.",
	"assets/variables.json.CMAKE_LANG_BYTE_ORDER": "Orden de bytes de la arquitectura de destino del compilador de <LANG>, si se conoce. Si se define y no está vacío, el valor es uno de los siguientes:",
	"assets/variables.json.CMAKE_LANG_CLANG_TIDY": "Valor predeterminado de la propiedad <LANG>_CLANG_TIDY de destino cuando <LANG> es C, OBJC, OBJCXX o CXX.",
	"assets/variables.json.CMAKE_LANG_CLANG_TIDY_EXPORT_FIXES_DIR": "Valor predeterminado de la propiedad <LANG>_CLANG_TIDY_EXPORT_FIXES_DIR de destino cuando <LANG> es C, CXX, OBJC u OBJCXX.",
	"assets/variables.json.CMAKE_LANG_COMPILER": "Ruta de acceso completa al compilador para LANG.",
	"assets/variables.json.CMAKE_LANG_COMPILER_ABI": "Variable interna sujeta a cambios.",
	"assets/variables.json.CMAKE_LANG_COMPILER_AR": "Contenedor de ar que agrega la opción --plugin adecuada para el compilador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_ARCHITECTURE_ID": "Variable interna sujeta a cambios.",
	"assets/variables.json.CMAKE_LANG_COMPILER_EXTERNAL_TOOLCHAIN": "Cadena de herramientas externa para la compilación cruzada, si se admite.",
	"assets/variables.json.CMAKE_LANG_COMPILER_FRONTEND_VARIANT": "Cadena de identificación de la variante de front-end del compilador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_ID": "Cadena de identificación del compilador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LAUNCHER": "Valor predeterminado de la propiedad <LANG>_COMPILER_LAUNCHER de destino. La variable se usa para inicializar la propiedad en cada destino al crearse. Esto solo se hace cuando <LANG> es C, CXX, Fortran, HIP, ISPC, OBJC, OBJCXX o CUDA.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER": "Ruta de acceso completa al enlazador para LANG.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER_FRONTEND_VARIANT": "Cadena de identificación de la variante de front-end del enlazador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER_ID": "Cadena de identificación del enlazador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER_VERSION": "Cadena de versión del enlazador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LOADED": "Se define como true si el lenguaje está habilitado.",
	"assets/variables.json.CMAKE_LANG_COMPILER_PREDEFINES_COMMAND": "Comando que genera las definiciones previas del compilador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_RANLIB": "Contenedor de ranlib que agrega la opción --plugin adecuada para el compilador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_TARGET": "El destino de la compilación cruzada, si se admite.",
	"assets/variables.json.CMAKE_LANG_COMPILER_VERSION": "Cadena de versión del compilador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_VERSION_INTERNAL": "Variable interna sujeta a cambios.",
	"assets/variables.json.CMAKE_LANG_COMPILE_OBJECT": "Variable de regla para compilar un único archivo objeto.",
	"assets/variables.json.CMAKE_LANG_CPPCHECK": "Valor predeterminado de la propiedad <LANG>_CPPCHECK de destino. La variable se usa para inicializar la propiedad en cada destino al crearse. Esto solo se hace cuando <LANG> es C o CXX.",
	"assets/variables.json.CMAKE_LANG_CPPLINT": "Valor predeterminado de la propiedad <LANG>_CPPLINT de destino. La variable se usa para inicializar la propiedad en cada destino al crearse. Esto solo se hace cuando <LANG> es C o CXX.",
	"assets/variables.json.CMAKE_LANG_CREATE_SHARED_LIBRARY": "Variable de regla para crear una biblioteca compartida.",
	"assets/variables.json.CMAKE_LANG_CREATE_SHARED_MODULE": "Variable de regla para crear un módulo compartido.",
	"assets/variables.json.CMAKE_LANG_CREATE_STATIC_LIBRARY": "Variable de regla para crear una biblioteca estática.",
	"assets/variables.json.CMAKE_LANG_EXTENSIONS": "Las variaciones son:",
	"assets/variables.json.CMAKE_LANG_EXTENSIONS_DEFAULT": "Modo de extensiones predeterminadas del compilador. Se usa como valor predeterminado para la propiedad de destino <LANG>_EXTENSIONS cuando no se establece CMAKE_<LANG>_EXTENSIONS (consulte CMP0128).",
	"assets/variables.json.CMAKE_LANG_FLAGS": "Las marcas de todo el idioma para el idioma <LANG> se usan al compilar para todas las configuraciones. Estas marcas se pasarán a todas las invocaciones del compilador. Esto incluye las invocaciones que impulsan la compilación y las que controlan la vinculación.",
	"assets/variables.json.CMAKE_LANG_FLAGS_CONFIG": "Las marcas de todo el idioma para el idioma <LANG> se usan al compilar para la configuración de <CONFIG>. Estas marcas se pasarán a todas las invocaciones del compilador en la configuración correspondiente. Esto incluye las invocaciones que impulsan la compilación y las que controlan la vinculación.",
	"assets/variables.json.CMAKE_LANG_FLAGS_CONFIG_INIT": "Valor que se usa para inicializar la entrada de caché CMAKE_<LANG>_FLAGS la primera vez que se configura un árbol de compilación para el lenguaje <LANG>. La variable la debe establecer un archivo de cadena de herramientas. CMake puede anteponer o anexar contenido al valor en función del entorno y la plataforma de destino.",
	"assets/variables.json.CMAKE_LANG_FLAGS_DEBUG": "Esta variable es la variante Debug de la variable CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_DEBUG_INIT": "Esta variable es la variante Debug de la variable CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_FLAGS_INIT": "Valor que se usa para inicializar la entrada de caché CMAKE_<LANG>_FLAGS la primera vez que se configura un árbol de compilación para el lenguaje <LANG>. La variable la debe establecer un archivo de cadena de herramientas. CMake puede anteponer o anexar contenido al valor en función del entorno y la plataforma de destino. Por ejemplo, el contenido de una variable de entorno xxxFLAGS se antepondrá, donde xxx será específico del lenguaje, pero no coincidirá necesariamente con <LANG> (por ejemplo, CXXFLAGS para CXX, FFLAGS para Fortran, etc.). Este valor es un fragmento de cadena de línea de comandos. Por lo tanto, las diferentes opciones deben estar separadas por espacios y las opciones con espacios deben ir entre comillas.",
	"assets/variables.json.CMAKE_LANG_FLAGS_MINSIZEREL": "Esta variable es la variante MinSizeRel de la variable CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_MINSIZEREL_INIT": "Esta variable es la variante MinSizeRel de la variable CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELEASE": "Esta variable es la variante Release de la variable CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELEASE_INIT": "Esta variable es la variante Release de la variable CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELWITHDEBINFO": "Esta variable es la variante RelWithDebInfo de la variable CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELWITHDEBINFO_INIT": "Esta variable es la variante RelWithDebInfo de la variable CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_HOST_COMPILER": "Esta variable está disponible cuando <LANG> es CUDA o HIP.",
	"assets/variables.json.CMAKE_LANG_IGNORE_EXTENSIONS": "Extensiones de archivo que la compilación debe ignorar.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_INCLUDE_DIRECTORIES": "Directorios que el compilador ha buscado implícitamente para los archivos de encabezado.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_LINK_DIRECTORIES": "Ruta de acceso de búsqueda de enlazador de tipo implícito detectada para el lenguaje <LANG>.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES": "Ruta de acceso de búsqueda de marcos de enlazador de tipo implícito detectada para el lenguaje <LANG>.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_LINK_LIBRARIES": "Marcas y bibliotecas de vínculos de tipo implícito detectadas para el lenguaje <LANG>.",
	"assets/variables.json.CMAKE_LANG_INCLUDE_WHAT_YOU_USE": "Valor predeterminado de la propiedad <LANG>_INCLUDE_WHAT_YOU_USE de destino. La variable se usa para inicializar la propiedad en cada destino al crearse. Esto solo se hace cuando <LANG> es C o CXX.",
	"assets/variables.json.CMAKE_LANG_LIBRARY_ARCHITECTURE": "Nombre del directorio de bibliotecas de arquitectura de destino que se ha detectado para <LANG>.",
	"assets/variables.json.CMAKE_LANG_LINKER_LAUNCHER": "Valor predeterminado de la propiedad <LANG>_LINKER_LAUNCHER de destino. La variable se usa para inicializar la propiedad en cada destino al crearse. Esto solo se hace cuando <LANG> es C, CXX, OBJC o OBJCXX.",
	"assets/variables.json.CMAKE_LANG_LINKER_PREFERENCE": "Variable interna sujeta a cambios.",
	"assets/variables.json.CMAKE_LANG_LINKER_PREFERENCE_PROPAGATES": "Variable interna sujeta a cambios.",
	"assets/variables.json.CMAKE_LANG_LINKER_WRAPPER_FLAG": "Define la sintaxis de la opción de controlador del compilador para pasar opciones a la herramienta del enlazador. Se usa para traducir el prefijo LINKER: en las opciones de vínculos (consulte add_link_options y target_link_options).",
	"assets/variables.json.CMAKE_LANG_LINKER_WRAPPER_FLAG_SEP": "Esta variable se usa con la variable CMAKE_<LANG>_LINKER_WRAPPER_FLAG para dar formato al prefijo LINKER: en las opciones de vínculo (consulte add_link_options y target_link_options).",
	"assets/variables.json.CMAKE_LANG_LINK_EXECUTABLE": "Variable de regla para vincular un ejecutable.",
	"assets/variables.json.CMAKE_LANG_LINK_GROUP_USING_FEATURE": "Esta variable define cómo vincular un grupo de bibliotecas para la especificada <FEATURE> cuando se utiliza una expresión generadora de LINK_GROUP y el lenguaje de vínculo para el destino es <LANG>. Para que esta variable tenga algún efecto, la variable asociada CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>_SUPPORTED debe establecerse en verdadero.",
	"assets/variables.json.CMAKE_LANG_LINK_GROUP_USING_FEATURE_SUPPORTED": "Esta variable especifica si <FEATURE> se admite el lenguaje del vínculo <LANG>. Si esta variable es verdadera, entonces <FEATURE> debe definirse mediante CMAKE_<LANG>_LINK_GROUP_USING_, y las variables más genéricas CMAKE_LINK_GROUP_USING_<FEATURE>_SUPPORTED y CMAKE_LINK_GROUP_USING_ no se usan.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_FEATURE_ATTRIBUTES": "Esta variable define la semántica de la biblioteca de vínculos especificada de <FEATURE> al vincular con el idioma de vínculo <LANG>. Tiene prioridad sobre CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES si esa variable también se define para la misma <FEATURE>, pero, de lo contrario, tiene efectos similares. Consulte CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES para obtener más detalles.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_FILE_FLAG": "Marca específica del idioma que se usa para vincular una biblioteca especificada por una ruta de acceso al archivo correspondiente.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_FLAG": "Marca que se va a usar para vincular una biblioteca a un ejecutable o una biblioteca compartida.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_SUFFIX": "El sufijo específico del idioma para las bibliotecas a las que se vincula.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_USING_FEATURE": "Esta variable define cómo vincular una biblioteca o marco para el especificado <FEATURE> cuando se utiliza una expresión generadora de LINK_LIBRARY y el lenguaje de vínculo para el destino es <LANG>. Para que esta variable tenga algún efecto, la variable asociada CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED debe establecerse en verdadero.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_USING_FEATURE_SUPPORTED": "Se establece en VERDADERO si <FEATURE>, tal como se define por la variable CMAKE_<LANG>_LINK_LIBRARY_USING_, es compatible con el lenguaje del enlazador <LANG>.",
	"assets/variables.json.CMAKE_LANG_LINK_WHAT_YOU_USE_FLAG": "Marca del vinculador que se va a usar para configurar el vinculador de forma que todas las bibliotecas especificadas en la línea de comandos se vinculen al destino.",
	"assets/variables.json.CMAKE_LANG_OUTPUT_EXTENSION": "Extensión de la salida de compilación para un solo archivo.",
	"assets/variables.json.CMAKE_LANG_PLATFORM_ID": "Variable interna sujeta a cambios.",
	"assets/variables.json.CMAKE_LANG_SIMULATE_ID": "Cadena de identificación del compilador \"simulado\".",
	"assets/variables.json.CMAKE_LANG_SIMULATE_VERSION": "Cadena de versión del compilador \"simulado\".",
	"assets/variables.json.CMAKE_LANG_SIZEOF_DATA_PTR": "Tamaño de los tipos de puntero a datos para el lenguaje <LANG>.",
	"assets/variables.json.CMAKE_LANG_SOURCE_FILE_EXTENSIONS": "Extensiones de los archivos de código fuente del lenguaje especificado.",
	"assets/variables.json.CMAKE_LANG_STANDARD": "Las variaciones son:",
	"assets/variables.json.CMAKE_LANG_STANDARD_DEFAULT": "El estándar predeterminado del compilador para el lenguaje <LANG>. Está vacío si el compilador no tiene una concepción de niveles estándar.",
	"assets/variables.json.CMAKE_LANG_STANDARD_INCLUDE_DIRECTORIES": "Incluye los directorios que se van a usar para cada archivo de origen compilado mediante el compilador de <LANG>. Está pensado para la especificación de los directorios de inclusión del sistema que el lenguaje necesita para la plataforma actual. Los directorios siempre aparecen al final de la ruta de inclusión que se pasa al compilador.",
	"assets/variables.json.CMAKE_LANG_STANDARD_LATEST": "Esta variable representa el mínimo entre la versión más reciente del estándar para el lenguaje <LANG> que es compatible con el compilador actual y la versión más reciente compatible con CMake. Su valor se establecerá en uno de los valores admitidos de la propiedad de destino <LANG>_STANDARD correspondiente; consulte la documentación de esa propiedad para obtener una lista de idiomas admitidos.",
	"assets/variables.json.CMAKE_LANG_STANDARD_LIBRARIES": "Bibliotecas vinculadas en cada ejecutable y biblioteca compartida vinculada para el lenguaje <LANG>. Está pensado para la especificación de las bibliotecas del sistema que el lenguaje necesita para la plataforma actual.",
	"assets/variables.json.CMAKE_LANG_STANDARD_REQUIRED": "Las variaciones son:",
	"assets/variables.json.CMAKE_LANG_USING_LINKER_MODE": "Esto controla cómo se debe interpretar el valor de la variable CMAKE_<LANG>_USING_LINKER_. Los valores de modo del enlazador admitidos son:",
	"assets/variables.json.CMAKE_LANG_USING_LINKER_TYPE": "Esta variable define cómo especificar el enlazador <TYPE> para el paso de vínculo, tal y como lo controla la variable CMAKE_LINKER_TYPE o la propiedad de destino LINKER_TYPE. Según el valor de la variable CMAKE_<LANG>_USING_LINKER_MODE, CMAKE_<LANG>_USING_LINKER_<TYPE> puede contener marcas del compilador para el paso de vínculo o marcas que se van a proporcionar directamente a la herramienta del enlazador.",
	"assets/variables.json.CMAKE_LANG_VISIBILITY_PRESET": "Valor predeterminado de la propiedad <LANG>_VISIBILITY_PRESET de destino cuando se crea un destino.",
	"assets/variables.json.CMAKE_LIBRARY_ARCHITECTURE": "Nombre del directorio de bibliotecas de arquitectura de destino, si se detecta.",
	"assets/variables.json.CMAKE_LIBRARY_ARCHITECTURE_REGEX": "Expresión regular que coincide con los posibles nombres de directorio de biblioteca de la arquitectura de destino.",
	"assets/variables.json.CMAKE_LIBRARY_OUTPUT_DIRECTORY": "Indica dónde colocar todos los archivos de destino de LIBRARY cuando se compilan.",
	"assets/variables.json.CMAKE_LIBRARY_OUTPUT_DIRECTORY_CONFIG": "Indica dónde colocar todos los archivos de destino de LIBRARY cuando se compilan para una configuración específica.",
	"assets/variables.json.CMAKE_LIBRARY_PATH": "Lista separada por signos de punto y coma de directorios que especifican una ruta de acceso de búsqueda para el comando find_library. De manera predeterminada está vacía, debe establecerla el proyecto.",
	"assets/variables.json.CMAKE_LIBRARY_PATH_FLAG": "Marca que se va a usar para agregar una ruta de búsqueda de biblioteca a un compilador.",
	"assets/variables.json.CMAKE_LINKER_TYPE": "Especifique qué enlazador se usará para el paso de vínculo.",
	"assets/variables.json.CMAKE_LINK_DEF_FILE_FLAG": "Marca del enlazador que se va a usar para especificar un archivo .def para la creación de dll.",
	"assets/variables.json.CMAKE_LINK_DEPENDS_NO_SHARED": "Indica si se van a omitir las dependencias de vínculos en los archivos de bibliotecas compartidas.",
	"assets/variables.json.CMAKE_LINK_DEPENDS_USE_LINKER": "Para los generadores de archivo Make y Ninja, ahora las dependencias de vínculo son para una selección de enlazadores, generadas por el propio enlazador. Si define esta variable con el valor FALSE, puede desactivar esta característica.",
	"assets/variables.json.CMAKE_LINK_DIRECTORIES_BEFORE": "Indica si se deben anexar o anteponer directorios en link_directories de forma predeterminada.",
	"assets/variables.json.CMAKE_LINK_GROUP_USING_FEATURE": "Esta variable define cómo vincular un grupo de bibliotecas para la especificada <FEATURE> cuando se utiliza una expresión generadora de LINK_GROUP. Se deben cumplir las dos condiciones siguientes para que esta variable tenga algún efecto:",
	"assets/variables.json.CMAKE_LINK_GROUP_USING_FEATURE_SUPPORTED": "Esta variable especifica si <FEATURE> se admite independientemente del lenguaje del vínculo. Si esta variable es verdadera, entonces el <FEATURE> debe ser definido por CMAKE_LINK_GROUP_USING_.",
	"assets/variables.json.CMAKE_LINK_INTERFACE_LIBRARIES": "Valor predeterminado de la propiedad LINK_INTERFACE_LIBRARIES de los destinos.",
	"assets/variables.json.CMAKE_LINK_LIBRARIES_ONLY_TARGETS": "Establezca esta variable para inicializar la propiedad LINK_LIBRARIES_ONLY_TARGETS de los destinos no importados cuando se creen. Si se establece en true, se habilita una comprobación adicional de que todos los elementos denominados por target_link_libraries que pueden ser nombres de destino son realmente nombres de destinos existentes. Consulte la documentación de la propiedad de destino para obtener más detalles.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_FEATURE_ATTRIBUTES": "Esta variable define el comportamiento de la biblioteca de vínculos especificada de <FEATURE>. Especifica cómo interactúa <FEATURE> con otras características, cuándo se debe aplicar <FEATURE> y aspectos de cómo se debe controlar <FEATURE> cuando CMake ensambla la línea de comandos del enlazador final (por ejemplo, la desduplicación).",
	"assets/variables.json.CMAKE_LINK_LIBRARY_FILE_FLAG": "Indicador que se usa para vincular una biblioteca especificada por una ruta de acceso al archivo correspondiente.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_FLAG": "Marca que se va a usar para vincular una biblioteca a un ejecutable.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_SUFFIX": "El sufijo para las bibliotecas a las que se vincula.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_USING_FEATURE": "Esta variable define cómo vincular una biblioteca o marco para el especificado <FEATURE> cuando se utiliza una expresión generadora de LINK_LIBRARY. Se deben cumplir las dos condiciones siguientes para que esta variable tenga algún efecto:",
	"assets/variables.json.CMAKE_LINK_LIBRARY_USING_FEATURE_SUPPORTED": "Se establece en VERDADERO si <FEATURE>, tal y como se define mediante la variable CMAKE_LINK_LIBRARY_USING_, se admite independientemente del lenguaje del vinculador.",
	"assets/variables.json.CMAKE_LINK_SEARCH_END_STATIC": "Finaliza una línea de vínculo en la que se usan las bibliotecas estáticas del sistema.",
	"assets/variables.json.CMAKE_LINK_SEARCH_START_STATIC": "Asume que el enlazador busca bibliotecas estáticas de forma predeterminada.",
	"assets/variables.json.CMAKE_LINK_WHAT_YOU_USE": "Valor predeterminado de la propiedad LINK_WHAT_YOU_USE de destino. La variable se usa para inicializar la propiedad en cada destino al crearse.",
	"assets/variables.json.CMAKE_LINK_WHAT_YOU_USE_CHECK": "Define el comando ejecutado después del paso de vínculo para comprobar el uso de las bibliotecas. Actualmente, esta comprobación solo se define en plataformas ELF con el valor ldd -u -r.",
	"assets/variables.json.CMAKE_MACOSX_BUNDLE": "Valor predeterminado de MACOSX_BUNDLE en los destinos.",
	"assets/variables.json.CMAKE_MACOSX_RPATH": "Indica si se van a usar las rutas rpath en iOS y macOS.",
	"assets/variables.json.CMAKE_MAJOR_VERSION": "Primer componente del número de versión de la variable CMAKE_VERSION.",
	"assets/variables.json.CMAKE_MAKE_PROGRAM": "Herramienta que puede iniciar el sistema de compilación nativa. El valor puede ser la ruta de acceso completa a un ejecutable o solo el nombre de la herramienta si se espera que esté en PATH.",
	"assets/variables.json.CMAKE_MAP_IMPORTED_CONFIG_CONFIG": "Valor predeterminado de MAP_IMPORTED_CONFIG en los destinos.",
	"assets/variables.json.CMAKE_MATCH_COUNT": "Número de coincidencias con la última expresión regular.",
	"assets/variables.json.CMAKE_MATCH_n": "El grupo de capturas <n> coincide con la última expresión regular, para los grupos del 0 al 9. El grupo 0 es la coincidencia completa. Los grupos del 1 a 9 son las subexpresiones capturadas por la sintaxis ().",
	"assets/variables.json.CMAKE_MAXIMUM_RECURSION_DEPTH": "Profundidad de recursividad máxima para los scripts de CMake. Deben establecerla en la línea de comandos con -DCMAKE_MAXIMUM_RECURSION_DEPTH=<x> o en CMakeLists.txt los proyectos que requieren una profundidad de recursividad grande. Los proyectos que establecen esta variable deben proporcionar al usuario una forma de invalidarla. Por ejemplo:",
	"assets/variables.json.CMAKE_MESSAGE_CONTEXT": "Cuando la opción de línea de comandos cmake --log-context o la variable CMAKE_MESSAGE_CONTEXT_SHOW lo habilita, el comando de mensaje convierte la lista CMAKE_MESSAGE_CONTEXT en una cadena separada por puntos rodeada por corchetes y la antepone a cada línea para los mensajes con niveles de registro NOTICE e inferiores.",
	"assets/variables.json.CMAKE_MESSAGE_CONTEXT_SHOW": "Si esta variable se establece en true, se permite mostrar un contexto con cada línea que registre el comando de mensaje (consulte CMAKE_MESSAGE_CONTEXT para ver cómo se especifica el contexto en sí).",
	"assets/variables.json.CMAKE_MESSAGE_INDENT": "El comando de mensaje combina las cadenas de esta lista y, para los niveles de registro NOTICE e inferiores, antepone la cadena resultante a cada línea del mensaje.",
	"assets/variables.json.CMAKE_MESSAGE_LOG_LEVEL": "Cuando se establece, esta variable especifica el nivel de registro que usa el comando del mensaje. Los valores válidos son los mismos que los de la opción de la línea de comandos --log-level <cmake --log-level> del programa cmake. Si se establece esta variable y se proporciona la opción de línea de comandos --log-level <cmake --log-level>, esta opción tiene prioridad.",
	"assets/variables.json.CMAKE_MFC_FLAG": "Use la biblioteca MFC para un archivo ejecutable o dll.",
	"assets/variables.json.CMAKE_MINIMUM_REQUIRED_VERSION": "La versión <min> de CMake que se asigna a la última llamada de comando cmake_minimum_required en el ámbito de la variable actual o en cualquier ámbito de variable primario.",
	"assets/variables.json.CMAKE_MINOR_VERSION": "Segundo componente del número de versión de la variable CMAKE_VERSION.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS": "Marcas del enlazador que se van a usar para crear módulos.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS_CONFIG": "Marcas que se van a usar al vincular un módulo.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS_CONFIG_INIT": "Valor que se usa para inicializar la entrada de caché CMAKE_MODULE_LINKER_FLAGS la primera vez que se configura un árbol de compilación. La variable la debe establecer un archivo de cadena de herramientas. CMake puede anteponer o anexar contenido al valor en función del entorno y la plataforma de destino.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS_INIT": "Valor que se usa para inicializar la entrada de caché CMAKE_MODULE_LINKER_FLAGS la primera vez que se configura un árbol de compilación. La variable la debe establecer un archivo de cadena de herramientas. CMake puede anteponer o anexar contenido al valor en función del entorno y la plataforma de destino.",
	"assets/variables.json.CMAKE_MODULE_PATH": "Lista separada por signos de punto y coma de los directorios, representados por medio de diagonales, que especifican una ruta de acceso de búsqueda para los módulos de CMake que van a cargar los comandos include o find_package antes de comprobar los módulos predeterminados incluidos con CMake. De forma predeterminada está vacía, debe establecerla el proyecto.",
	"assets/variables.json.CMAKE_MSVCIDE_RUN_PATH": "Ubicaciones PATH adicionales que deben usarse al ejecutar add_custom_command o add_custom_target cuando se utiliza el generador de Visual Studio 12 2013 (o versiones posteriores). Permite ejecutar comandos y usar archivos DLL que el entorno de IDE no conoce.",
	"assets/variables.json.CMAKE_MSVC_DEBUG_INFORMATION_FORMAT": "Seleccione el formato de información de depuración de MSVC que tiene como destino la ABI de MSVC. Esta variable se usa para inicializar la propiedad MSVC_DEBUG_INFORMATION_FORMAT en todos los destinos a medida que se crean. También se propaga mediante las llamadas al comando try_compile en el proyecto de prueba.",
	"assets/variables.json.CMAKE_MSVC_RUNTIME_LIBRARY": "Seleccione la biblioteca en tiempo de ejecución de MSVC para que la usen los compiladores destinados a la ABI MSVC. Esta variable se usa para inicializar la propiedad MSVC_RUNTIME_LIBRARY en todos los destinos a medida que se crean. También se propaga mediante las llamadas al comando try_compile en el proyecto de prueba.",
	"assets/variables.json.CMAKE_NETRC": "Esta variable se usa para inicializar la opción NETRC para el archivo y los comandos de archivo. Consulte los comandos para obtener más información.",
	"assets/variables.json.CMAKE_NETRC_FILE": "Esta variable se usa para inicializar la opción NETRC_FILE para el archivo y los comandos de archivo. Consulte los comandos para obtener más información.",
	"assets/variables.json.CMAKE_NINJA_OUTPUT_PATH_PREFIX": "Indique a los generadores Ninja que agreguen un prefijo a cada ruta de acceso de salida en build.ninja. Si falta, se anexa una barra diagonal final al prefijo.",
	"assets/variables.json.CMAKE_NOT_USING_CONFIG_FLAGS": "Omite las marcas _BUILD_TYPE si es true.",
	"assets/variables.json.CMAKE_NO_BUILTIN_CHRPATH": "No use el editor binario integrado para corregir las rutas de acceso de búsqueda de bibliotecas en tiempo de ejecución en la instalación.",
	"assets/variables.json.CMAKE_NO_SYSTEM_FROM_IMPORTED": "Valor predeterminado de NO_SYSTEM_FROM_IMPORTED en los destinos.",
	"assets/variables.json.CMAKE_OBJCXX_EXTENSIONS": "Valor predeterminado de propiedad de destino OBJCXX_EXTENSIONS si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_OBJCXX_STANDARD": "Valor predeterminado de propiedad de destino OBJCXX_STANDARD si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_OBJCXX_STANDARD_REQUIRED": "Valor predeterminado de propiedad de destino OBJCXX_STANDARD_REQUIRED si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_OBJC_EXTENSIONS": "Valor predeterminado de propiedad de destino OBJC_EXTENSIONS si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_OBJC_STANDARD": "Valor predeterminado de propiedad de destino OBJC_STANDARD si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_OBJC_STANDARD_REQUIRED": "Valor predeterminado de propiedad de destino OBJC_STANDARD_REQUIRED si se establece cuando se crea un destino.",
	"assets/variables.json.CMAKE_OBJECT_PATH_MAX": "Longitud máxima de la ruta de acceso completa del archivo objeto que permiten las herramientas de compilación nativa.",
	"assets/variables.json.CMAKE_OPTIMIZE_DEPENDENCIES": "Inicializa la propiedad OPTIMIZE_DEPENDENCIES de destino.",
	"assets/variables.json.CMAKE_OSX_ARCHITECTURES": "Arquitecturas específicas de destino para iOS y macOS.",
	"assets/variables.json.CMAKE_OSX_DEPLOYMENT_TARGET": "Especifica la versión mínima de la plataforma de destino (por ejemplo, macOS o iOS) en la que se van a implementar los binarios de destino. CMake usa este valor de variable para la marca -mmacosx-version-min o sus equivalentes de plataforma de destino respectivos. Para las versiones anteriores de Xcode que incluían varios SDK de macOS, esta variable también ayuda a elegir el SDK, en caso de que CMAKE_OSX_SYSROOT no se haya establecido.",
	"assets/variables.json.CMAKE_OSX_SYSROOT": "Especifica la ubicación o el nombre del SDK de la plataforma de macOS que se va a usar. CMake usa este elemento para calcular el valor de la marca -isysroot o equivalente y para ayudar a los comandos find_* a encontrar archivos en el SDK.",
	"assets/variables.json.CMAKE_PARENT_LIST_FILE": "Ruta de acceso completa al archivo de CMake que incluye el actual.",
	"assets/variables.json.CMAKE_PATCH_VERSION": "Tercer componente del número de versión de la variable CMAKE_VERSION.",
	"assets/variables.json.CMAKE_PCH_INSTANTIATE_TEMPLATES": "Esta variable se usa para inicializar la propiedad PCH_INSTANTIATE_TEMPLATES de los destinos cuando se crean.",
	"assets/variables.json.CMAKE_PCH_WARN_INVALID": "Esta variable se usa para inicializar la propiedad PCH_WARN_INVALID de los destinos cuando se crean.",
	"assets/variables.json.CMAKE_PDB_OUTPUT_DIRECTORY": "Directorio de salida para los archivos .pdb de símbolos de depuración de MS que genera el enlazador para destinos de biblioteca compartida y ejecutable.",
	"assets/variables.json.CMAKE_PDB_OUTPUT_DIRECTORY_CONFIG": "Directorio de salida por configuración para los archivos .pdb de símbolos de depuración de MS que genera el enlazador para destinos de biblioteca compartida y ejecutable.",
	"assets/variables.json.CMAKE_PLATFORM_NO_VERSIONED_SONAME": "Esta variable se usa para controlar globalmente si las propiedades de destino VERSION y SOVERSION deben usarse para bibliotecas compartidas. Cuando se establece en true, se deshabilita la adición de información de versión a cada destino de biblioteca compartida.",
	"assets/variables.json.CMAKE_POLICY_DEFAULT_CMPNNNN": "Valor predeterminado de CMP<NNNN> de la directiva de CMake cuando se deja sin establecer.",
	"assets/variables.json.CMAKE_POLICY_WARNING_CMPNNNN": "Habilite o deshabilite explícitamente la advertencia cuando la<NNNN> de CMP de la directiva de CMake no se haya establecido explícitamente mediante cmake_policy o implícitamente mediante cmake_minimum_required. Esto solo es significativo para las directivas que no advierten de forma predeterminada:",
	"assets/variables.json.CMAKE_POSITION_INDEPENDENT_CODE": "Valor predeterminado de POSITION_INDEPENDENT_CODE en los destinos.",
	"assets/variables.json.CMAKE_PREFIX_PATH": "Lista de directorios, separados por punto y coma, donde se especifican los prefijos de instalación que deben buscar los comandos find_package, find_program, find_library, find_file y find_path. Cada comando agregará los subdirectorios adecuados (como bin, lib o include) que se especifiquen en su documentación propia.",
	"assets/variables.json.CMAKE_PROGRAM_PATH": "Lista separada por signos de punto y coma de los directorios que especifican una ruta de acceso de búsqueda para el comando find_program. De manera predeterminada está vacía, debe establecerla el proyecto.",
	"assets/variables.json.CMAKE_PROJECT_DESCRIPTION": "Descripción del proyecto de nivel superior.",
	"assets/variables.json.CMAKE_PROJECT_HOMEPAGE_URL": "Dirección URL de la página principal del proyecto de nivel superior.",
	"assets/variables.json.CMAKE_PROJECT_INCLUDE": "Un archivo de lenguaje CMake que se va a incluir como último paso de todas las llamadas a comandos del proyecto. Está pensado para insertar código personalizado en compilaciones de proyecto sin modificar su origen. Consulte Inserción de código para obtener una discusión más detallada de los archivos potencialmente incluidos durante una llamada a un proyecto.",
	"assets/variables.json.CMAKE_PROJECT_INCLUDE_BEFORE": "Un archivo de lenguaje CMake que se va a incluir como primer paso de todas las llamadas a comandos de proyecto. Está pensado para insertar código personalizado en compilaciones de proyecto sin modificar su origen. Consulte Inserción de código para obtener una discusión más detallada de los archivos potencialmente incluidos durante una llamada a un proyecto.",
	"assets/variables.json.CMAKE_PROJECT_NAME": "Nombre del proyecto de nivel superior.",
	"assets/variables.json.CMAKE_PROJECT_PROJECT-NAME_INCLUDE": "Un archivo de lenguaje CMake que se va a incluir como último paso de cualquier llamada de comando del proyecto que especifique <PROJECT-NAME> como nombre del proyecto. Está pensado para insertar código personalizado en compilaciones de proyecto sin modificar su origen. Consulte Inserción de código para obtener una discusión más detallada de los archivos potencialmente incluidos durante una llamada a un proyecto.",
	"assets/variables.json.CMAKE_PROJECT_PROJECT-NAME_INCLUDE_BEFORE": "Un archivo de lenguaje CMake que se va a incluir como primer paso de cualquier llamada de comando del proyecto que especifique <PROJECT-NAME> como nombre del proyecto. Está pensado para insertar código personalizado en compilaciones de proyecto sin modificar su origen. Consulte Inserción de código para obtener una discusión más detallada de los archivos potencialmente incluidos durante una llamada a un proyecto.",
	"assets/variables.json.CMAKE_PROJECT_TOP_LEVEL_INCLUDES": "Lista separada por punto y coma de los archivos de lenguaje CMake que se van a incluir como parte de la primera llamada de proyecto. Los archivos se incluirán inmediatamente después de que se haya leído el archivo de cadena de herramientas (si se especifica uno) y se hayan establecido variables de plataforma, pero antes de que se hayan habilitado cualquiera de los lenguajes. Por lo tanto, es posible que no se establezcan variables específicas del lenguaje, incluidas cosas como CMAKE_<LANG>_COMPILER. Consulte Inyección de código para obtener una descripción más detallada de los archivos potencialmente incluidos durante una llamada a un proyecto.",
	"assets/variables.json.CMAKE_PROJECT_VERSION": "Versión del proyecto de nivel superior.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_MAJOR": "Versión principal del proyecto de nivel superior.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_MINOR": "Versión secundaria del proyecto de nivel superior.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_PATCH": "Versión de revisión del proyecto de nivel superior.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_TWEAK": "Versión retocada del proyecto de nivel superior.",
	"assets/variables.json.CMAKE_RANLIB": "Nombre de la herramienta aleatoria para las bibliotecas estáticas.",
	"assets/variables.json.CMAKE_REQUIRE_FIND_PACKAGE_PackageName": "Variable para hacer la llamada find_package REQUIRED.",
	"assets/variables.json.CMAKE_ROOT": "Directorio de instalación para ejecutar cmake.",
	"assets/variables.json.CMAKE_RULE_MESSAGES": "Especifica si se va a notificar un mensaje para cada regla de make.",
	"assets/variables.json.CMAKE_RUNTIME_OUTPUT_DIRECTORY": "Indica dónde colocar todos los archivos de destino de RUNTIME cuando se compilan.",
	"assets/variables.json.CMAKE_RUNTIME_OUTPUT_DIRECTORY_CONFIG": "Indica dónde colocar todos los archivos de destino de RUNTIME cuando se compilan para una configuración específica.",
	"assets/variables.json.CMAKE_SCRIPT_MODE_FILE": "Ruta de acceso completa al archivo de script -P de cmake que se está procesando.",
	"assets/variables.json.CMAKE_SHARED_LIBRARY_ENABLE_EXPORTS": "Especifica si la biblioteca compartida genera un archivo de importación.",
	"assets/variables.json.CMAKE_SHARED_LIBRARY_PREFIX": "Prefijo para las bibliotecas compartidas a las que se vincula.",
	"assets/variables.json.CMAKE_SHARED_LIBRARY_SUFFIX": "Sufijo para las bibliotecas compartidas a las que se vincula.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS": "Marcas del enlazador que se van a usar para crear bibliotecas compartidas.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS_CONFIG": "Marcas que se van a usar al vincular una biblioteca compartida.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS_CONFIG_INIT": "Valor que se usa para inicializar la entrada de caché CMAKE_SHARED_LINKER_FLAGS la primera vez que se configura un árbol de compilación. La variable la debe establecer un archivo de cadena de herramientas. CMake puede anteponer o anexar contenido al valor en función del entorno y la plataforma de destino.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS_INIT": "Valor que se usa para inicializar la entrada de caché CMAKE_SHARED_LINKER_FLAGS la primera vez que se configura un árbol de compilación. La variable la debe establecer un archivo de cadena de herramientas. CMake puede anteponer o anexar contenido al valor en función del entorno y la plataforma de destino.",
	"assets/variables.json.CMAKE_SHARED_MODULE_PREFIX": "Prefijo para los módulos a los que se vincula que se pueden cargar.",
	"assets/variables.json.CMAKE_SHARED_MODULE_SUFFIX": "Sufijo para las bibliotecas compartidas a las que se vincula.",
	"assets/variables.json.CMAKE_SIZEOF_VOID_P": "Tamaño de un puntero void.",
	"assets/variables.json.CMAKE_SKIP_BUILD_RPATH": "Las rutas RPATH no se incluyen en el árbol de compilación.",
	"assets/variables.json.CMAKE_SKIP_INSTALL_ALL_DEPENDENCY": "El destino install no se hace dependiente del destino all.",
	"assets/variables.json.CMAKE_SKIP_INSTALL_RPATH": "Las rutas RPATH no se incluyen en el árbol de instalación.",
	"assets/variables.json.CMAKE_SKIP_INSTALL_RULES": "Indica si se debe deshabilitar la generación de reglas de instalación.",
	"assets/variables.json.CMAKE_SKIP_RPATH": "Si es true, no agrega información de la ruta de acceso en tiempo de ejecución.",
	"assets/variables.json.CMAKE_SKIP_TEST_ALL_DEPENDENCY": "Controle si el destino de prueba depende de todo el destino.",
	"assets/variables.json.CMAKE_SOURCE_DIR": "La ruta de acceso al nivel superior del árbol de origen.",
	"assets/variables.json.CMAKE_STAGING_PREFIX": "Esta variable se puede establecer en una ruta de acceso para instalar en ella cuando se realice la compilación cruzada. Puede ser útil si la ruta de acceso en CMAKE_SYSROOT es de solo lectura; en caso contrario, debe permanecer intacta.",
	"assets/variables.json.CMAKE_STATIC_LIBRARY_PREFIX": "Prefijo para las bibliotecas estáticas a las que se vincula.",
	"assets/variables.json.CMAKE_STATIC_LIBRARY_SUFFIX": "Sufijo para las bibliotecas estáticas a las que se vincula.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS": "Marcas que se van a usar para crear bibliotecas estáticas. Estas marcas se pasarán al archivador al crear una biblioteca estática.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS_CONFIG": "Marcas que se van a usar para crear bibliotecas estáticas. Estas marcas se pasarán al archivador al crear una biblioteca estática en la configuración <CONFIG>.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS_CONFIG_INIT": "Valor que se usa para inicializar la entrada de caché CMAKE_STATIC_LINKER_FLAGS la primera vez que se configura un árbol de compilación. La variable la debe establecer un archivo de cadena de herramientas. CMake puede anteponer o anexar contenido al valor en función del entorno y la plataforma de destino.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS_INIT": "Valor que se usa para inicializar la entrada de caché CMAKE_STATIC_LINKER_FLAGS la primera vez que se configura un árbol de compilación. La variable la debe establecer un archivo de cadena de herramientas. CMake puede anteponer o anexar contenido al valor en función del entorno y la plataforma de destino.",
	"assets/variables.json.CMAKE_SUBLIME_TEXT_2_ENV_SETTINGS": "Esta variable contiene una lista de variables de entorno como lista de tokens con la sintaxis var=value.",
	"assets/variables.json.CMAKE_SUBLIME_TEXT_2_EXCLUDE_BUILD_TREE": "Si esta variable se evalúa como ON al final del archivo CMakeLists.txt de nivel superior, el generador adicional de Sublime Text 2 excluye el árbol de compilación de .sublime-project, si está dentro del árbol de origen.",
	"assets/variables.json.CMAKE_SUPPRESS_REGENERATION": "Si CMAKE_SUPPRESS_REGENERATION se establece en OFF, que es el valor predeterminado, CMake agrega un destino especial del que dependen el resto de destinos, el cual comprueba el sistema de compilación y, opcionalmente, vuelve a ejecutar CMake para regenerar el sistema de compilación cuando cambia el origen de especificación del destino.",
	"assets/variables.json.CMAKE_Swift_COMPILATION_MODE": "Especifique cómo Swift compila un destino. Esta variable se usa para inicializar la propiedad Swift_COMPILATION_MODE en los destinos a medida que se crean.",
	"assets/variables.json.CMAKE_Swift_LANGUAGE_VERSION": "Establezca esta opción en el número de versión del lenguaje Swift. Si no se establece, se asume la versión heredada más antigua que esté disponible en la versión de Xcode del host:",
	"assets/variables.json.CMAKE_Swift_MODULE_DIRECTORY": "Directorio de salida del módulo swift.",
	"assets/variables.json.CMAKE_Swift_NUM_THREADS": "Número de subprocesos para la compilación paralela en destinos de Swift.",
	"assets/variables.json.CMAKE_SYSROOT": "Ruta de acceso que se pasa al compilador en la marca --sysroot.",
	"assets/variables.json.CMAKE_SYSROOT_COMPILE": "Ruta de acceso que se pasa al compilador en la marca --sysroot cuando se compilan archivos de origen. Es igual que en CMAKE_SYSROOT, pero solo se usa para compilar orígenes, no para vincular.",
	"assets/variables.json.CMAKE_SYSROOT_LINK": "Ruta de acceso que se pasa al compilador en la marca --sysroot cuando se vincula. Es igual que en CMAKE_SYSROOT, pero solo se usa para vincular, no para compilar orígenes.",
	"assets/variables.json.CMAKE_SYSTEM": "Nombre compuesto del sistema operativo para el que CMake está realizando la compilación.",
	"assets/variables.json.CMAKE_SYSTEM_APPBUNDLE_PATH": "Ruta de acceso de búsqueda para los lotes de aplicaciones de macOS que los comandos find_package y find_program usan. De forma predeterminada, contiene los directorios estándar del sistema actual. No está pensada para que la modifique el proyecto; para ello, use CMAKE_APPBUNDLE_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_FRAMEWORK_PATH": "Ruta de acceso de búsqueda para los marcos de macOS que los comandos find_library, find_package, find_path y find_file usan. De forma predeterminada, contiene los directorios estándar del sistema actual. No está pensada para que la modifique el proyecto; para ello, use CMAKE_FRAMEWORK_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_IGNORE_PATH": "Lista separada por signos de punto y coma de los directorios que omitirán los diversos resultados de la búsqueda... () comandos.",
	"assets/variables.json.CMAKE_SYSTEM_IGNORE_PREFIX_PATH": "Lista separada por signos de punto y coma de los prefijos de búsqueda que deben omitir los comandos find_program, find_library, find_file y find_path. El modo Config del comando find_package también omite los prefijos (el modo módulo no se ve afectado). Para omitir directorios específicos, vea CMAKE_IGNORE_NONPREFIX_VAR.",
	"assets/variables.json.CMAKE_SYSTEM_INCLUDE_PATH": "Lista separada por signos de punto y coma de los directorios que especifican una ruta de acceso de búsqueda para los comandos find_file y find_path. De forma predeterminada, contiene los directorios estándar del sistema actual. No está pensada para que la modifique el proyecto; para ello, use CMAKE_INCLUDE_PATH. Consulte también CMAKE_SYSTEM_PREFIX_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_LIBRARY_PATH": "Lista separada por signos de punto y coma de los directorios que especifican una ruta de acceso de búsqueda para el comando find_library. De forma predeterminada, contiene los directorios estándar del sistema actual. No está pensada para que la modifique el proyecto; para ello, use CMAKE_LIBRARY_PATH. Consulte también CMAKE_SYSTEM_PREFIX_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_NAME": "Nombre del sistema operativo para el que se va a compilar CMake. Consulte la variable CMAKE_SYSTEM_VERSION para obtener la versión del sistema operativo.",
	"assets/variables.json.CMAKE_SYSTEM_PREFIX_PATH": "Lista de directorios, separados por punto y coma, donde se especifican los prefijos de instalación que deben buscar los comandos find_package, find_program, find_library, find_file y find_path. Cada comando agregará los subdirectorios adecuados (como bin, lib o include) que se especifiquen en su documentación propia.",
	"assets/variables.json.CMAKE_SYSTEM_PROCESSOR": "Cuando no se realiza la compilación cruzada, esta variable tiene el mismo valor que la variable CMAKE_HOST_SYSTEM_PROCESSOR. En muchos casos, corresponderá a la arquitectura de destino de la compilación, pero no se garantiza. (Por ejemplo, en Windows, el host puede ser AMD64 incluso cuando se use un compilador de cl MSVC con un destino de 32 bits).",
	"assets/variables.json.CMAKE_SYSTEM_PROGRAM_PATH": "Lista separada por signos de punto y coma de los directorios que especifican una ruta de acceso de búsqueda para el comando find_program. De forma predeterminada, contiene los directorios estándar del sistema actual. No está pensada para que la modifique el proyecto; para ello, use CMAKE_PROGRAM_PATH. Consulte también CMAKE_SYSTEM_PREFIX_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_VERSION": "Versión del sistema operativo para el que CMake va a compilar. Consulte la variable CMAKE_SYSTEM_NAME para el nombre del sistema operativo.",
	"assets/variables.json.CMAKE_TASKING_TOOLSET": "Seleccione el conjunto de herramientas de tareas que proporciona el compilador",
	"assets/variables.json.CMAKE_TEST_LAUNCHER": "Esta variable se usa para inicializar la propiedad de destino TEST_LAUNCHER de los destinos ejecutables a medida que se crean. Se usa para especificar un iniciador para ejecutar pruebas, agregadas por el comando add_test, que ejecutan un destino ejecutable.",
	"assets/variables.json.CMAKE_TLS_CAINFO": "Especifique el valor predeterminado para las opciones de TLS_CAINFO de archivo y de los comandos de archivo. No está establecido de forma predeterminada.",
	"assets/variables.json.CMAKE_TLS_VERIFY": "Especifique el valor predeterminado para las opciones de TLS_VERIFY del archivo y de los comandos de archivo. Si no se establece esta variable, los comandos comprueban la variable de entorno CMAKE_TLS_VERIFY. Si no se establece ninguno, el valor predeterminado está desactivado.",
	"assets/variables.json.CMAKE_TLS_VERSION": "Especifique el valor predeterminado para la opción de TLS_VERSION del archivo y de los comandos del archivo. Si no se establece esta variable, los comandos comprueban la variable de entorno CMAKE_TLS_VERSION.",
	"assets/variables.json.CMAKE_TOOLCHAIN_FILE": "Ruta de acceso al archivo de cadena de herramientas que se proporciona a cmake.",
	"assets/variables.json.CMAKE_TRY_COMPILE_CONFIGURATION": "Configuración de compilación que se usa para los proyectos try_compile y try_run.",
	"assets/variables.json.CMAKE_TRY_COMPILE_NO_PLATFORM_VARIABLES": "Establezca en un valor verdadero para indicar al comando try_compile que no propague ninguna variable de plataforma en el proyecto de prueba.",
	"assets/variables.json.CMAKE_TRY_COMPILE_PLATFORM_VARIABLES": "Lista de variables que la signatura del archivo de origen del comando try_compile debe propagar en el proyecto de prueba para destinarse a la misma plataforma que el proyecto del host.",
	"assets/variables.json.CMAKE_TRY_COMPILE_TARGET_TYPE": "Tipo de destino que se genera para las llamadas try_compile con la signatura del archivo de origen. Los valores válidos son:",
	"assets/variables.json.CMAKE_TWEAK_VERSION": "Definido como 0 para la compatibilidad con el código escrito para versiones anteriores de CMake que puedan haber definido valores más altos.",
	"assets/variables.json.CMAKE_UNITY_BUILD": "Esta variable se usa para inicializar la propiedad UNITY_BUILD de los destinos cuando se crean. Si se establece en true, se habilita la compilación por lotes de varios orígenes en cada destino. Esta característica se conoce como una compilación de Unity o Jumbo.",
	"assets/variables.json.CMAKE_UNITY_BUILD_BATCH_SIZE": "Esta variable se usa para inicializar la propiedad UNITY_BUILD_BATCH_SIZE de los destinos cuando se crean. Especifica el límite superior predeterminado del número de archivos de código fuente que pueden combinarse en cualquier archivo de código fuente de Unity cuando se habilitan las compilaciones de Unity para un destino.",
	"assets/variables.json.CMAKE_UNITY_BUILD_UNIQUE_ID": "Esta variable se usa para inicializar la propiedad UNITY_BUILD_UNIQUE_ID de los destinos cuando se crean. Especifica el nombre del identificador único que se genera por archivo en una compilación de Unity.",
	"assets/variables.json.CMAKE_USER_MAKE_RULES_OVERRIDE": "Especifica un archivo CMake que reemplaza la información de plataforma.",
	"assets/variables.json.CMAKE_USER_MAKE_RULES_OVERRIDE_LANG": "Especifica un archivo CMake que reemplaza la información de plataforma para <LANG>.",
	"assets/variables.json.CMAKE_USE_RELATIVE_PATHS": "Esta variable no tiene ningún efecto. El efecto de implementación parcial que tenía en las versiones anteriores se eliminó en CMake 3.4.",
	"assets/variables.json.CMAKE_VERBOSE_MAKEFILE": "Habilita la salida detallada de las compilaciones de Makefile.",
	"assets/variables.json.CMAKE_VERIFY_INTERFACE_HEADER_SETS": "Esta variable se usa para inicializar la propiedad VERIFY_INTERFACE_HEADER_SETS de los destinos cuando se crean. Establecerlo en verdadero habilita la verificación del conjunto de encabezados.",
	"assets/variables.json.CMAKE_VERSION": "Cadena de versión de CMake como componentes enteros no negativos separados por . y posiblemente seguidos de - y otra información. Los dos primeros componentes representan el nivel de las características y el tercero representa un nivel de corrección de errores o la fecha de desarrollo.",
	"assets/variables.json.CMAKE_VISIBILITY_INLINES_HIDDEN": "Valor predeterminado de la propiedad VISIBILITY_INLINES_HIDDEN de destino cuando se crea un destino.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_COMMAND": "Esta variable se usa para inicializar la propiedad VS_DEBUGGER_COMMAND en cada destino a medida que se crea. Consulte la propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS": "Esta variable se usa para inicializar la propiedad VS_DEBUGGER_COMMAND_ARGUMENTS en cada destino a medida que se crea. Consulte la propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_ENVIRONMENT": "Esta variable se usa para inicializar la propiedad VS_DEBUGGER_ENVIRONMENT en cada destino a medida que se crea. Consulte la propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_WORKING_DIRECTORY": "Esta variable se usa para inicializar la propiedad VS_DEBUGGER_WORKING_DIRECTORY en cada destino a medida que se crea. Consulte la propiedad de destino para obtener más información.",
	"assets/variables.json.CMAKE_VS_DEVENV_COMMAND": "Los generadores para Visual Studio 12 2013 y versiones posteriores establecen esta variable en el comando devenv.com instalado con la versión de Visual Studio correspondiente. Tenga en cuenta que esta variable puede estar vacía en las ediciones de Visual Studio Express, ya que no proporcionan esta herramienta.",
	"assets/variables.json.CMAKE_VS_GLOBALS": "Lista de registros Key=Value que se van a establecer por destino como propiedades de destino VS_GLOBAL_ con variable=Key y el valor Value.",
	"assets/variables.json.CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD": "Incluye el destino INSTALL en la compilación predeterminada.",
	"assets/variables.json.CMAKE_VS_INCLUDE_PACKAGE_TO_DEFAULT_BUILD": "Incluye el destino PACKAGE en la compilación predeterminada.",
	"assets/variables.json.CMAKE_VS_INTEL_Fortran_PROJECT_VERSION": "Cuando se genera para Visual Studio 12 2013 o una versión posterior con el complemento de Intel Fortran instalado, especifica la versión de formato de archivo del proyecto .vfproj. Esto se destina a uso interno de CMake y no se debe usar en el código de proyecto.",
	"assets/variables.json.CMAKE_VS_JUST_MY_CODE_DEBUGGING": "Habilite Solo mi código con el depurador de Visual Studio.",
	"assets/variables.json.CMAKE_VS_MSBUILD_COMMAND": "Los generadores de Visual Studio 12 2013 y versiones posteriores establecen esta variable en el comando MSBuild.exe instalado con la versión de Visual Studio correspondiente.",
	"assets/variables.json.CMAKE_VS_NO_COMPILE_BATCHING": "Desactive el procesamiento por lotes de compilación cuando use generadores de Visual Studio.",
	"assets/variables.json.CMAKE_VS_NsightTegra_VERSION": "Cuando se usa un generador de Visual Studio con la variable CMAKE_SYSTEM_NAME establecida en Android, la variable contiene el número de versión de la instancia de NVIDIA Nsight Tegra Visual Studio Edition instalada.",
	"assets/variables.json.CMAKE_VS_NUGET_PACKAGE_RESTORE": "Cuando se usa un generador de Visual Studio, esta variable de caché controla si msbuild debe intentar restaurar automáticamente NuGet paquetes antes de una compilación. NuGet paquetes se pueden definir con la propiedad VS_PACKAGE_REFERENCES de un destino. Si no se definen referencias de paquete, esta configuración no hará nada.",
	"assets/variables.json.CMAKE_VS_PLATFORM_NAME": "Nombre de la plataforma de destino Visual Studio que usa el generador actual.",
	"assets/variables.json.CMAKE_VS_PLATFORM_NAME_DEFAULT": "Valor predeterminado del nombre de la plataforma de destino Visual Studio para el generador actual, sin tener en cuenta el valor de la variable CMAKE_GENERATOR_PLATFORM. Para los generadores de Visual Studio de versión VS 2017 y anteriores, este valor siempre es Win32. Para VS 2019 y versiones posteriores, el valor se basa en la plataforma host.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET": "Nombre del conjunto de herramientas de la plataforma Visual Studio.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_CUDA": "Versión de NVIDIA CUDA Toolkit cuyo conjunto de herramientas de Visual Studio se debe usar.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_CUDA_CUSTOM_DIR": "Ruta de acceso al kit de herramientas NVIDIA CUDA Toolkit independiente (por ejemplo, extraída del instalador).",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_FORTRAN": "Compilador de Fortran que van a usar los proyectos de Visual Studio.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE": "Arquitectura de herramientas preferida de Visual Studio.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_VERSION": "Versión del conjunto de herramientas de la plataforma Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_EXCLUDE_DIRECTORIES": "Esta variable permite reemplazar los directorios de exclusión predeterminados de Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_EXECUTABLE_DIRECTORIES": "Esta variable permite reemplazar los directorios de archivos ejecutables predeterminados de Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_INCLUDE_DIRECTORIES": "Esta variable permite reemplazar los directorios de archivos de inclusión predeterminados de Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_LIBRARY_DIRECTORIES": "Esta variable permite reemplazar los directorios de archivos de bibliotecas predeterminados de Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_LIBRARY_WINRT_DIRECTORIES": "Esta variable permite reemplazar los directorios de biblioteca WinRT predeterminados de Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_REFERENCE_DIRECTORIES": "Esta variable permite reemplazar los directorios de referencia predeterminados de Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_SOURCE_DIRECTORIES": "Esta variable permite reemplazar los directorios de origen predeterminados de Visual Studio.",
	"assets/variables.json.CMAKE_VS_TARGET_FRAMEWORK_IDENTIFIER": "Identificador de la plataforma de destino de Visual Studio.",
	"assets/variables.json.CMAKE_VS_TARGET_FRAMEWORK_TARGETS_VERSION": "Versión de destinos de la plataforma de destino de Visual Studio",
	"assets/variables.json.CMAKE_VS_TARGET_FRAMEWORK_VERSION": "Versión de la plataforma de destino de Visual Studio.",
	"assets/variables.json.CMAKE_VS_USE_DEBUG_LIBRARIES": "Indique a los generadores de Visual Studio qué configuraciones se consideran configuraciones de depuración. Esto controla el valor UseDebugLibraries en cada configuración de un archivo .vcxproj.",
	"assets/variables.json.CMAKE_VS_VERSION_BUILD_NUMBER": "Versión de Visual Studio",
	"assets/variables.json.CMAKE_VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION": "Indique a los generadores de Visual Studio que usen la versión mínima de la plataforma de destino de Windows especificada.",
	"assets/variables.json.CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION": "Versión de la plataforma de destino de Visual Studio para Windows.",
	"assets/variables.json.CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM": "Reemplace la versión máxima del SDK de Windows 10 para VS 2015 y versiones posteriores.",
	"assets/variables.json.CMAKE_VS_WINRT_BY_DEFAULT": "Informe a los generadores de Visual Studio para VS 2010 y versiones posteriores de que la plataforma de destino habilita la compilación de WinRT de forma predeterminada y debe deshabilitarse de forma explícita si se omite /ZW o VS_WINRT_COMPONENT (o, de lo contrario, habilitarla cuando está presente cualquiera de estas opciones).",
	"assets/variables.json.CMAKE_WARN_DEPRECATED": "Indica si se deben emitir advertencias para una funcionalidad en desuso.",
	"assets/variables.json.CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION": "Solicita al script cmake_install.cmake que genere una advertencia cada vez que se encuentra un archivo con un valor INSTALL DESTINATION absoluto.",
	"assets/variables.json.CMAKE_WATCOM_RUNTIME_LIBRARY": "Seleccione la biblioteca de tiempo de ejecución de Watcom para que la usen los compiladores destinados a la Watcom ABI. Esta variable se usa para inicializar la propiedad WATCOM_RUNTIME_LIBRARY en todos los destinos a medida que se crean. También se propaga mediante llamadas al comando try_compile en el proyecto de prueba.",
	"assets/variables.json.CMAKE_WIN32_EXECUTABLE": "Valor predeterminado de WIN32_EXECUTABLE en los destinos.",
	"assets/variables.json.CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS": "Valor predeterminado de la propiedad WINDOWS_EXPORT_ALL_SYMBOLS de destino. La variable se usa para inicializar la propiedad en cada destino al crearse.",
	"assets/variables.json.CMAKE_XCODE_ATTRIBUTE_an-attribute": "Establece los atributos de destino de Xcode directamente.",
	"assets/variables.json.CMAKE_XCODE_BUILD_SYSTEM": "Selección del sistema de compilación de Xcode.",
	"assets/variables.json.CMAKE_XCODE_GENERATE_SCHEME": "Si se habilita, el generador de Xcode crea archivos de esquema, que son útiles para invocar el análisis, archivado, compilación para pruebas y acciones de pruebas desde la línea de comandos.",
	"assets/variables.json.CMAKE_XCODE_GENERATE_TOP_LEVEL_PROJECT_ONLY": "Si se habilita, el generador de Xcode solo genera un archivo del proyecto de Xcode para el comando project() del nivel superior, en lugar de generar uno para cada comando project().",
	"assets/variables.json.CMAKE_XCODE_LINK_BUILD_PHASE_MODE": "Esta variable se usa para inicializar la propiedad XCODE_LINK_BUILD_PHASE_MODE en los destinos. Afecta a los métodos que usa el generador de Xcode para vincular distintos tipos de bibliotecas. Su valor predeterminado es NONE.",
	"assets/variables.json.CMAKE_XCODE_PLATFORM_TOOLSET": "Selección del compilador de Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER": "Indica si debe habilitarse AddressSanitizer en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN": "Indica si debe habilitarse Detect use of stack after return en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING": "Indica si se va a habilitar la opción Allow debugging when using document Versions Browser en la sección Opciones del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER": "Indica si debe deshabilitarse Main Thread Checker en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS": "Indica si debe habilitarse Dynamic Library Loads en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE": "Indica si debe habilitarse Dynamic Linker API usage en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENABLE_GPU_API_VALIDATION": "Valor de propiedad para Metal: Validación de API en la sección Opciones del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE": "Valor de propiedad para la captura de fotogramas de GPU en la sección Opciones del esquema de Xcode generado. Los valores de ejemplo son Metal y Disabled.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION": "Valor de propiedad para Metal: Shader Validation en la sección Opciones del esquema Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENVIRONMENT": "Especifica las variables de entorno que deben agregarse a la sección de argumentos del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_GUARD_MALLOC": "Indica si debe habilitarse Guard Malloc en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_LAUNCH_CONFIGURATION": "Establece la configuración de compilación para ejecutar el destino.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_LAUNCH_MODE": "Valor de propiedad de Inicio en la sección Información del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP": "Indica si debe habilitarse la opción Pause on issues de Main Thread Checker en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MALLOC_GUARD_EDGES": "Indica si debe habilitarse Malloc Guard Edges en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MALLOC_SCRIBBLE": "Indica si debe habilitarse Malloc Scribble en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MALLOC_STACK": "Indica si debe habilitarse Malloc Stack en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_THREAD_SANITIZER": "Indica si debe habilitarse Thread Sanitizer en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_THREAD_SANITIZER_STOP": "Indica si debe habilitarse Thread Sanitizer - Pause on issues en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER": "Indica si debe habilitarse Undefined Behavior Sanitizer en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP": "Indica si debe habilitarse Undefined Behavior Sanitizer con la opción Pause on issues en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_WORKING_DIRECTORY": "Especifique el directorio de trabajo de las acciones de ejecución y generación de perfiles en el esquema de Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ZOMBIE_OBJECTS": "Indica si debe habilitarse Zombie Objects en la sección Diagnostics del esquema Xcode generado.",
	"assets/variables.json.CMAKE_XCODE_XCCONFIG": "Si se establece, el generador de Xcode registrará el archivo especificado como un archivo XCConfig global. Para los archivos XCConfig de nivel de destino, consulte el XCODE_XCCONFIG propiedad de destino.",
	"assets/variables.json.CPACK_ABSOLUTE_DESTINATION_FILES": "Lista de archivos que se han instalado con una ruta de acceso ABSOLUTE DESTINATION.",
	"assets/variables.json.CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY": "Alternancia de un valor booleano para incluir o excluir un directorio de nivel superior (caso de componente).",
	"assets/variables.json.CPACK_CUSTOM_INSTALL_VARIABLES": "Las variables CPack (establecidas a través de, por ejemplo, los scripts CPack-D, CPackConfig. CMake o CPACK_PROJECT_CONFIG_FILE) no son visibles directamente en los scripts de instalación. En su lugar, se puede pasar una lista de pares varName=value en la variable CPACK_CUSTOM_INSTALL_VARIABLES. En el momento de la instalación, cada elemento de la lista dará lugar a una variable con el nombre especificado (varName) que se establecerá en el valor dado. Se puede omitir = para un valor vacío.",
	"assets/variables.json.CPACK_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION": "Solicita a CPack que genere un error tan pronto como se encuentre un archivo con un valor INSTALL DESTINATION absoluto.",
	"assets/variables.json.CPACK_INCLUDE_TOPLEVEL_DIRECTORY": "Alternancia de un valor booleano para incluir o excluir un directorio de nivel superior.",
	"assets/variables.json.CPACK_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS": "Permisos predeterminados para los directorios creados de forma implícita durante el empaquetado.",
	"assets/variables.json.CPACK_PACKAGING_INSTALL_PREFIX": "Prefijo que se usa en el paquete compilado.",
	"assets/variables.json.CPACK_SET_DESTDIR": "Alternancia de un valor booleano para hacer que CPack use el mecanismo DESTDIR al empaquetar.",
	"assets/variables.json.CPACK_WARN_ON_ABSOLUTE_INSTALL_DESTINATION": "Solicita a CPack que genere una advertencia cada vez que se encuentre un archivo con un valor INSTALL DESTINATION absoluto.",
	"assets/variables.json.CTEST_BINARY_DIRECTORY": "Especifica el valor BuildDirectory de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_BUILD_COMMAND": "Especifica el valor MakeCommand de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_BUILD_NAME": "Especifica el valor BuildName de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_BZR_COMMAND": "Especifica el valor BZRCommand de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_BZR_UPDATE_OPTIONS": "Especifica el valor BZRUpdateOptions de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_CHANGE_ID": "Especifica el valor ChangeId de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_CHECKOUT_COMMAND": "Indica al comando ctest_start cómo restaurar o inicializar el directorio de origen en un script de cliente de panel de ctest.",
	"assets/variables.json.CTEST_CONFIGURATION_TYPE": "Especifica el valor DefaultCTestConfigurationType de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_CONFIGURE_COMMAND": "Especifica el valor ConfigureCommand de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_COVERAGE_COMMAND": "Especifica el valor CoverageCommand de en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_COVERAGE_EXTRA_FLAGS": "Especifica el valor CoverageExtraFlags de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_CURL_OPTIONS": "Especifica el valor CurlOptions de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_CUSTOM_COVERAGE_EXCLUDE": "Lista de expresiones regulares que el comando ctest_coverage usará para excluir archivos por su ruta de acceso de la salida de cobertura.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_EXCEPTION": "Lista de expresiones regulares que el comando ctest_build usará para excluir cuando se detecten mensajes de error en las salidas de compilación.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_MATCH": "Lista de expresiones regulares que el comando ctest_build usará para detectar mensajes de error en las salidas de compilación.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_POST_CONTEXT": "Número de líneas que se incluirán como contexto que sigue a un mensaje de error mediante el comando ctest_build. El valor predeterminado es 10.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_PRE_CONTEXT": "Número de líneas que se van a incluir como contexto que precede a un mensaje de error mediante el comando ctest_test. El valor predeterminado es 10.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE": "Al guardar la salida de una prueba con errores, este es el tamaño máximo, en bytes, que recopilará el comando ctest_test. El valor predeterminado es 307200 (300 KiB). Consulte CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION para conocer los posibles modos de truncamiento.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_NUMBER_OF_ERRORS": "Número máximo de errores que se detectará en un único paso de compilación. Si se supera, el comando ctest_test trunca la salida. El valor predeterminado es 50.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_NUMBER_OF_WARNINGS": "Número máximo de advertencias que se detectará en un único paso de compilación. Si se supera, el comando ctest_test trunca la salida. El valor predeterminado es 50.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE": "Al guardar la salida de una prueba superada, este es el tamaño máximo, en bytes, que recopilará el comando ctest_test. El valor predeterminado es 1024 (1 KiB). Consulte CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION para conocer los posibles modos de truncamiento.",
	"assets/variables.json.CTEST_CUSTOM_MEMCHECK_IGNORE": "Lista de expresiones regulares que se usarán para excluir pruebas durante el comando ctest_memcheck.",
	"assets/variables.json.CTEST_CUSTOM_POST_MEMCHECK": "Lista de comandos que se ejecutarán al final del comando ctest_memcheck.",
	"assets/variables.json.CTEST_CUSTOM_POST_TEST": "Lista de comandos que se ejecutarán al final del comando ctest_test.",
	"assets/variables.json.CTEST_CUSTOM_PRE_MEMCHECK": "Lista de comandos que se ejecutarán al inicio del comando ctest_memcheck.",
	"assets/variables.json.CTEST_CUSTOM_PRE_TEST": "Lista de comandos que se ejecutarán al inicio del comando ctest_test.",
	"assets/variables.json.CTEST_CUSTOM_TESTS_IGNORE": "Lista de nombres de pruebas que se excluirán del conjunto de pruebas que ejecuta el comando ctest_test.",
	"assets/variables.json.CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION": "Establezca el modo de truncamiento de salida de prueba en caso de que se configure un tamaño máximo mediante las variables CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE o CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE. De forma predeterminada, la cola de la salida se truncará. Otros valores posibles son el medio y el encabezado.",
	"assets/variables.json.CTEST_CUSTOM_WARNING_EXCEPTION": "Lista de expresiones regulares que el comando ctest_build usará para excluir cuando se detecten mensajes de advertencia en las salidas de compilación.",
	"assets/variables.json.CTEST_CUSTOM_WARNING_MATCH": "Lista de expresiones regulares que el comando ctest_build usará para detectar mensajes de advertencia en las salidas de compilación.",
	"assets/variables.json.CTEST_CVS_CHECKOUT": "En desuso. Use CTEST_CHECKOUT_COMMAND en su lugar.",
	"assets/variables.json.CTEST_CVS_COMMAND": "Especifica el valor CVSCommand de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_CVS_UPDATE_OPTIONS": "Especifica el valor CVSUpdateOptions de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_DROP_LOCATION": "Especifica el valor DropLocation de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_DROP_METHOD": "Especifica el valor DropMethod de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_DROP_SITE": "Especifica el valor DropSite de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_DROP_SITE_CDASH": "Especifica el valor IsCDash de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_DROP_SITE_PASSWORD": "Especifica el valor DropSitePassword de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_DROP_SITE_USER": "Especifica el valor DropSiteUser de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_EXTRA_COVERAGE_GLOB": "Lista de expresiones regulares que se usarán para buscar archivos que el comando ctest_coverage debe cubrir.",
	"assets/variables.json.CTEST_GIT_COMMAND": "Especifica el valor GITCommand de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_GIT_INIT_SUBMODULES": "Especifica el valor GITInitSubmodules de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_GIT_UPDATE_CUSTOM": "Especifica el valor GITUpdateCustom de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_GIT_UPDATE_OPTIONS": "Especifica el valor GITUpdateOptions de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_HG_COMMAND": "Especifica el valor HGCommand de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_HG_UPDATE_OPTIONS": "Especifica el valor HGUpdateOptions de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_LABELS_FOR_SUBPROJECTS": "Especifica el valor LabelsForSubprojects de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_COMMAND": "Especifica el valor MemoryCheckCommand de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_COMMAND_OPTIONS": "Especifica el valor MemoryCheckCommandOptions de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_SANITIZER_OPTIONS": "Especifica el valor MemoryCheckSanitizerOptions de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_SUPPRESSIONS_FILE": "Especifica el valor MemoryCheckSuppressionFile de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_TYPE": "Especifica el valor MemoryCheckType de CTest en un script de cliente del panel de ctest. Los valores válidos son Valgrind, Purify, BoundsChecker, DrMemory, CudaSanitizer, ThreadSanitizer, AddressSanitizer, LeakSanitizer, MemorySanitizer y UndefinedBehaviorSanitizer.",
	"assets/variables.json.CTEST_NIGHTLY_START_TIME": "Especifica el valor NightlyStartTime de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_P4_CLIENT": "Especifica el valor P4Client de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_P4_COMMAND": "Especifica el valor P4Command de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_P4_OPTIONS": "Especifica el valor P4Options de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_P4_UPDATE_OPTIONS": "Especifica el valor P4UpdateOptions de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_RESOURCE_SPEC_FILE": "Especifica el valor ResourceSpecFile de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_RUN_CURRENT_SCRIPT": "Al establecer esta opción en 0, se impide que ctest se vuelva a ejecutar cuando alcanza el final de un script mediante una llamada a ctest -S.",
	"assets/variables.json.CTEST_SCP_COMMAND": "Opción heredada. No se usa.",
	"assets/variables.json.CTEST_SCRIPT_DIRECTORY": "Directorio que contiene el script de CTest de nivel superior. El concepto es similar a CMAKE_SOURCE_DIR.",
	"assets/variables.json.CTEST_SITE": "Especifica el valor Site de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_SOURCE_DIRECTORY": "Especifica el valor SourceDirectory de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_SUBMIT_INACTIVITY_TIMEOUT": "Especifica el valor TimeOut de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_SUBMIT_URL": "Especifica el valor SubmitURL de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_SVN_COMMAND": "Especifica el valor SVNCommand de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_SVN_OPTIONS": "Especifica el valor SVNOptions de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_SVN_UPDATE_OPTIONS": "Especifica el valor SVNUpdateOptions de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_TEST_LOAD": "Especifica el valor TestLoad en el paso CTest Test de un script de cliente de panel de ctest. Este parámetro define el valor predeterminado para la opción TEST_LOAD del comando ctest_test.",
	"assets/variables.json.CTEST_TEST_TIMEOUT": "Especifica el valor TimeOut de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_TLS_VERIFY": "Especifique el valor TLSVerify de CTest en un script de cliente de panel de ctest o en el código de CMakeLists.txt del proyecto antes de incluir el módulo CTest. El valor es un valor booleano que indica si se debe comprobar el certificado de servidor al enviar a un panel a través de direcciones URL https://.",
	"assets/variables.json.CTEST_TLS_VERSION": "Especifique el valor TLSVersion de CTest en un script de cliente de panel de ctest o en el código de CMakeLists.txt del proyecto antes de incluir el módulo CTest. El valor es una versión mínima de TLS permitida al enviar a un panel a través de direcciones URL https://.",
	"assets/variables.json.CTEST_TRIGGER_SITE": "Opción heredada. No se usa.",
	"assets/variables.json.CTEST_UPDATE_COMMAND": "Especifica el valor UpdateCommand de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_UPDATE_OPTIONS": "Especifica el valor UpdateOptions de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_UPDATE_VERSION_ONLY": "Especifica el valor UpdateVersionOnly de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_UPDATE_VERSION_OVERRIDE": "Especifica el valor UpdateVersionOverride de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CTEST_USE_LAUNCHERS": "Especifica el valor UseLaunchers de CTest en un script de cliente del panel de ctest.",
	"assets/variables.json.CYGWIN": "True para Cygwin.",
	"assets/variables.json.ENV": "Operador para leer las variables de entorno.",
	"assets/variables.json.EXECUTABLE_OUTPUT_PATH": "Variable de ubicación del ejecutable anterior.",
	"assets/variables.json.GHSMULTI": "1 cuando se usa el generador de Green Hills MULTI.",
	"assets/variables.json.IOS": "Se establece en 1 cuando el sistema de destino (CMAKE_SYSTEM_NAME) es iOS.",
	"assets/variables.json.LIBRARY_OUTPUT_PATH": "Variable de ubicación de la biblioteca anterior.",
	"assets/variables.json.LINUX": "Se establece como true cuando el sistema de destino es Linux.",
	"assets/variables.json.MINGW": "Se establece en un valor true cuando se habilita al menos un lenguaje con un compilador destinado a GNU ABI en Windows (MinGW).",
	"assets/variables.json.MSVC": "Se establece en true si el compilador es alguna versión de Microsoft Visual C++ u otro compilador que simula la sintaxis de línea de comandos cl de Visual C++.",
	"assets/variables.json.MSVC10": "No se recomienda. Use la variable MSVC_VERSION en su lugar.",
	"assets/variables.json.MSVC11": "No se recomienda. Use la variable MSVC_VERSION en su lugar.",
	"assets/variables.json.MSVC12": "No se recomienda. Use la variable MSVC_VERSION en su lugar.",
	"assets/variables.json.MSVC14": "No se recomienda. Use la variable MSVC_VERSION en su lugar.",
	"assets/variables.json.MSVC60": "No se recomienda. Use la variable MSVC_VERSION en su lugar.",
	"assets/variables.json.MSVC70": "No se recomienda. Use la variable MSVC_VERSION en su lugar.",
	"assets/variables.json.MSVC71": "No se recomienda. Use la variable MSVC_VERSION en su lugar.",
	"assets/variables.json.MSVC80": "No se recomienda. Use la variable MSVC_VERSION en su lugar.",
	"assets/variables.json.MSVC90": "No se recomienda. Use la variable MSVC_VERSION en su lugar.",
	"assets/variables.json.MSVC_IDE": "True cuando se usa el IDE de Microsoft Visual C++.",
	"assets/variables.json.MSVC_TOOLSET_VERSION": "Versión del conjunto de herramientas de Microsoft Visual C/C++ que se está usando, si existe. Si se está usando un tipo similar a MSVC, esta variable se establece en función de la versión del compilador, tal y como se indica en la variable MSVC_VERSION.",
	"assets/variables.json.MSVC_VERSION": "Versión de Microsoft Visual C/C++ que se va a usar, si corresponde. Si se usa un compilador que simula Visual C++, esta variable se establece en la versión del conjunto de herramientas que se simula en función de la definición del preprocesador _MSC_VER.",
	"assets/variables.json.MSYS": "Es true cuando se usa el generador de archivos Make de MSYS.",
	"assets/variables.json.PackageName_ROOT": "Las llamadas a find_package (<PackageName>) buscarán en los prefijos especificados por la variable de CMake <PackageName>_ROOT, en la que <PackageName> es el nombre (en mayúsculas y minúsculas) asignado a la llamada find_package y _ROOT es el literal. Por ejemplo, find_package(Foo) buscará los prefijos especificados en la variable de CMake Foo_ROOT (si se establece). Consulte la directiva CMP0074.",
	"assets/variables.json.PROJECT-NAME_BINARY_DIR": "Directorio binario de nivel superior para el proyecto con nombre.",
	"assets/variables.json.PROJECT-NAME_DESCRIPTION": "Valor asignado a la opción DESCRIPTION de la llamada más reciente al comando project con el nombre de proyecto <PROJECT-NAME>, si existe.",
	"assets/variables.json.PROJECT-NAME_HOMEPAGE_URL": "Valor asignado a la opción HOMEPAGE_URL de la llamada más reciente al comando project con el nombre de proyecto <PROJECT-NAME>, si existe.",
	"assets/variables.json.PROJECT-NAME_IS_TOP_LEVEL": "Variable booleana que indica si el proyecto nombrado se llamó en un archivo CMakeLists.txt de nivel superior.",
	"assets/variables.json.PROJECT-NAME_SOURCE_DIR": "Directorio de origen de nivel superior para el proyecto con nombre.",
	"assets/variables.json.PROJECT-NAME_VERSION": "Valor asignado a la opción VERSION de la llamada más reciente al comando project con el nombre de proyecto <PROJECT-NAME>, si existe.",
	"assets/variables.json.PROJECT-NAME_VERSION_MAJOR": "Primer componente del número de versión de la variable <PROJECT-NAME>_VERSION establecido por el comando de proyecto.",
	"assets/variables.json.PROJECT-NAME_VERSION_MINOR": "Segundo componente del número de versión de la variable <PROJECT-NAME>_VERSION establecido por el comando de proyecto.",
	"assets/variables.json.PROJECT-NAME_VERSION_PATCH": "Tercer componente del número de versión de la variable <PROJECT-NAME>_VERSION establecido por el comando de proyecto.",
	"assets/variables.json.PROJECT-NAME_VERSION_TWEAK": "Cuarto componente del número de versión de la variable <PROJECT-NAME>_VERSION establecido por el comando de proyecto.",
	"assets/variables.json.PROJECT_BINARY_DIR": "Ruta de acceso completa al directorio de compilación para el proyecto.",
	"assets/variables.json.PROJECT_DESCRIPTION": "Descripción breve del proyecto que se proporciona al comando de proyecto.",
	"assets/variables.json.PROJECT_HOMEPAGE_URL": "Dirección URL de la página principal del proyecto.",
	"assets/variables.json.PROJECT_IS_TOP_LEVEL": "Variable booleana que indica si el comando de proyecto llamado más recientemente en el ámbito actual o superior estaba en el archivo CMakeLists.txt de nivel superior.",
	"assets/variables.json.PROJECT_NAME": "Nombre del proyecto asignado al comando del proyecto.",
	"assets/variables.json.PROJECT_SOURCE_DIR": "Directorio de origen de la última llamada al comando de proyecto realizada en el ámbito del directorio actual o en uno de sus elementos primarios. Tenga en cuenta que no se ve afectado por las llamadas al proyecto realizadas en un ámbito de directorio secundario (es decir, desde una llamada a add_subdirectory desde el ámbito actual).",
	"assets/variables.json.PROJECT_VERSION": "Valor asignado a la opción VERSION de la última llamada al comando de proyecto, si existe.",
	"assets/variables.json.PROJECT_VERSION_MAJOR": "Primer componente del número de versión de la variable PROJECT_VERSION establecido por el comando de proyecto.",
	"assets/variables.json.PROJECT_VERSION_MINOR": "Segundo componente del número de versión de la variable PROJECT_VERSION establecido por el comando de proyecto.",
	"assets/variables.json.PROJECT_VERSION_PATCH": "Tercer componente del número de versión de la variable PROJECT_VERSION establecido por el comando de proyecto.",
	"assets/variables.json.PROJECT_VERSION_TWEAK": "Cuarto componente del número de versión de la variable PROJECT_VERSION establecido por el comando de proyecto.",
	"assets/variables.json.UNIX": "Se establece en True cuando el sistema de destino es UNIX o tipo UNIX (por ejemplo, APPLE y CYGWIN). La variable CMAKE_SYSTEM_NAME debe consultarse si se requiere un conocimiento más específico del sistema de destino.",
	"assets/variables.json.WIN32": "Se establece en True cuando el sistema de destino es Windows, incluido Win64.",
	"assets/variables.json.WINCE": "True si la variable CMAKE_SYSTEM_NAME se establece en WindowsCE.",
	"assets/variables.json.WINDOWS_PHONE": "True si la variable CMAKE_SYSTEM_NAME se establece en WindowsPhone.",
	"assets/variables.json.WINDOWS_STORE": "True si la variable CMAKE_SYSTEM_NAME se establece en WindowsStore.",
	"assets/variables.json.XCODE": "Es True cuando se usa el generador de Xcode.",
	"assets/variables.json.XCODE_VERSION": "Versión de Xcode (solo generador de Xcode).",
	"assets/variables.json.ADVANCED": "True si la entrada debe ocultarse de forma predeterminada en las GUI.",
	"assets/variables.json.HELPSTRING": "Ayuda asociada a la entrada en las GUI.",
	"assets/variables.json.MODIFIED": "Propiedad de administración interna. No se puede establecer ni obtener.",
	"assets/variables.json.STRINGS": "Enumera los posibles valores de entrada de STRING para la selección de GUI.",
	"assets/variables.json.TYPE": "Tipo de widget para la entrada en los objetos GUI.",
	"assets/variables.json.VALUE": "Valor de una entrada de caché.",
	"assets/variables.json.ADDITIONAL_CLEAN_FILES": "Lista separada por signos de punto y coma de archivos o directorios que se quitarán como parte del destino de limpieza global. Es útil para especificar los archivos o directorios generados que varios destinos o el propio CMake usan o que se generan de formas que no pueden capturarse como salidas o productos derivados de comandos personalizados.",
	"assets/variables.json.ADDITIONAL_MAKE_CLEAN_FILES": "Archivos adicionales que se van a quitar durante la fase de limpieza.",
	"assets/variables.json.BINARY_DIR": "Esta propiedad de directorio de solo lectura informa de la ruta de acceso absoluta al directorio binario correspondiente al origen en el que se lee.",
	"assets/variables.json.BUILDSYSTEM_TARGETS": "Esta propiedad de directorio de solo lectura contiene una lista separada por signos de punto y coma de los destinos del sistema de compilación agregados en el directorio mediante llamadas a los comandos add_library, add_executable y add_custom_target. La lista no incluye ningún destino Imported ni Alias, pero sí incluye bibliotecas Interface. Cada entrada de la lista es el nombre lógico de un destino, adecuado para pasarlo a la opción TARGET del comando get_property.",
	"assets/variables.json.CACHE_VARIABLES": "Lista de variables de caché disponibles en el directorio actual.",
	"assets/variables.json.CLEAN_NO_CUSTOM": "Se establece en true para indicar a los generadores de Makefile que no quiten las salidas de los comandos personalizados para este directorio durante la operación make clean. Se ignora en otros generadores porque no es posible implementarlo.",
	"assets/variables.json.CMAKE_CONFIGURE_DEPENDS": "Indica a CMake los archivos de entrada adicionales para el proceso de configuración. Si se modifica algún archivo con nombre, el sistema de compilación vuelve a ejecutar CMake para reconfigurar el archivo y regenerar el sistema de compilación.",
	"assets/variables.json.COMPILE_DEFINITIONS": "Definiciones del preprocesador para compilar los orígenes de un directorio.",
	"assets/variables.json.COMPILE_DEFINITIONS_CONFIG": "Se ignora. Consulte la directiva de CMake CMP0043.",
	"assets/variables.json.COMPILE_OPTIONS": "Lista de opciones que se van a pasar al compilador.",
	"assets/variables.json.DEFINITIONS": "Solo para compatibilidad con CMake 2.4. Use COMPILE_DEFINITIONS en su lugar.",
	"assets/variables.json.EXCLUDE_FROM_ALL": "Establezca esta propiedad de directorio en un valor true en un subdirectorio para excluir sus destinos del destino \"all\" de sus antecesores. Si se excluye, al ejecutar, por ejemplo, make en el directorio principal no se establecerán los destinos del subdirectorio de forma predeterminada. Esto no afecta al destino \"all\" del subdirectorio en sí. Al ejecutar make en el subdirectorio, se compilarán sus destinos.",
	"assets/variables.json.IMPLICIT_DEPENDS_INCLUDE_TRANSFORM": "Especifica transformaciones de línea #include para las dependencias en un directorio.",
	"assets/variables.json.IMPORTED_TARGETS": "Esta propiedad de directorio de solo lectura contiene una lista separada por punto y coma de destinos importados agregados en el directorio mediante llamadas a los comandos add_library y add_executable. Cada entrada de la lista es el nombre lógico de un destino, adecuado para pasarlo a la opción TARGET del comando get_property cuando se llama en el mismo directorio.",
	"assets/variables.json.INCLUDE_DIRECTORIES": "Lista de directorios de búsqueda de archivos de inclusión del preprocesador.",
	"assets/variables.json.INCLUDE_REGULAR_EXPRESSION": "Incluye la expresión regular de examen de archivos.",
	"assets/variables.json.INTERPROCEDURAL_OPTIMIZATION": "Esta propiedad de directorio ya no existe.",
	"assets/variables.json.INTERPROCEDURAL_OPTIMIZATION_CONFIG": "Esta propiedad de directorio ya no existe.",
	"assets/variables.json.LABELS": "Especifique una lista de etiquetas de texto asociadas a un directorio y a todos sus subdirectorios. Esto es equivalente a establecer la propiedad de destino LABELS y la propiedad de prueba LABELS en todos los destinos y pruebas del directorio y los subdirectorios actuales. Nota: Deben habilitarse los iniciadores para propagar las etiquetas a los destinos.",
	"assets/variables.json.LINK_DIRECTORIES": "Lista de directorios de búsqueda del enlazador.",
	"assets/variables.json.LINK_OPTIONS": "Lista de opciones que se van a usar en el paso de vinculación de los destinos de biblioteca compartida, módulo y ejecutable, así como el paso de vinculación del dispositivo.",
	"assets/variables.json.LISTFILE_STACK": "Pila actual de archivos de lista que se están procesando.",
	"assets/variables.json.MACROS": "Lista de comandos de macro disponibles en el directorio actual.",
	"assets/variables.json.PARENT_DIRECTORY": "Directorio de origen que agrega el subdirectorio actual.",
	"assets/variables.json.RULE_LAUNCH_COMPILE": "Especifica un iniciador para las reglas de compilación.",
	"assets/variables.json.RULE_LAUNCH_CUSTOM": "Especifica un iniciador para las reglas personalizadas.",
	"assets/variables.json.RULE_LAUNCH_LINK": "Especifica un iniciador para las reglas de vínculos.",
	"assets/variables.json.SOURCE_DIR": "Esta propiedad de directorio de solo lectura informa de la ruta de acceso absoluta al directorio de origen en el que se lee.",
	"assets/variables.json.SUBDIRECTORIES": "Esta propiedad de directorio de solo lectura contiene una lista separada por signos de punto y coma de los subdirectorios procesados hasta ahora por los comandos add_subdirectory o subdirs. Cada entrada es la ruta de acceso absoluta al directorio de origen (que contiene el archivo CMakeLists.txt). Resulta útil para pasar a la opción DIRECTORY del comando get_property.",
	"assets/variables.json.SYSTEM": "Esta propiedad de directorio se usa para inicializar la propiedad de destino SYSTEM para los destinos no importados creados en ese directorio. add_subdirectory y FetchContent_Declare la establecen como true cuando la opción SYSTEM se proporciona como argumento para esos comandos.",
	"assets/variables.json.TESTS": "Lista de pruebas.",
	"assets/variables.json.TEST_INCLUDE_FILE": "En desuso. Use TEST_INCLUDE_FILES en su lugar.",
	"assets/variables.json.TEST_INCLUDE_FILES": "Lista de archivos de CMake que se incluirán al ejecutar ctest.",
	"assets/variables.json.VARIABLES": "Lista de variables definidas en el directorio actual.",
	"assets/variables.json.VS_GLOBAL_SECTION_POST_section": "Especifica una sección global postSolution en Visual Studio.",
	"assets/variables.json.VS_GLOBAL_SECTION_PRE_section": "Especifica una sección global preSolution en Visual Studio.",
	"assets/variables.json.VS_STARTUP_PROJECT": "Especifica el proyecto de inicio predeterminado en una solución de Visual Studio.",
	"assets/variables.json.ALLOW_DUPLICATE_CUSTOM_TARGETS": "Permite la creación de destinos personalizados duplicados.",
	"assets/variables.json.AUTOGEN_SOURCE_GROUP": "Nombre de source_group para los archivos generados de AUTOMOC, AUTORCC y AUTOUIC.",
	"assets/variables.json.AUTOGEN_TARGETS_FOLDER": "Nombre de FOLDER para destinos *_autogen que CMake agrega automáticamente para los destinos en los que AUTOMOC está habilitado.",
	"assets/variables.json.AUTOMOC_SOURCE_GROUP": "Nombre de source_group para los archivos generados de AUTOMOC.",
	"assets/variables.json.AUTOMOC_TARGETS_FOLDER": "Nombre de FOLDER para destinos *_autogen que CMake agrega automáticamente para los destinos en los que AUTOMOC está habilitado.",
	"assets/variables.json.AUTORCC_SOURCE_GROUP": "Nombre de source_group para los archivos generados de AUTORCC.",
	"assets/variables.json.AUTOUIC_SOURCE_GROUP": "Nombre de source_group para los archivos generados de AUTOUIC.",
	"assets/variables.json.CMAKE_CUDA_KNOWN_FEATURES": "Lista de características de CUDA conocidas para esta versión de CMake.",
	"assets/variables.json.CMAKE_CXX_KNOWN_FEATURES": "Lista de características de C++ conocidas para esta versión de CMake.",
	"assets/variables.json.CMAKE_C_KNOWN_FEATURES": "Lista de características de C conocidas para esta versión de CMake.",
	"assets/variables.json.CMAKE_HIP_KNOWN_FEATURES": "Lista de características del desafío HIP conocidas para esta versión de CMake.",
	"assets/variables.json.CMAKE_ROLE": "Indica el modo en el que se encuentra el script en ejecución. Puede ser uno de varios valores:",
	"assets/variables.json.DEBUG_CONFIGURATIONS": "Especifica las configuraciones para la depuración.",
	"assets/variables.json.DISABLED_FEATURES": "Lista de características que se deshabilitan durante la ejecución de CMake.",
	"assets/variables.json.ECLIPSE_EXTRA_CPROJECT_CONTENTS": "Contenido adicional que se va a insertar en el archivo cproject de Eclipse generado.",
	"assets/variables.json.ECLIPSE_EXTRA_NATURES": "Lista de naturalezas para agregar al archivo del proyecto de Eclipse generado.",
	"assets/variables.json.ENABLED_FEATURES": "Lista de características que se habilitan durante la ejecución de CMake.",
	"assets/variables.json.ENABLED_LANGUAGES": "Propiedad de solo lectura que contiene la lista de lenguajes habilitados actualmente.",
	"assets/variables.json.FIND_LIBRARY_USE_LIB32_PATHS": "Indica si el comando find_library debe buscar directorios lib32 automáticamente.",
	"assets/variables.json.FIND_LIBRARY_USE_LIB64_PATHS": "Indica si find_library debe buscar directorios lib64 automáticamente.",
	"assets/variables.json.FIND_LIBRARY_USE_LIBX32_PATHS": "Indica si el comando find_library debe buscar directorios libx32 automáticamente.",
	"assets/variables.json.FIND_LIBRARY_USE_OPENBSD_VERSIONING": "Indica si find_library debe buscar bibliotecas compartidas de estilo OpenBSD.",
	"assets/variables.json.GENERATOR_IS_MULTI_CONFIG": "Propiedad de solo lectura que es true en los generadores multiconfiguración.",
	"assets/variables.json.GLOBAL_DEPENDS_DEBUG_MODE": "Habilita el modo de depuración de gráfico de dependencias de destino global.",
	"assets/variables.json.GLOBAL_DEPENDS_NO_CYCLES": "No permite ciclos de gráfico de dependencias de destino global.",
	"assets/variables.json.INSTALL_PARALLEL": "Habilita la opción de instalación en paralelo para el generador Ninja.",
	"assets/variables.json.IN_TRY_COMPILE": "Propiedad de solo lectura que es true durante una configuración de try-compile.",
	"assets/variables.json.JOB_POOLS": "Solo Ninja: lista de grupos disponibles.",
	"assets/variables.json.PACKAGES_FOUND": "Lista de los paquetes que se encontraron durante la ejecución de CMake.",
	"assets/variables.json.PACKAGES_NOT_FOUND": "Lista de los paquetes que no se encontraron durante la ejecución de CMake.",
	"assets/variables.json.PREDEFINED_TARGETS_FOLDER": "Nombre de FOLDER para los destinos que CMake agrega automáticamente.",
	"assets/variables.json.PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE": "Cuando esta propiedad global se establece en true, la variable CMAKE_PROJECT_TOP_LEVEL_INCLUDES se propaga a llamadas try_compile que usan la firma del proyecto completo. Esta propiedad no afecta a las llamadas a la firma del archivo de origen. PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE no está establecido de forma predeterminada.",
	"assets/variables.json.REPORT_UNDEFINED_PROPERTIES": "Si se establece, notifica cualquier propiedad no definida a este archivo.",
	"assets/variables.json.RULE_MESSAGES": "Especifica si se va a notificar un mensaje para cada regla de make.",
	"assets/variables.json.TARGET_ARCHIVES_MAY_BE_SHARED_LIBS": "Establece si las bibliotecas compartidas pueden denominarse como los archivos.",
	"assets/variables.json.TARGET_MESSAGES": "Especifica si se va a notificar la finalización de cada destino.",
	"assets/variables.json.TARGET_SUPPORTS_SHARED_LIBS": "¿Admite la plataforma de destino las bibliotecas compartidas?",
	"assets/variables.json.USE_FOLDERS": "Controla si se debe usar la propiedad de destino FOLDER para organizar los destinos en carpetas. El valor de USE_FOLDERS al final del archivo CMakeLists.txt de nivel superior es lo que determina el comportamiento.",
	"assets/variables.json.XCODE_EMIT_EFFECTIVE_PLATFORM_NAME": "Controla la emisión de EFFECTIVE_PLATFORM_NAME por el generador Xcode.",
	"assets/variables.json.CPACK_DESKTOP_SHORTCUTS": "Especifica una lista de nombres de acceso directo que deben crearse en el escritorio para este archivo.",
	"assets/variables.json.CPACK_NEVER_OVERWRITE": "Solicita que este archivo no se sobrescriba al instalar o reinstalar.",
	"assets/variables.json.CPACK_PERMANENT": "Solicita que este archivo no se quite al desinstalar.",
	"assets/variables.json.CPACK_STARTUP_SHORTCUTS": "Especifica una lista de nombres de acceso directo que deben crearse en la carpeta de Inicio para este archivo.",
	"assets/variables.json.CPACK_START_MENU_SHORTCUTS": "Especifica una lista de nombres de acceso directo que deben crearse en el menú Inicio para este archivo.",
	"assets/variables.json.CPACK_WIX_ACL": "Especifica los permisos de acceso para los archivos o directorios instalados con un instalador de WiX.",
	"assets/variables.json.ABSTRACT": "Indica si el archivo de código fuente es una clase abstracta.",
	"assets/variables.json.AUTORCC_OPTIONS": "Opciones adicionales para rcc cuando se usa AUTORCC.",
	"assets/variables.json.AUTOUIC_OPTIONS": "Opciones adicionales para uic cuando se usa AUTOUIC.",
	"assets/variables.json.COMPILE_FLAGS": "Marcas adicionales que se agregarán al compilar este archivo de código fuente.",
	"assets/variables.json.CXX_SCAN_FOR_MODULES": "CXX_SCAN_FOR_MODULES es un valor booleano que especifica si CMake examinará el origen en busca de dependencias de módulo de C++. Consulte también la CXX_SCAN_FOR_MODULES para la configuración de todo el destino.",
	"assets/variables.json.EXTERNAL_OBJECT": "Si se establece en true, es un archivo objeto.",
	"assets/variables.json.Fortran_FORMAT": "Se establece en FIXED o FREE para indicar el diseño de origen de Fortran.",
	"assets/variables.json.Fortran_PREPROCESS": "Controle si el archivo de código fuente de Fortran debe preprocesarse incondicionalmente.",
	"assets/variables.json.GENERATED": "Indica si el archivo de origen se genera como parte de la compilación o del proceso de CMake.",
	"assets/variables.json.HEADER_FILE_ONLY": "Indica si el archivo de origen es simplemente un archivo de encabezado.",
	"assets/variables.json.KEEP_EXTENSION": "Hace que el archivo de salida tenga la misma extensión que el archivo de origen.",
	"assets/variables.json.LANGUAGE": "Especifique el lenguaje de programación en el que se escribe un archivo de código fuente.",
	"assets/variables.json.LOCATION": "Ruta de acceso completa a un archivo de código fuente.",
	"assets/variables.json.MACOSX_PACKAGE_LOCATION": "Coloca un archivo de código fuente en un lote de aplicaciones (MACOSX_BUNDLE), de Core Foundation (BUNDLE) o de Framework (FRAMEWORK). Aplicable para iOS y macOS.",
	"assets/variables.json.OBJECT_DEPENDS": "Archivos adicionales de los que depende un archivo de objeto compilado.",
	"assets/variables.json.OBJECT_OUTPUTS": "Salidas adicionales para una regla de generadores de archivos Make o Ninja.",
	"assets/variables.json.SKIP_AUTOGEN": "Excluye el archivo de código fuente del procesamiento de AUTOMOC, AUTOUIC y AUTORCC (para los proyectos de Qt).",
	"assets/variables.json.SKIP_AUTOMOC": "Excluye el archivo de código fuente del procesamiento de AUTOMOC (para los proyectos de Qt).",
	"assets/variables.json.SKIP_AUTORCC": "Excluye el archivo de código fuente del procesamiento de AUTORCC (para los proyectos de Qt).",
	"assets/variables.json.SKIP_AUTOUIC": "Excluye el archivo de código fuente del procesamiento de AUTOUIC (para los proyectos de Qt).",
	"assets/variables.json.SKIP_LINTING": "Esta propiedad le permite excluir un archivo de origen específico del proceso de linting. El proceso de linting implica ejecutar herramientas como <LANG>_CPPLINT, <LANG>_CLANG_TIDY, <LANG>_CPPCHECK y <LANG>_INCLUDE_WHAT_YOU_USE en los archivos de origen, así como compilar archivos de encabezado como parte de VERIFY_INTERFACE_HEADER_SETS. Al establecer SKIP_LINTING en un archivo de origen, las herramientas de linting mencionadas no se ejecutarán para ese archivo en particular.",
	"assets/variables.json.SKIP_PRECOMPILE_HEADERS": "¿Omite la característica PRECOMPILE_HEADERS este archivo de código fuente?",
	"assets/variables.json.SKIP_UNITY_BUILD_INCLUSION": "Si esta propiedad se establece en true, se garantiza que las compilaciones de Unity omitan el archivo de código fuente cuando el destino asociado tenga la propiedad UNITY_BUILD establecida en true. Dicho archivo se compila por su cuenta, de la misma forma que se haría si las compilaciones de Unity estuvieran deshabilitadas.",
	"assets/variables.json.Swift_DEPENDENCIES_FILE": "Esta propiedad establece la ruta de acceso del archivo de dependencia de Swift (swiftdeps) del origen. Si no se especifica ninguna, <OBJECT>.swiftdeps se establecerá como valor predeterminado.",
	"assets/variables.json.Swift_DIAGNOSTICS_FILE": "Esta propiedad controla dónde se serializan los diagnósticos de Swift.",
	"assets/variables.json.SYMBOLIC": "Es simplemente un nombre para una regla.",
	"assets/variables.json.UNITY_GROUP": "Esta propiedad controla de qué cubo formará parte el origen cuando UNITY_BUILD_MODE se establece en GROUP.",
	"assets/variables.json.VS_COPY_TO_OUT_DIR": "Establece la etiqueta <CopyToOutputDirectory> para un archivo de origen en un archivo del proyecto de Visual Studio. Los valores válidos son Never, Always y PreserveNewest.",
	"assets/variables.json.VS_CSHARP_tagname": "Configuración específica de archivos de origen de Visual Studio y CSharp.",
	"assets/variables.json.VS_DEPLOYMENT_CONTENT": "Marca un archivo de origen como contenido para implementación con una aplicación de Windows Phone o Microsoft Store cuando se compila con un generador de Visual Studio <cmake-generators(7)>. El valor debe evaluarse como 1 o 0 y se pueden usar expresiones de generador <cmake-generator-expressions(7)> para elegir en función de la configuración de compilación. La entrada del archivo .vcxproj para el archivo de origen se marcará como DeploymentContent o ExcludedFromBuild para los valores 1 y 0, respectivamente.",
	"assets/variables.json.VS_DEPLOYMENT_LOCATION": "Especifica la ubicación de implementación de un archivo de origen de contenido con una aplicación de Windows Phone o Microsoft Store cuando se compila con un generador de Visual Studio <cmake-generators(7)>. Esta propiedad solo es aplicable cuando se usa VS_DEPLOYMENT_CONTENT. El valor representa la ruta de acceso relativa al paquete de la aplicación y se aplica a todas las configuraciones.",
	"assets/variables.json.VS_INCLUDE_IN_VSIX": "Propiedad booleana para especificar si el archivo debe incluirse en un paquete de extensiones de integración de Visual Studio (VSIX). Esta opción es necesaria para el desarrollo de extensiones de Visual Studio.",
	"assets/variables.json.VS_RESOURCE_GENERATOR": "Esta propiedad permite especificar el generador de recursos que se va a usar en este archivo. El valor predeterminado es PublicResXFileCodeGenerator, si no se establece ninguno.",
	"assets/variables.json.VS_SETTINGS": "Establece cualquier metadatos de elemento en un archivo.",
	"assets/variables.json.VS_SHADER_DISABLE_OPTIMIZATIONS": "Deshabilita las optimizaciones del compilador para un archivo .hlsl de origen. Esto agrega la marca -Od a la línea de comandos para la herramienta FxCompiler. Especifique el valor true para esta propiedad a fin de deshabilitar las optimizaciones del compilador.",
	"assets/variables.json.VS_SHADER_ENABLE_DEBUG": "Habilita la información de depuración para un archivo hlsl. de origen. Esto agrega la marca -Zi a la línea de comandos para la herramienta FxCompiler. Especifique el valor true a fin de generar información de depuración para el sombreador compilado.",
	"assets/variables.json.VS_SHADER_ENTRYPOINT": "Especifica el nombre del punto de entrada para el sombreador de un archivo .hlsl de origen.",
	"assets/variables.json.VS_SHADER_FLAGS": "Establece marcas de sombreador de Visual Studio adicionales de un archivo .hlsl de código fuente.",
	"assets/variables.json.VS_SHADER_MODEL": "Especifica el modelo de sombreador de un archivo .hlsl de origen. Algunos tipos de sombreador solamente se pueden usar con los modelos de sombreador recientes",
	"assets/variables.json.VS_SHADER_OBJECT_FILE_NAME": "Especifica un nombre para el archivo de objeto sombreador compilado en un archivo .hlsl de origen. Agrega la marca -Fo a la línea de comandos para la herramienta FxCompiler.",
	"assets/variables.json.VS_SHADER_OUTPUT_HEADER_FILE": "Establece el nombre del archivo de encabezado de salida que contiene el código de objeto de un archivo .hlsl de origen.",
	"assets/variables.json.VS_SHADER_TYPE": "Establece el tipo de sombreador de Visual Studio de un archivo .hlsl de código fuente.",
	"assets/variables.json.VS_SHADER_VARIABLE_NAME": "Establece el nombre de la variable en el archivo de encabezado que contiene el código de objeto de un archivo .hlsl de origen.",
	"assets/variables.json.VS_TOOL_OVERRIDE": "Reemplaza la herramienta predeterminada de Visual Studio que se va a aplicar al archivo de origen con una nueva herramienta que no se basa en la extensión del archivo.",
	"assets/variables.json.VS_XAML_TYPE": "Marque un archivo de código de fuente de lenguaje XAML como tipo distinto al valor Page predeterminado. El uso más habitual es establecer el archivo App.xaml predeterminado como ApplicationDefinition.",
	"assets/variables.json.WRAP_EXCLUDE": "Excluye este archivo de origen de cualquier técnica de ajuste de código.",
	"assets/variables.json.XCODE_EXPLICIT_FILE_TYPE": "Establece el atributo explicitFileType de Xcode en su referencia a un archivo de origen. CMake calcula un valor predeterminado en función de la extensión de archivo, pero se le puede indicar de forma explícita con esta propiedad.",
	"assets/variables.json.XCODE_FILE_ATTRIBUTES": "Agrega valores a la configuración ATTRIBUTES de Xcode en su referencia a un archivo de código fuente. Esto se puede usar, entre otras cosas, para establecer el rol en un archivo .mig:",
	"assets/variables.json.XCODE_LAST_KNOWN_FILE_TYPE": "Establece el atributo lastKnownFileType de Xcode en su referencia a un archivo de origen. CMake calcula un valor predeterminado en función de la extensión de archivo, pero se le puede indicar de forma explícita con esta propiedad.",
	"assets/variables.json.ATTACHED_FILES": "Asocia una lista de archivos al envío de un panel.",
	"assets/variables.json.ATTACHED_FILES_ON_FAIL": "Asocia una lista de archivos al envío de un panel si la prueba genera un error.",
	"assets/variables.json.COST": "Esta propiedad describe el costo de una prueba. Cuando están habilitada las pruebas paralelas, las pruebas del conjunto correspondiente se ejecutarán en orden descendente de costo. Los proyectos pueden definir explícitamente el costo de una prueba al establecer esta propiedad en un valor de punto flotante.",
	"assets/variables.json.DEPENDS": "Especifica que esta prueba solo debe ejecutarse después de la lista de pruebas especificada.",
	"assets/variables.json.DISABLED": "Si se establece en True, la prueba se omitirá y su estado será \"Sin ejecutar\". Una prueba DISABLED no se contabilizará en el número total de pruebas y su estado de finalización se notificará a CDash como Deshabilitado.",
	"assets/variables.json.ENVIRONMENT": "Especifica las variables de entorno que deben definirse para la ejecución de una prueba.",
	"assets/variables.json.ENVIRONMENT_MODIFICATION": "Especifique las variables de entorno que se deben modificar para ejecutar una prueba. Tenga en cuenta que las operaciones realizadas por esta propiedad se realizan después de que la propiedad ENVIRONMENT ya se haya aplicado.",
	"assets/variables.json.FAIL_REGULAR_EXPRESSION": "Si la salida de la prueba (stdout o stderr) coincide con esta expresión regular, se producirá un error en la prueba, independientemente del código de salida del proceso. Las pruebas que superan el tiempo de expiración especificado por TIMEOUT producen un error independientemente de FAIL_REGULAR_EXPRESSION. Cualquier código de retorno distinto de cero o errores de prueba de nivel de sistema, incluidos errores de segmentación, anulación de señal o errores de montón, producirá un error en la prueba aunque la expresión regular no coincida.",
	"assets/variables.json.FIXTURES_CLEANUP": "Especifica una lista de los accesorios para los que la prueba se va a tratar como prueba de limpieza. Los nombres de los accesorios son distintos de los nombres de los casos de prueba y no es necesario que sean similares a los nombres de pruebas asociados a ellos.",
	"assets/variables.json.FIXTURES_REQUIRED": "Especifica una lista de los accesorios que requiere la prueba. Los nombres de los accesorios distinguen mayúsculas de minúsculas y no es necesario que sean similares a los nombres de pruebas.",
	"assets/variables.json.FIXTURES_SETUP": "Especifica una lista de los accesorios para los que la prueba se va a tratar como prueba de configuración. Los nombres de los accesorios son distintos de los nombres de los casos de prueba y no es necesario que sean similares a los nombres de pruebas asociados a ellos.",
	"assets/variables.json.GENERATED_RESOURCE_SPEC_FILE": "Ruta de acceso al archivo de especificación de recursos generado dinámicamente <ctest-resource-dynamically-generated-spec-file> generado por esta prueba.",
	"assets/variables.json.MEASUREMENT": "Especifica un valor y una medida CDASH de los que se informa para una prueba.",
	"assets/variables.json.PASS_REGULAR_EXPRESSION": "La salida de la prueba (stdout o stderr) debe coincidir con esta expresión regular para que se supere la prueba. Se omite el código de salida del proceso. Las pruebas que superan el tiempo de expiración especificado por TIMEOUT siguen produciendo un error independientemente de PASS_REGULAR_EXPRESSION. Los errores de prueba de nivel de sistema, incluidos errores de segmentación, anulación de señal o errores de montón, pueden producir un error en la prueba, incluso si PASS_REGULAR_EXPRESSION coincide.",
	"assets/variables.json.PROCESSORS": "Se establece para especificar cuántos espacios de proceso requiere esta prueba. Si no se establece, el valor predeterminado es un procesador.",
	"assets/variables.json.PROCESSOR_AFFINITY": "Se establece en un valor true para pedir a CTest que inicie el proceso de prueba con afinidad de CPU para un conjunto fijo de procesadores. Si se habilita y se admite para la plataforma actual, CTest elegirá un conjunto de procesadores para ubicarlos en la máscara de afinidad de CPU al iniciar el proceso de prueba. El número de procesadores del conjunto viene determinado por la propiedad de prueba PROCESSORS o el número de procesadores disponibles para CTest, lo que sea más pequeño. El conjunto de procesadores elegido se separa de los procesadores asignados a otras pruebas que se ejecutan simultáneamente y que también tienen habilitada la propiedad PROCESSOR_AFFINITY.",
	"assets/variables.json.REQUIRED_FILES": "Lista de archivos necesarios para ejecutar la prueba. Los nombres de archivo son relativos al valor WORKING_DIRECTORY de la prueba, a menos que se especifique una ruta de acceso absoluta.",
	"assets/variables.json.RESOURCE_GROUPS": "Especifique los recursos que requiere una prueba, agrupados de forma que sean significativos para la prueba. Vea la asignación de recursos <ctest-resource-allocation> para obtener más información sobre cómo se integra esta propiedad en la característica de asignación de recursos de CTest.",
	"assets/variables.json.RESOURCE_LOCK": "Especifica una lista de los recursos bloqueados por esta prueba.",
	"assets/variables.json.RUN_SERIAL": "Esta prueba no se ejecuta en paralelo con ninguna otra.",
	"assets/variables.json.SKIP_REGULAR_EXPRESSION": "Si la salida de la prueba (stderr o stdout) coincide con esta expresión regular, la prueba se marcará como omitida, independientemente del código de salida del proceso. Las pruebas que superan el tiempo de expiración especificado por TIMEOUT siguen produciendo un error independientemente de SKIP_REGULAR_EXPRESSION. Los errores de prueba de nivel de sistema, incluidos errores de segmentación, anulación de señal o errores de montón, pueden producir un error en la prueba incluso si la expresión regular coincide.",
	"assets/variables.json.SKIP_RETURN_CODE": "Código de retorno para marcar una prueba como omitida.",
	"assets/variables.json.TIMEOUT": "Número de segundos que se debe permitir para esta prueba.",
	"assets/variables.json.TIMEOUT_AFTER_MATCH": "Cambia la duración del tiempo de espera de una prueba después de encontrar una línea coincidente en la salida.",
	"assets/variables.json.TIMEOUT_SIGNAL_GRACE_PERIOD": "Si se establece la propiedad de prueba TIMEOUT_SIGNAL_NAME, esta propiedad especifica el número de segundos que se esperará a que finalice un proceso de prueba después de enviar la señal personalizada. De lo contrario, esta propiedad no tiene significado.",
	"assets/variables.json.TIMEOUT_SIGNAL_NAME": "Especifique una señal personalizada para enviar a un proceso de prueba cuando se alcance el tiempo de espera. Esto solo está disponible en plataformas que admitan señales POSIX. No está disponible en Windows.",
	"assets/variables.json.WILL_FAIL": "Si es true, invierte los criterios de prueba de superación o error. Las pruebas para las que WILL_FAIL es true producen un error con el código de retorno 0 y se pasan con un código de retorno distinto de cero. Las pruebas que superan el tiempo de espera especificado por TIMEOUT siguen produciendo un error independientemente de WILL_FAIL. Los errores de prueba de nivel de sistema, incluidos errores de segmentación, anulación de señal o errores de montón, pueden producir errores en la prueba, incluso si WILL_FAIL es true.",
	"assets/variables.json.WORKING_DIRECTORY": "El directorio desde el que se llamará al ejecutable de la prueba.",
	"assets/variables.json.AIX_EXPORT_ALL_SYMBOLS": "En AIX, CMake exporta automáticamente todos los símbolos de las bibliotecas compartidas y de los ejecutables con el conjunto de propiedades de destino ENABLE_EXPORTS. Deshabilite de forma explícita esta propiedad booleana para suprimir el comportamiento y no exportar ningún símbolo de forma predeterminada. En este caso, se espera que el proyecto use otros medios para exportar algunos símbolos.",
	"assets/variables.json.ALIASED_TARGET": "Nombre de un destino que tiene como alias este destino.",
	"assets/variables.json.ALIAS_GLOBAL": "Propiedad de solo lectura que indica si un destino ALIAS es visible globalmente.",
	"assets/variables.json.ANDROID_ANT_ADDITIONAL_OPTIONS": "Establece las opciones adicionales para el sistema de compilación Android Ant. Es un valor de cadena que contiene todas las opciones de la línea de comandos para la compilación de Ant. Esta propiedad se inicializa mediante el valor de la variable CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS, si se ha establecido al crear un destino.",
	"assets/variables.json.ANDROID_API": "Cuando se realiza la compilación cruzada para Android con NVIDIA Nsight Tegra Visual Studio Edition, esta propiedad establece la versión de la API de destino de Android (por ejemplo, 15). El número de versión debe ser un entero decimal positivo. La propiedad se inicializa mediante el valor de la variable CMAKE_ANDROID_API, si se ha establecido al crear un destino.",
	"assets/variables.json.ANDROID_API_MIN": "Establece la versión MÍNIMA de la API de Android (por ejemplo, 9). El número de versión debe ser un entero decimal positivo. Esta propiedad se inicializa mediante l valor de la variable CMAKE_ANDROID_API_MIN, si se ha establecido al crear un destino. El código nativo se compila con esta versión de la API.",
	"assets/variables.json.ANDROID_ARCH": "Cuando se realiza la compilación cruzada para Android con NVIDIA Nsight Tegra Visual Studio Edition, esta propiedad establece la arquitectura de destino de Android.",
	"assets/variables.json.ANDROID_ASSETS_DIRECTORIES": "Establece los directorios de recursos de Android que se van a copiar en la carpeta de recursos principales antes de la compilación. Es una propiedad de cadena que contiene las rutas de acceso del directorio separadas por punto y coma. Esta propiedad se inicializa mediante el valor de la variable CMAKE_ANDROID_ASSETS_DIRECTORIES, si se ha establecido al crear un destino.",
	"assets/variables.json.ANDROID_GUI": "Cuando se realiza la compilación cruzada para Android con NVIDIA Nsight Tegra Visual Studio Edition, esta propiedad especifica si se va a compilar un ejecutable como paquete de aplicación en Android.",
	"assets/variables.json.ANDROID_JAR_DEPENDENCIES": "Establece la propiedad Android que especifica las dependencias de JAR. Es una propiedad de valor de cadena. Esta propiedad se inicializa mediante el valor de la variable CMAKE_ANDROID_JAR_DEPENDENCIES, si se ha establecido al crear un destino.",
	"assets/variables.json.ANDROID_JAR_DIRECTORIES": "Establece la propiedad Android que especifica los directorios para buscar las bibliotecas JAR.",
	"assets/variables.json.ANDROID_JAVA_SOURCE_DIR": "Establece la propiedad Android que define los directorios raíz del código fuente de Java. Es una propiedad de cadena que contiene las rutas de acceso del directorio separadas por punto y coma. Esta propiedad se inicializa mediante el valor de la variable CMAKE_ANDROID_JAVA_SOURCE_DIR, si se ha establecido al crear un destino.",
	"assets/variables.json.ANDROID_NATIVE_LIB_DEPENDENCIES": "Establece la propiedad Android que especifica las dependencias de .so. Es una propiedad de cadena.",
	"assets/variables.json.ANDROID_NATIVE_LIB_DIRECTORIES": "Establece la propiedad Android que especifica los directorios para buscar las bibliotecas .so.",
	"assets/variables.json.ANDROID_PROCESS_MAX": "Establece la propiedad Android que define el número máximo de procesos del compilador de Android NDK en paralelo (por ejemplo, 4). Esta propiedad se inicializa mediante el valor de la variable CMAKE_ANDROID_PROCESS_MAX, si se ha establecido al crear un destino.",
	"assets/variables.json.ANDROID_PROGUARD": "Cuando esta propiedad se establece en true, permite que la herramienta ProGuard pueda reducir, optimizar y ofuscar el código al eliminar el código no usado y cambiar el nombre de las clases, campos y métodos con nombres de semántica complicada. Esta propiedad se inicializa mediante el valor de la variable CMAKE_ANDROID_PROGUARD, si se ha establecido al crear un destino.",
	"assets/variables.json.ANDROID_PROGUARD_CONFIG_PATH": "Establece la propiedad Android que especifica la ubicación del archivo de configuración de ProGuard. Déjelo en blanco para usar la opción predeterminada. Es una propiedad de cadena que contiene la ruta de acceso al archivo de configuración de ProGuard. Esta propiedad se inicializa mediante el valor de la variable CMAKE_ANDROID_PROGUARD_CONFIG_PATH, si se ha establecido al crear un destino.",
	"assets/variables.json.ANDROID_SECURE_PROPS_PATH": "Establece la propiedad Android que indica la ubicación del archivo de propiedades seguras. Es una propiedad de cadena que contiene la ruta de acceso del archivo. Esta propiedad se inicializa mediante el valor de la variable CMAKE_ANDROID_SECURE_PROPS_PATH, si se ha establecido al crear un destino.",
	"assets/variables.json.ANDROID_SKIP_ANT_STEP": "Establece la propiedad Android que define si se debe omitir o no el paso de compilación de Ant. Es una propiedad booleana que se inicializa mediante el valor de la variable CMAKE_ANDROID_SKIP_ANT_STEP, si se ha establecido al crear un destino.",
	"assets/variables.json.ANDROID_STL_TYPE": "Cuando se realiza la compilación cruzada para Android con NVIDIA Nsight Tegra Visual Studio Edition, esta propiedad especifica el tipo de compatibilidad de STL para el proyecto. Es una propiedad de cadena que puede establecerse en uno de los valores siguientes:",
	"assets/variables.json.ARCHIVE_OUTPUT_DIRECTORY": "Directorio de salida en el que se van a compilar los archivos de destino XXX.",
	"assets/variables.json.ARCHIVE_OUTPUT_DIRECTORY_CONFIG": "Directorio de salida por configuración para archivos de destino ARCHIVE.",
	"assets/variables.json.ARCHIVE_OUTPUT_NAME": "Nombre de salida para los archivos de destino XXX.",
	"assets/variables.json.ARCHIVE_OUTPUT_NAME_CONFIG": "Nombre de salida por configuración para archivos de destino ARCHIVE.",
	"assets/variables.json.AUTOGEN_BETTER_GRAPH_MULTI_CONFIG": "AUTOGEN_BETTER_GRAPH_MULTI_CONFIG es una propiedad booleana que se puede establecer en un destino para tener un gráfico de dependencias mejor para los generadores de varias configuraciones. Cuando esta propiedad está habilitada, CMake generará más destinos por configuración. Por lo tanto, el gráfico de dependencias será más preciso para los generadores de varias configuraciones y se evitará tener que volver a compilar en algunos casos.",
	"assets/variables.json.AUTOGEN_BUILD_DIR": "Directorio en el que AUTOMOC, AUTOUIC y AUTORCC generan archivos para el destino.",
	"assets/variables.json.AUTOGEN_COMMAND_LINE_LENGTH_MAX": "Límite de longitud de la línea de comandos para destinos de autogen, es decir, moc o uíc, que desencadena el uso de archivos de respuesta en Windows en lugar de pasar todos los argumentos a la línea de comandos.",
	"assets/variables.json.AUTOGEN_ORIGIN_DEPENDS": "Modificador para reenviar las dependencias de origen y destino al destino <ORIGIN>_autogen correspondiente.",
	"assets/variables.json.AUTOGEN_PARALLEL": "Número de procesos moc o uic paralelos que se van a iniciar al usar AUTOMOC y AUTOUIC.",
	"assets/variables.json.AUTOGEN_TARGET_DEPENDS": "Dependencias de destino adicionales del destino <ORIGIN>_autogen correspondiente.",
	"assets/variables.json.AUTOGEN_USE_SYSTEM_INCLUDE": "AUTOGEN_USE_SYSTEM_INCLUDE es una propiedad booleana que se puede establecer en un destino para indicar que el directorio de inclusión de destino de autogen se debe agregar como directorio de inclusión del sistema o como directorio de inclusión normal al destino.",
	"assets/variables.json.AUTOMOC": "Indica si el destino debe procesarse con auto-moc (para proyectos de Qt).",
	"assets/variables.json.AUTOMOC_COMPILER_PREDEFINES": "Valor booleano que AUTOMOC usa para determinar si debe generarse el archivo moc_predefs.h de definiciones previas del compilador.",
	"assets/variables.json.AUTOMOC_DEPEND_FILTERS": "Definiciones de filtro que AUTOMOC usa para extraer los nombres de archivo de un archivo de origen, que se registran como dependencias adicionales para el archivo moc del archivo de origen.",
	"assets/variables.json.AUTOMOC_EXECUTABLE": "AUTOMOC_EXECUTABLE es la ruta de acceso que apunta al archivo ejecutable de moc que se va a usar con los archivos habilitados para AUTOMOC. Si se establece esta propiedad, CMake omite la detección automática del binario de moc y las pruebas de comprobación se ejecutan normalmente para garantizar que el binario esté disponible y funcione según lo esperado.",
	"assets/variables.json.AUTOMOC_MACRO_NAMES": "Lista separada por punto y coma de los nombres de macro usados por AUTOMOC para determinar si un archivo de C++ debe ser procesado por el administrador de macros.",
	"assets/variables.json.AUTOMOC_MOC_OPTIONS": "Opciones adicionales para moc cuando se usa AUTOMOC.",
	"assets/variables.json.AUTOMOC_PATH_PREFIX": "Cuando esta propiedad se establece en ON, CMake generará la opción de prefijo de ruta de acceso -p para moc en los destinos de Qt habilitados para AUTOMOC.",
	"assets/variables.json.AUTORCC": "Indica si el destino debe procesarse con auto-rcc (para proyectos de Qt).",
	"assets/variables.json.AUTORCC_EXECUTABLE": "AUTORCC_EXECUTABLE es la ruta de acceso que apunta al archivo ejecutable de rcc que se va a usar con los archivos habilitados para AUTORCC. Si se establece esta propiedad, CMake omite la detección automática del binario de rcc y las pruebas de comprobación se ejecutan normalmente para garantizar que el binario esté disponible y funcione según lo esperado.",
	"assets/variables.json.AUTOUIC": "Indica si el destino debe procesarse con auto-uic (para proyectos de Qt).",
	"assets/variables.json.AUTOUIC_EXECUTABLE": "AUTOUIC_EXECUTABLE es la ruta de acceso que apunta al archivo ejecutable de uic que se va a usar con los archivos habilitados para AUTOUIC. Si se establece esta propiedad, CMake omite la detección automática del binario de uic y las pruebas de comprobación se ejecutan normalmente para garantizar que el binario esté disponible y funcione según lo esperado.",
	"assets/variables.json.AUTOUIC_SEARCH_PATHS": "Lista de rutas de acceso de búsqueda que AUTOUIC usa para buscar los archivos .ui de inclusión.",
	"assets/variables.json.BUILD_RPATH": "Lista separada por punto y coma que especifica las entradas de ruta de acceso en tiempo de ejecución (RPATH) que se van a agregar a los archivos binarios vinculados en el árbol de compilación (para las plataformas que lo admiten). De forma predeterminada, CMake establece la ruta de acceso en tiempo de ejecución de los archivos binarios en el árbol de compilación para que contenga las rutas de búsqueda que sabe que son necesarias para encontrar las bibliotecas compartidas que vinculan. Los proyectos pueden establecer BUILD_RPATH para especificar rutas de búsqueda adicionales.",
	"assets/variables.json.BUILD_RPATH_USE_ORIGIN": "Indica si se deben usar rutas de acceso relativas para la ruta RPATH de compilación.",
	"assets/variables.json.BUILD_WITH_INSTALL_NAME_DIR": "BUILD_WITH_INSTALL_NAME_DIR es un valor booleano que especifica si el valor install_name de macOS de un destino en el árbol de compilación usa el directorio que INSTALL_NAME_DIR determina. Esta configuración solo se aplica a los destinos de macOS.",
	"assets/variables.json.BUILD_WITH_INSTALL_RPATH": "BUILD_WITH_INSTALL_RPATH es un valor booleano que especifica si el destino del árbol de compilación se va a vincular con INSTALL_RPATH. Tiene prioridad sobre SKIP_BUILD_RPATH y evita la necesidad de volver a vincular antes de la instalación.",
	"assets/variables.json.BUNDLE": "Este destino es un elemento CFBundle en macOS.",
	"assets/variables.json.BUNDLE_EXTENSION": "Extensión de archivo que se usa para nombrar un destino BUNDLE, FRAMEWORK o MACOSX_BUNDLE en iOS y macOS.",
	"assets/variables.json.COMMON_LANGUAGE_RUNTIME": "Al establecer esta propiedad de destino, el destino se configura para compilar con compatibilidad con C++/CLI.",
	"assets/variables.json.COMPATIBLE_INTERFACE_BOOL": "Propiedades que deben ser compatibles con su interfaz de vínculo.",
	"assets/variables.json.COMPATIBLE_INTERFACE_NUMBER_MAX": "Propiedades para las que se usará su valor máximo de la interfaz de vínculo.",
	"assets/variables.json.COMPATIBLE_INTERFACE_NUMBER_MIN": "Propiedades cuyo valor mínimo de la interfaz de vínculo se usará.",
	"assets/variables.json.COMPATIBLE_INTERFACE_STRING": "Propiedades que deben tener compatibilidad de cadena con su interfaz de vínculo.",
	"assets/variables.json.COMPILE_FEATURES": "Características del compilador habilitadas para este destino.",
	"assets/variables.json.COMPILE_PDB_NAME": "Nombre de salida para el archivo .pdb de símbolos de depuración de MS que genera el compilador durante la compilación de archivos de origen.",
	"assets/variables.json.COMPILE_PDB_NAME_CONFIG": "Nombre de salida por configuración para el archivo .pdb de símbolos de depuración de MS que genera el compilador durante la compilación de archivos de origen.",
	"assets/variables.json.COMPILE_PDB_OUTPUT_DIRECTORY": "Directorio de salida para el archivo .pdb de símbolos de depuración de MS que genera el compilador durante la compilación de archivos de origen.",
	"assets/variables.json.COMPILE_PDB_OUTPUT_DIRECTORY_CONFIG": "Directorio de salida por configuración para el archivo .pdb de símbolos de depuración de MS que genera el compilador durante la compilación de archivos de origen.",
	"assets/variables.json.COMPILE_WARNING_AS_ERROR": "Especifica si se deben tratar las advertencias en la compilación como errores. Si está habilitada, agrega una marca para tratar las advertencias en la compilación como errores. Si se proporciona la opción cmake --compile-no-warning-as-error en la línea de comandos de cmake, se omite esta propiedad.",
	"assets/variables.json.CONFIG_OUTPUT_NAME": "Nombre base del archivo de destino por configuración. Use OUTPUT_NAME_ en su lugar.",
	"assets/variables.json.CONFIG_POSTFIX": "Elemento Postfix que se va a anexar al nombre del archivo de destino para la configuración <CONFIG>.",
	"assets/variables.json.CROSSCOMPILING_EMULATOR": "Usa el emulador dado para ejecutar los archivos correspondientes que se crean al realizar la compilación cruzada. Este comando se agregará como prefijo a los comandos add_test, add_custom_command y add_custom_target para los ejecutables del sistema de destino compilado.",
	"assets/variables.json.CUDA_ARCHITECTURES": "Lista de arquitecturas para la que se va a generar código de dispositivo.",
	"assets/variables.json.CUDA_CUBIN_COMPILATION": "Compila los orígenes de CUDA en archivos .cubin en lugar de archivos .obj en las bibliotecas de objetos.",
	"assets/variables.json.CUDA_EXTENSIONS": "Valor booleano que especifica si se solicitan extensiones específicas del compilador.",
	"assets/variables.json.CUDA_FATBIN_COMPILATION": "Compila los orígenes de CUDA en archivos .fatbin en lugar de archivos .obj en las bibliotecas de objetos.",
	"assets/variables.json.CUDA_OPTIX_COMPILATION": "Compila los orígenes de CUDA en archivos .optixir en lugar de archivos .obj en las bibliotecas de objetos.",
	"assets/variables.json.CUDA_PTX_COMPILATION": "Compila los orígenes de CUDA en archivos .ptx en lugar de archivos .obj en las bibliotecas de objetos.",
	"assets/variables.json.CUDA_RESOLVE_DEVICE_SYMBOLS": "Solo CUDA: habilita la vinculación de dispositivos para el destino de biblioteca específico cuando sea necesario.",
	"assets/variables.json.CUDA_RUNTIME_LIBRARY": "Seleccione la biblioteca en tiempo de ejecución de CUDA para que la usen los compiladores destinados al lenguaje CUDA.",
	"assets/variables.json.CUDA_SEPARABLE_COMPILATION": "Solo CUDA: habilita la compilación por separado del código de dispositivo",
	"assets/variables.json.CUDA_STANDARD": "Estándar de CUDA/C++ cuyas características se requieren para compilar este destino.",
	"assets/variables.json.CUDA_STANDARD_REQUIRED": "Valor booleano que describe si el valor de CUDA_STANDARD es un requisito.",
	"assets/variables.json.CXX_EXTENSIONS": "Valor booleano que especifica si se solicitan extensiones específicas del compilador.",
	"assets/variables.json.CXX_MODULE_DIRS": "Lista separada por signos de punto y coma de los directorios base del conjunto de módulos de C++ predeterminado del destino (es decir, el conjunto de archivos con nombre y tipo CXX_MODULES). La propiedad admite expresiones de generador <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_DIRS_NAME": "Lista separada por punto y coma de los directorios base del conjunto de módulos de C++ <NAME> del destino, que tiene el tipo de conjunto CXX_MODULES. La propiedad admite expresiones de generador <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_SET": "Lista separada por signos de punto y coma de los archivos del conjunto de módulos de C++ predeterminado del destino (es decir, el conjunto de archivos con el nombre y tipo CXX_MODULES). Si alguna de las rutas de acceso es relativa, se calcula en relación con el directorio de origen del destino. La propiedad admite expresiones de generador <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_SETS": "Lista de solo lectura de los conjuntos de módulos de C++ PRIVATE y PUBLIC del destino (es decir, todos los conjuntos de archivos con el tipo CXX_MODULES). Los archivos enumerados en estos conjuntos de archivos se tratan como archivos de código fuente con fines de integración del IDE.",
	"assets/variables.json.CXX_MODULE_SET_NAME": "Lista separada por signos de punto y coma de los archivos del conjunto de módulos de C++ <NAME> del destino, que tiene el tipo de conjunto CXX_MODULES. Si alguna de las rutas de acceso es relativa, se calcula en relación con el directorio de origen del destino. La propiedad admite expresiones de generador <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_STD": "CXX_MODULE_STD es un valor booleano que especifica si el destino puede usar std de importación; sus orígenes de C++ o no.",
	"assets/variables.json.CXX_STANDARD": "Estándar de C++ cuyas características se requieren para compilar este destino.",
	"assets/variables.json.CXX_STANDARD_REQUIRED": "Valor booleano que describe si el valor de CXX_STANDARD es un requisito.",
	"assets/variables.json.C_EXTENSIONS": "Valor booleano que especifica si se solicitan extensiones específicas del compilador.",
	"assets/variables.json.C_STANDARD": "Estándar de C cuyas características se requieren para compilar este destino.",
	"assets/variables.json.C_STANDARD_REQUIRED": "Valor booleano que describe si el valor de C_STANDARD es un requisito.",
	"assets/variables.json.DEBUG_POSTFIX": "Consulte la propiedad de destino <CONFIG>_POSTFIX.",
	"assets/variables.json.DEFINE_SYMBOL": "Define un símbolo al compilar los orígenes de este destino.",
	"assets/variables.json.DEPLOYMENT_ADDITIONAL_FILES": "Establezca los AdditionalFiles del proyecto WinCE en DeploymentTool en archivos .vcproj generados por los generadores de Visual Studio. Esto es útil cuando se quiere depurar en un dispositivo WinCE remoto. Especifique los archivos adicionales que se copiarán en el dispositivo. Por ejemplo:",
	"assets/variables.json.DEPLOYMENT_REMOTE_DIRECTORY": "Establezca el proyecto de WinCE RemoteDirectory en DeploymentTool y RemoteExecutable en DebuggerTool en archivos .vcproj generados por los generadores de Visual Studio. Esto es útil cuando se quiere depurar en un dispositivo WinCE remoto. Por ejemplo:",
	"assets/variables.json.DEPRECATION": "Mensaje de desuso del desarrollador del destino importado.",
	"assets/variables.json.DISABLE_PRECOMPILE_HEADERS": "Deshabilite la precompilación de los archivos de encabezado que especifica la propiedad PRECOMPILE_HEADERS.",
	"assets/variables.json.DLL_NAME_WITH_SOVERSION": "Esta propiedad controla si la propiedad de destino SOVERSION se agrega al nombre de archivo de los nombres de archivo DLL generados para la plataforma Windows, que se selecciona cuando se establece la variable WIN32.",
	"assets/variables.json.DOTNET_SDK": "Especifique el SDK de .NET para proyectos de C#. Por ejemplo: Microsoft .NET.Sdk.",
	"assets/variables.json.DOTNET_TARGET_FRAMEWORK": "Especifique la plataforma de destino de .NET.",
	"assets/variables.json.DOTNET_TARGET_FRAMEWORK_VERSION": "Especifica la versión de la plataforma de destino de .NET.",
	"assets/variables.json.EchoString": "Mensaje que se muestra cuando el destino se ha compilado.",
	"assets/variables.json.ENABLE_EXPORTS": "Especifique si un archivo ejecutable o una biblioteca compartida exporta símbolos.",
	"assets/variables.json.EXCLUDE_FROM_DEFAULT_BUILD": "Excluya el destino de Compilar solución.",
	"assets/variables.json.EXCLUDE_FROM_DEFAULT_BUILD_CONFIG": "Versión por configuración de la exclusión de destino de Compilar solución.",
	"assets/variables.json.EXPORT_COMPILE_COMMANDS": "Habilita o deshabilita la salida de comandos de compilación durante la generación para un destino.",
	"assets/variables.json.EXPORT_FIND_PACKAGE_NAME": "Controle el nombre del paquete asociado a un destino de dependencia al exportar una llamada de find_dependency en la instalación o exportación. Se puede usar para asignar un nombre de paquete a un paquete compilado por CMake y exportado, o para invalidar el paquete en la llamada find_package que creó el destino.",
	"assets/variables.json.EXPORT_NAME": "Nombre exportado para los archivos de destino.",
	"assets/variables.json.EXPORT_NO_SYSTEM": "Esta propiedad afecta al comportamiento de los comandos de instalación y exportación cuando instalan o exportan el destino, respectivamente. Cuando EXPORT_NO_SYSTEM se establece en true, esos comandos generan un destino importado con la propiedad SYSTEM establecida en false.",
	"assets/variables.json.EXPORT_PROPERTIES": "Enumera las propiedades adicionales que se van a exportar para un destino.",
	"assets/variables.json.FOLDER": "Para los IDE que presentan destinos mediante una jerarquía de carpetas, esta propiedad especifica el nombre de la carpeta en la que se colocará el destino. Para anidar carpetas, use valores FOLDER, como GUI/Cuadros de diálogo con caracteres / que separen los niveles de carpeta. Los destinos sin propiedad FOLDER aparecerán como entidades de nivel superior. Los destinos con el mismo valor de propiedad FOLDER aparecerán en la misma carpeta que los elementos del mismo nivel.",
	"assets/variables.json.Fortran_BUILDING_INSTRINSIC_MODULES": "Indica al preprocesador de CMake Fortran que el destino está compilando elementos intrínsecos de Fortran para compilar un compilador de Fortran.",
	"assets/variables.json.Fortran_MODULE_DIRECTORY": "Especifica el directorio de salida para los módulos de Fortran que el destino proporciona.",
	"assets/variables.json.FRAMEWORK": "Compila una biblioteca SHARED o STATIC como agrupación de marcos en iOS y macOS.",
	"assets/variables.json.FRAMEWORK_MULTI_CONFIG_POSTFIX_CONFIG": "Postfijo que se debe anexar al nombre de archivo de marco para la configuración <CONFIG> cuando se usa un generador de varias configuraciones (como Xcode y Ninja Multi-Config).",
	"assets/variables.json.FRAMEWORK_VERSION": "Versión de un marco creado con la propiedad de destino FRAMEWORK (por ejemplo, A).",
	"assets/variables.json.GENERATOR_FILE_NAME": "Archivo del generador para este destino.",
	"assets/variables.json.GHS_INTEGRITY_APP": "Valor booleano ON/OFF para determinar si un destino ejecutable debe tratarse como aplicación de integridad.",
	"assets/variables.json.GHS_NO_SOURCE_GROUP_FILE": "Valor booleano ON/OFF para controlar si el archivo del proyecto de un destino debe ser un único archivo o varios archivos.",
	"assets/variables.json.GNUtoMS": "Convierte la biblioteca de importación GNU (.dll.a) a formato MS (.lib).",
	"assets/variables.json.HAS_CXX": "Vincula el destino con la herramienta del enlazador de C++ (obsoleta).",
	"assets/variables.json.HEADER_DIRS": "Lista separada por signos de punto y coma de los directorios base del conjunto de encabezados (es decir, el conjunto de archivos con el nombre y tipo HEADERS). La propiedad admite expresiones de generador <cmake-generator-expressions(7)>.",
	"assets/variables.json.HEADER_DIRS_NAME": "Lista separada por punto y coma de los directorios base del conjunto de encabezados <NAME> del destino, que tiene el tipo de conjunto HEADERS. La propiedad admite expresiones de generador <cmake-generator-expressions(7)>.",
	"assets/variables.json.HEADER_SET": "Lista separada por signos de punto y coma de los archivos del conjunto de encabezados de destino (es decir, el conjunto de archivos con el nombre y tipo HEADERS). Si alguna de las rutas de acceso es relativa, se calculan en relación con el directorio de origen del destino. La propiedad admite expresiones de generador <cmake-generator-expressions(7)>.",
	"assets/variables.json.HEADER_SETS": "Lista de solo lectura de los conjuntos de encabezados PRIVATE y PUBLIC del destino (es decir, todos los conjuntos de archivos con el tipo HEADERS). Los archivos enumerados en estos conjuntos de archivos se tratan como archivos de origen para la integración IDE. Los archivos también tienen su propiedad de HEADER_FILE_ONLY establecida en TRUE.",
	"assets/variables.json.HEADER_SET_NAME": "Lista separada por signos de punto y coma de los archivos del conjunto de encabezados de <NAME> de destino, que tiene el tipo de conjunto HEADERS. Si alguna de las rutas de acceso es relativa, se calculan en relación con el directorio de origen del destino. La propiedad admite expresiones de generador <cmake-generator-expressions(7)>.",
	"assets/variables.json.HIP_ARCHITECTURES": "Lista de arquitecturas de GPU para las que se va a generar código de dispositivo. Los nombres de arquitectura se interpretan en función de CMAKE_HIP_PLATFORM.",
	"assets/variables.json.HIP_EXTENSIONS": "Valor booleano que especifica si se solicitan extensiones específicas del compilador.",
	"assets/variables.json.HIP_STANDARD": "El estándar HIP/C++ solicitó compilar este destino.",
	"assets/variables.json.HIP_STANDARD_REQUIRED": "Valor booleano que describe si el valor de HIP_STANDARD es un requisito.",
	"assets/variables.json.IMPORTED": "Indicación de solo lectura que determina si un destino es IMPORTED.",
	"assets/variables.json.IMPORTED_COMMON_LANGUAGE_RUNTIME": "Propiedad para definir si el destino usa C++/ CLI.",
	"assets/variables.json.IMPORTED_CONFIGURATIONS": "Configuraciones proporcionadas para un destino importado.",
	"assets/variables.json.IMPORTED_CXX_MODULES_COMPILE_DEFINITIONS": "Definiciones del preprocesador para compilar orígenes de módulo de C++ de un destino IMPORTED.",
	"assets/variables.json.IMPORTED_CXX_MODULES_COMPILE_FEATURES": "Características del compilador habilitadas para los módulos de C++ de este destino IMPORTED.",
	"assets/variables.json.IMPORTED_CXX_MODULES_COMPILE_OPTIONS": "Lista de opciones que se pasan al compilador para los módulos de C++ de este destino IMPORTED.",
	"assets/variables.json.IMPORTED_CXX_MODULES_INCLUDE_DIRECTORIES": "Lista de directorios de búsqueda de archivos de inclusión del preprocesador al compilar módulos de C++ para destinos IMPORTED.",
	"assets/variables.json.IMPORTED_CXX_MODULES_LINK_LIBRARIES": "Lista de dependencias directas que se usarán para los requisitos de uso de los módulos de C++ en los módulos de C++ del destino.",
	"assets/variables.json.IMPORTED_GLOBAL": "Indicación de si un destino IMPORTED es visible globalmente.",
	"assets/variables.json.IMPORTED_IMPLIB": "Ruta de acceso completa a la biblioteca de importación para un destino IMPORTED.",
	"assets/variables.json.IMPORTED_IMPLIB_CONFIG": "Versión específica de <CONFIG> de la propiedad IMPORTED_IMPLIB.",
	"assets/variables.json.IMPORTED_LIBNAME": "Especifica el nombre de la biblioteca de vínculos para una biblioteca de interfaz importada.",
	"assets/variables.json.IMPORTED_LIBNAME_CONFIG": "Versión específica de <CONFIG> de la propiedad IMPORTED_LIBNAME.",
	"assets/variables.json.IMPORTED_LINK_DEPENDENT_LIBRARIES": "Bibliotecas compartidas dependientes de una biblioteca compartida importada.",
	"assets/variables.json.IMPORTED_LINK_DEPENDENT_LIBRARIES_CONFIG": "Versión específica de <CONFIG> de IMPORTED_LINK_DEPENDENT_LIBRARIES.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LANGUAGES": "Lenguajes compilados en una biblioteca estática IMPORTED.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LANGUAGES_CONFIG": "Versión específica de <CONFIG> de IMPORTED_LINK_INTERFACE_LANGUAGES.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LIBRARIES": "Interfaz de vínculos transitivos de un destino IMPORTED.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LIBRARIES_CONFIG": "Versión específica de <CONFIG> de IMPORTED_LINK_INTERFACE_LIBRARIES.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_MULTIPLICITY": "Recuento de repeticiones de los ciclos de bibliotecas estáticas IMPORTED.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_MULTIPLICITY_CONFIG": "Versión específica de <CONFIG> de IMPORTED_LINK_INTERFACE_MULTIPLICITY.",
	"assets/variables.json.IMPORTED_LOCATION": "Ruta de acceso completa al archivo principal en disco para un destino IMPORTED.",
	"assets/variables.json.IMPORTED_LOCATION_CONFIG": "Versión específica de <CONFIG> de la propiedad IMPORTED_LOCATION.",
	"assets/variables.json.IMPORTED_NO_SONAME": "Especifica que un destino de biblioteca compartida IMPORTED no tiene soname.",
	"assets/variables.json.IMPORTED_NO_SONAME_CONFIG": "Versión específica de <CONFIG> de la propiedad IMPORTED_NO_SONAME.",
	"assets/variables.json.IMPORTED_NO_SYSTEM": "Si se establece IMPORTED_NO_SYSTEM en true en un destino importado, se especifica que no es un destino del sistema. Esto tiene los siguientes efectos:",
	"assets/variables.json.IMPORTED_OBJECTS": "Lista separada por signos de punto y coma de las rutas de acceso absolutas a los archivos de objeto en disco para una biblioteca de objetos importada.",
	"assets/variables.json.IMPORTED_OBJECTS_CONFIG": "Versión específica de <CONFIG> de la propiedad IMPORTED_OBJECTS.",
	"assets/variables.json.IMPORTED_SONAME": "Valor de soname de un destino IMPORTED del tipo de biblioteca compartida.",
	"assets/variables.json.IMPORTED_SONAME_CONFIG": "Versión específica de <CONFIG> de la propiedad IMPORTED_SONAME.",
	"assets/variables.json.IMPORT_PREFIX": "Elemento que aparece antes del nombre de la biblioteca de importación.",
	"assets/variables.json.IMPORT_SUFFIX": "Elemento que aparece después del nombre de la biblioteca de importación.",
	"assets/variables.json.INSTALL_NAME_DIR": "Nombre de directorio para los destinos instalados en las plataformas de Apple.",
	"assets/variables.json.INSTALL_REMOVE_ENVIRONMENT_RPATH": "Controla si las rutas rpath definidas por la cadena de herramientas deben quitarse durante la instalación.",
	"assets/variables.json.INSTALL_RPATH": "Ruta rpath que se va a usar para los destinos instalados.",
	"assets/variables.json.INSTALL_RPATH_USE_LINK_PATH": "Agrega rutas de acceso a la búsqueda del enlazador y a la ruta rpath instalada.",
	"assets/variables.json.INTERFACE_AUTOMOC_MACRO_NAMES": "Lista separada por punto y coma de nombres de macro para AUTOMOC que se propagará a los consumidores.",
	"assets/variables.json.INTERFACE_AUTOUIC_OPTIONS": "Lista de opciones de la interfaz que se van a pasar a uic.",
	"assets/variables.json.INTERFACE_COMPILE_DEFINITIONS": "Lista de requisitos de property_name de tipo público para una biblioteca.",
	"assets/variables.json.INTERFACE_COMPILE_FEATURES": "Lista de requisitos de property_name de tipo público para una biblioteca.",
	"assets/variables.json.INTERFACE_COMPILE_OPTIONS": "Lista de requisitos de property_name de tipo público para una biblioteca.",
	"assets/variables.json.INTERFACE_CXX_MODULE_SETS": "Lista de solo lectura de los conjuntos de módulos de C++ PUBLIC del destino (es decir, todos los conjuntos de archivos con el tipo CXX_MODULES). Los archivos enumerados en estos conjuntos de módulos de C++ se pueden instalar y exportar con la instalación y exportación.",
	"assets/variables.json.INTERFACE_HEADER_SETS": "Lista de solo lectura de los conjuntos de encabezados INTERFACE y PUBLIC del destino (es decir, todos los conjuntos de archivos con el tipo HEADERS). Los archivos enumerados en estos conjuntos de encabezados se pueden instalar con la instalación y exportarlos mediante la instalación y exportación.",
	"assets/variables.json.INTERFACE_HEADER_SETS_TO_VERIFY": "Se usa para especificar qué conjuntos de encabezados PUBLIC e INTERFACE de un destino se deben verificar.",
	"assets/variables.json.INTERFACE_INCLUDE_DIRECTORIES": "Lista de requisitos de property_name de tipo público para una biblioteca.",
	"assets/variables.json.INTERFACE_LINK_DEPENDS": "Archivos de interfaz pública adicional de los que un binario de destino depende para la vinculación.",
	"assets/variables.json.INTERFACE_LINK_DIRECTORIES": "Lista de requisitos de property_name de tipo público para una biblioteca.",
	"assets/variables.json.INTERFACE_LINK_LIBRARIES": "Enumera las bibliotecas de interfaz pública para una biblioteca.",
	"assets/variables.json.INTERFACE_LINK_LIBRARIES_DIRECT": "Lista de bibliotecas que los consumidores de esta biblioteca deben tratar como dependencias de vínculo directo.",
	"assets/variables.json.INTERFACE_LINK_LIBRARIES_DIRECT_EXCLUDE": "Lista de bibliotecas que los consumidores de esta biblioteca no deben tratar como dependencias de vínculo directo.",
	"assets/variables.json.INTERFACE_LINK_OPTIONS": "Lista de requisitos de property_name de tipo público para una biblioteca.",
	"assets/variables.json.INTERFACE_POSITION_INDEPENDENT_CODE": "Indica si los consumidores deben crear un destino independiente de la posición.",
	"assets/variables.json.INTERFACE_PRECOMPILE_HEADERS": "Lista de archivos de encabezado de interfaz que se van a precompilar en los destinos de consumo.",
	"assets/variables.json.INTERFACE_SOURCES": "Lista de orígenes de interfaz para compilar en los destinos de consumo",
	"assets/variables.json.INTERFACE_SYSTEM_INCLUDE_DIRECTORIES": "Lista de directorios de inclusión del sistema público para una biblioteca.",
	"assets/variables.json.IOS_INSTALL_COMBINED": "Compila un destino combinado (dispositivo y simulador) al instalar.",
	"assets/variables.json.ISPC_HEADER_DIRECTORY": "Especifica el directorio de salida relativo para los encabezados ISPC que el destino proporciona.",
	"assets/variables.json.ISPC_HEADER_SUFFIX": "Especifique el sufijo de salida que se va a usar para los encabezados generados por ISPC que el destino proporciona.",
	"assets/variables.json.ISPC_INSTRUCTION_SETS": "Lista de arquitecturas de conjuntos de instrucciones para las que se va a generar código.",
	"assets/variables.json.JOB_POOL_COMPILE": "Solo Ninja: grupo que se usa para compilar.",
	"assets/variables.json.JOB_POOL_LINK": "Solo Ninja: grupo que se usa para vincular.",
	"assets/variables.json.JOB_POOL_PRECOMPILE_HEADER": "Solo Ninja: grupo que se usa para generar encabezados precompilados.",
	"assets/variables.json.LANG_CLANG_TIDY": "Esta propiedad solo se implementa cuando <LANG> es C, OBJC, OBJCXX o CXX.",
	"assets/variables.json.LANG_CLANG_TIDY_EXPORT_FIXES_DIR": "Esta propiedad solo se implementa cuando <LANG> es C, CXX, OBJC u OBJCXX y solo tiene un efecto cuando se establece <LANG>_CLANG_TIDY.",
	"assets/variables.json.LANG_COMPILER_LAUNCHER": "Esta propiedad solo se implementa cuando <LANG> es C, CXX, Fortran, HIP, ISPC, OBJC, OBJCXX o CUDA.",
	"assets/variables.json.LANG_CPPCHECK": "Esta propiedad solo se admite cuando <LANG> es C o CXX.",
	"assets/variables.json.LANG_CPPLINT": "Esta propiedad solo se admite cuando <LANG> es C o CXX.",
	"assets/variables.json.LANG_EXTENSIONS": "Las variaciones son:",
	"assets/variables.json.LANG_INCLUDE_WHAT_YOU_USE": "Esta propiedad solo se implementa cuando <LANG> es C o CXX.",
	"assets/variables.json.LANG_LINKER_LAUNCHER": "Esta propiedad solo se implementa cuando <LANG> es C, CXX, OBJC, o OBJCXX",
	"assets/variables.json.LANG_STANDARD": "Las variaciones son:",
	"assets/variables.json.LANG_STANDARD_REQUIRED": "Las variaciones son:",
	"assets/variables.json.LANG_VISIBILITY_PRESET": "Valor para las marcas de compilación de visibilidad de los símbolos",
	"assets/variables.json.LIBRARY_OUTPUT_DIRECTORY": "Directorio de salida en el que se van a compilar los archivos de destino XXX.",
	"assets/variables.json.LIBRARY_OUTPUT_DIRECTORY_CONFIG": "Directorio de salida por configuración para archivos de destino LIBRARY.",
	"assets/variables.json.LIBRARY_OUTPUT_NAME": "Nombre de salida para los archivos de destino XXX.",
	"assets/variables.json.LIBRARY_OUTPUT_NAME_CONFIG": "Nombre de salida por configuración para archivos de destino LIBRARY.",
	"assets/variables.json.LINKER_LANGUAGE": "Especifica el lenguaje cuyo compilador invocará al enlazador.",
	"assets/variables.json.LINKER_TYPE": "Especifique qué enlazador se usará para el paso de vínculo. El valor de propiedad puede usar expresiones de generador <cmake-generator-expressions(7)>.",
	"assets/variables.json.LINK_DEPENDS": "Archivos adicionales de los que un binario de destino depende para la vinculación.",
	"assets/variables.json.LINK_DEPENDS_NO_SHARED": "No establece dependencias de archivos de biblioteca compartida vinculados.",
	"assets/variables.json.LINK_FLAGS": "Marcas adicionales que se van a usar al vincular este destino, si es una biblioteca compartida, una biblioteca de módulos o un ejecutable. Las bibliotecas estáticas deben usar las propiedades STATIC_LIBRARY_OPTIONS o STATIC_LIBRARY_FLAGS.",
	"assets/variables.json.LINK_FLAGS_CONFIG": "Marcas de enlazador por configuración para un destino de biblioteca SHARED, MODULE o EXECUTABLE.",
	"assets/variables.json.LINK_INTERFACE_LIBRARIES": "Enumera las bibliotecas de interfaz pública para una biblioteca compartida o un ejecutable.",
	"assets/variables.json.LINK_INTERFACE_LIBRARIES_CONFIG": "Lista de bibliotecas de interfaz pública por configuración para un destino.",
	"assets/variables.json.LINK_INTERFACE_MULTIPLICITY": "Recuento de repeticiones de las bibliotecas STATIC con dependencias cíclicas.",
	"assets/variables.json.LINK_INTERFACE_MULTIPLICITY_CONFIG": "Recuento de repeticiones por configuración para los ciclos de bibliotecas STATIC.",
	"assets/variables.json.LINK_LIBRARIES": "Lista de dependencias de vínculos directos.",
	"assets/variables.json.LINK_LIBRARIES_ONLY_TARGETS": "Exigir que los elementos de vínculo que pueden ser nombres de destino sean realmente destinos existentes.",
	"assets/variables.json.LINK_LIBRARY_OVERRIDE": "Invalide las características de biblioteca asociadas a bibliotecas de expresiones del generador de LINK_LIBRARY. Esto se puede usar para resolver características de biblioteca incompatibles que son el resultado de especificar características diferentes para la misma biblioteca en diferentes expresiones del generador de LINK_LIBRARY.",
	"assets/variables.json.LINK_LIBRARY_OVERRIDE_LIBRARY": "Invalidar la característica de biblioteca asociada a <LIBRARY> desde expresiones del generador LINK_LIBRARY. Esto se puede usar para resolver características de biblioteca incompatibles que resultan de especificar diferentes características para <LIBRARY> en diferentes expresiones del generador de LINK_LIBRARY.",
	"assets/variables.json.LINK_SEARCH_END_STATIC": "Finaliza una línea de vínculo en la que se usan las bibliotecas estáticas del sistema.",
	"assets/variables.json.LINK_SEARCH_START_STATIC": "Asume que el enlazador busca bibliotecas estáticas de forma predeterminada.",
	"assets/variables.json.LINK_WHAT_YOU_USE": "Es una opción booleana que, cuando se establece en TRUE, ejecuta contenidos de CMAKE_LINK_WHAT_YOU_USE_CHECK variable automáticamente en el destino después de vincularse. Además, la marca del enlazador especificada por la variable CMAKE_<LANG>_LINK_WHAT_YOU_USE_FLAG se pasa al destino con el comando link para que todas las bibliotecas especificadas en la línea de comandos se enlacen al destino. Como resultado, el vínculo genera una lista de bibliotecas que no proporcionan símbolos usados por este destino, pero que se vinculan a él.",
	"assets/variables.json.LOCATION_CONFIG": "Propiedad de solo lectura que proporciona una ubicación de destino en el disco.",
	"assets/variables.json.MACHO_COMPATIBILITY_VERSION": "¿Cuál es el número de versión de compatibilidad de este destino para los binarios Mach-O?",
	"assets/variables.json.MACHO_CURRENT_VERSION": "¿Cuál es el número de versión actual de este destino para los binarios Mach-O?",
	"assets/variables.json.MACOSX_BUNDLE": "Compila un ejecutable como lote de aplicaciones en macOS o iOS.",
	"assets/variables.json.MACOSX_BUNDLE_INFO_PLIST": "Especifica una plantilla Info.plist personalizada para un lote de aplicaciones de iOS y macOS.",
	"assets/variables.json.MACOSX_FRAMEWORK_INFO_PLIST": "Especifica una plantilla Info.plist personalizada para un marco de iOS y macOS.",
	"assets/variables.json.MACOSX_RPATH": "Indica si este destino en macOS o iOS se encuentra en un entorno de ejecución que usa rutas rpath.",
	"assets/variables.json.MANUALLY_ADDED_DEPENDENCIES": "Obtiene dependencias agregadas manualmente a otros destinos de nivel superior.",
	"assets/variables.json.MAP_IMPORTED_CONFIG_CONFIG": "Asignación de la configuración del proyecto a la configuración del destino importado.",
	"assets/variables.json.MSVC_DEBUG_INFORMATION_FORMAT": "Seleccione el formato de información de depuración al establecer como destino la ABI de MSVC.",
	"assets/variables.json.MSVC_RUNTIME_LIBRARY": "Seleccione la biblioteca en tiempo de ejecución de MSVC para que la usen los compiladores destinados a la ABI de MSVC.",
	"assets/variables.json.NAME": "Nombre lógico para el destino.",
	"assets/variables.json.NO_SONAME": "Indica si se debe establecer soname al vincular una biblioteca compartida.",
	"assets/variables.json.NO_SYSTEM_FROM_IMPORTED": "No trate los directorios de inclusión de las interfaces de destinos importados consumidos como si fueran directorios del sistema.",
	"assets/variables.json.OBJCXX_EXTENSIONS": "Valor booleano que especifica si se solicitan extensiones específicas del compilador.",
	"assets/variables.json.OBJCXX_STANDARD": "Estándar de ObjC++ cuyas características se requieren para compilar este destino.",
	"assets/variables.json.OBJCXX_STANDARD_REQUIRED": "Valor booleano que describe si el valor de OBJCXX_STANDARD es un requisito.",
	"assets/variables.json.OBJC_EXTENSIONS": "Valor booleano que especifica si se solicitan extensiones específicas del compilador.",
	"assets/variables.json.OBJC_STANDARD": "Estándar de OBJC cuyas características se requieren para compilar este destino.",
	"assets/variables.json.OBJC_STANDARD_REQUIRED": "Booleano que describe si el valor de OBJC_STANDARD es un requisito.",
	"assets/variables.json.OPTIMIZE_DEPENDENCIES": "Activa la optimización de dependencias de las bibliotecas estáticas y de objetos.",
	"assets/variables.json.OSX_ARCHITECTURES": "Arquitecturas específicas del destino para macOS.",
	"assets/variables.json.OSX_ARCHITECTURES_CONFIG": "Arquitecturas binarias de iOS y macOS por configuración para un destino.",
	"assets/variables.json.OUTPUT_NAME": "Nombre de salida para los archivos de destino.",
	"assets/variables.json.OUTPUT_NAME_CONFIG": "Nombre base del archivo de destino por configuración.",
	"assets/variables.json.PCH_INSTANTIATE_TEMPLATES": "Cuando esta propiedad se establece en true, las opciones del compilador de encabezados precompilados contendrán una marca para crear instancias de las plantillas durante la generación del archivo PCH, si se admite. Esto puede mejorar considerablemente los tiempos de compilación. Se admite en Clang a partir de la versión 11.",
	"assets/variables.json.PCH_WARN_INVALID": "Cuando esta propiedad se establece en true, las opciones del compilador de encabezados de precompilación contendrán una marca que debe advertir sobre los encabezados precompilados no válidos; por ejemplo, -Winvalid-pch para el compilador GNU.",
	"assets/variables.json.PDB_NAME": "Nombre de salida para el archivo .pdb de símbolos de depuración de MS que genera el enlazador para un destino de biblioteca compartida o ejecutable.",
	"assets/variables.json.PDB_NAME_CONFIG": "Nombre de salida por configuración para el archivo .pdb de símbolos de depuración de MS que genera el enlazador para un destino de biblioteca compartida o ejecutable.",
	"assets/variables.json.PDB_OUTPUT_DIRECTORY": "Directorio de salida para el archivo .pdb de símbolos de depuración de MS que genera el enlazador para un destino de biblioteca compartida o ejecutable.",
	"assets/variables.json.PDB_OUTPUT_DIRECTORY_CONFIG": "Directorio de salida por configuración para el archivo .pdb de símbolos de depuración de MS que genera el enlazador para un destino de biblioteca compartida o ejecutable.",
	"assets/variables.json.POSITION_INDEPENDENT_CODE": "Indica si se debe crear un destino independiente de posición.",
	"assets/variables.json.POST_INSTALL_SCRIPT": "Soporte para la instalación en desuso.",
	"assets/variables.json.PRECOMPILE_HEADERS": "Lista de archivos de encabezado que se van a precompilar.",
	"assets/variables.json.PRECOMPILE_HEADERS_REUSE_FROM": "Destino desde el que se va a reutilizar el artefacto de compilación de encabezados precompilados.",
	"assets/variables.json.PREFIX": "Indica qué aparece antes del nombre de la biblioteca.",
	"assets/variables.json.PRE_INSTALL_SCRIPT": "Soporte para la instalación en desuso.",
	"assets/variables.json.PRIVATE_HEADER": "Especifica archivos de encabezado privado en un destino de biblioteca compartida FRAMEWORK.",
	"assets/variables.json.PROJECT_LABEL": "Cambia el nombre de un destino en un IDE.",
	"assets/variables.json.PUBLIC_HEADER": "Especifica archivos de encabezado público en un destino de biblioteca compartida FRAMEWORK.",
	"assets/variables.json.RESOURCE": "Especifica archivos de recursos en un elemento FRAMEWORK o BUNDLE.",
	"assets/variables.json.RUNTIME_OUTPUT_DIRECTORY": "Directorio de salida en el que se van a compilar los archivos de destino XXX.",
	"assets/variables.json.RUNTIME_OUTPUT_DIRECTORY_CONFIG": "Directorio de salida por configuración para archivos de destino RUNTIME.",
	"assets/variables.json.RUNTIME_OUTPUT_NAME": "Nombre de salida para los archivos de destino XXX.",
	"assets/variables.json.RUNTIME_OUTPUT_NAME_CONFIG": "Nombre de salida por configuración para archivos de destino RUNTIME.",
	"assets/variables.json.SKIP_BUILD_RPATH": "Indica si las rutas rpath deben usarse para el árbol de compilación.",
	"assets/variables.json.SOURCES": "Especifica la lista de rutas de acceso a los archivos de origen para el destino. Todos los comandos siguientes se establecen o agregan a la propiedad de destino SOURCES y son la forma habitual de manipularlos:",
	"assets/variables.json.SOVERSION": "Número de versión de ABI de un destino de la biblioteca compartida.",
	"assets/variables.json.STATIC_LIBRARY_FLAGS": "Marcas de archivador (o bibliotecario de MSVC) para un destino de biblioteca estática. Los destinos que son bibliotecas compartidas, módulos o ejecutables deben usar las propiedades de destino LINK_OPTIONS o LINK_FLAGS.",
	"assets/variables.json.STATIC_LIBRARY_FLAGS_CONFIG": "Marcas de archivador (o bibliotecario de MSVC) por configuración para un destino de biblioteca estática.",
	"assets/variables.json.STATIC_LIBRARY_OPTIONS": "Marcas de archivador (o bibliotecario de MSVC) para un destino de biblioteca estática. Los destinos que son bibliotecas compartidas, módulos o ejecutables deben usar la propiedad de destino LINK_OPTIONS.",
	"assets/variables.json.SUFFIX": "Indica qué aparece después del nombre de destino.",
	"assets/variables.json.Swift_COMPILATION_MODE": "Especifique cómo Swift compila un destino.",
	"assets/variables.json.Swift_LANGUAGE_VERSION": "Esta propiedad establece la versión del lenguaje de los orígenes de Swift en el destino. Si no se especifica uno, de manera predeterminada se CMAKE_Swift_LANGUAGE_VERSION si se especifica; de lo contrario, es la versión más reciente admitida por el compilador.",
	"assets/variables.json.Swift_MODULE_DIRECTORY": "Especifica el directorio de salida para los módulos Swift que el destino proporciona.",
	"assets/variables.json.Swift_MODULE_NAME": "Esta propiedad especifica el nombre del módulo de Swift. El valor predeterminado es el nombre del destino.",
	"assets/variables.json.TEST_LAUNCHER": "Use el iniciador especificado para ejecutar ejecutables. Este comando se agregará como prefijo para comandos add_test para los ejecutables del sistema de destino de compilación y está pensado para ejecutarse en el equipo host.",
	"assets/variables.json.TRANSITIVE_COMPILE_PROPERTIES": "Propiedades que el generador de expresión TARGET_PROPERTY en el destino y sus dependientes evalúa como la unión de los valores recopilados del cierre transitivo de las dependencias de vínculo, excluyendo las entradas protegidas por LINK_ONLY.",
	"assets/variables.json.TRANSITIVE_LINK_PROPERTIES": "Propiedades que el generador de expresión TARGET_PROPERTY en el destino y sus dependientes evalúa como la unión de los valores recopilados del cierre transitivo de las dependencias de vínculo, incluidas las entradas protegidas por LINK_ONLY.",
	"assets/variables.json.UNITY_BUILD": "Cuando esta propiedad se establece en true, los archivos de código fuente de destino se combinarán en lotes para acelerar la compilación. Para ello, se crea (un conjunto de) orígenes de Unity que incluye mediante #include los orígenes originales y, a continuación, se compilan estos orígenes de Unity en lugar de los originales. Esto se conoce como compilación de Unity o Jumbo.",
	"assets/variables.json.UNITY_BUILD_BATCH_SIZE": "Especifica el número máximo de archivos de código fuente que pueden combinarse en un archivo de código fuente de Unity cuando las compilaciones de Unity se habiliten mediante la propiedad de destino UNITY_BUILD. Los archivos de código fuente originales se distribuirán en todos los archivos de código fuente de Unity necesarios para respetar este límite.",
	"assets/variables.json.UNITY_BUILD_CODE_AFTER_INCLUDE": "Fragmento de código que la característica UNITY_BUILD incluye textualmente justo después de cada instrucción #include en los archivos de código fuente de Unity generados. Por ejemplo:",
	"assets/variables.json.UNITY_BUILD_CODE_BEFORE_INCLUDE": "Fragmento de código que la característica UNITY_BUILD incluye textualmente justo delante de cada instrucción #include en los archivos de código fuente de Unity generados. Por ejemplo:",
	"assets/variables.json.UNITY_BUILD_MODE": "CMake proporciona distintos algoritmos para seleccionar qué orígenes se agrupan en un cubo. La selección se decide mediante esta propiedad, que tiene los valores aceptables siguientes:",
	"assets/variables.json.UNITY_BUILD_UNIQUE_ID": "Nombre de un identificador de C válido que se establece en un valor único por archivo durante las compilaciones de Unity.",
	"assets/variables.json.VERIFY_INTERFACE_HEADER_SETS": "Se usa para comprobar que todos los encabezados de los conjuntos de encabezados PUBLIC e INTERFACE de un destino se pueden incluir por sí solos.",
	"assets/variables.json.VERSION": "Número de versión de un destino de biblioteca compartida.",
	"assets/variables.json.VISIBILITY_INLINES_HIDDEN": "Indica si se debe agregar una marca de compilación para ocultar los símbolos de las funciones insertadas.",
	"assets/variables.json.VS_CONFIGURATION_TYPE": "Tipo de configuración del proyecto de Visual Studio.",
	"assets/variables.json.VS_DEBUGGER_COMMAND": "Establece el comando del depurador local para Visual Studio destinos de C++. El valor de propiedad puede usar expresiones de generador <cmake-generator-expressions(7)>. Esto se define en <LocalDebuggerCommand> en el archivo de proyecto Visual Studio. Esta propiedad se inicializa mediante el valor de la variable CMAKE_VS_DEBUGGER_COMMAND si se establece cuando se crea un destino.",
	"assets/variables.json.VS_DEBUGGER_COMMAND_ARGUMENTS": "Establece los argumentos de la línea de comandos del depurador local para Visual Studio destinos de C++. El valor de propiedad puede usar expresiones de generador <cmake-generator-expressions(7)>. Esto se define en <LocalDebuggerCommandArguments> en el archivo de proyecto Visual Studio. El valor de la variable CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS inicializa esta propiedad si se establece cuando se crea un destino.",
	"assets/variables.json.VS_DEBUGGER_ENVIRONMENT": "Establece el entorno del depurador local para Visual Studio destinos de C++. El valor de propiedad puede usar expresiones de generador <cmake-generator-expressions(7)>. Esto se define en <LocalDebuggerEnvironment> en el archivo de proyecto Visual Studio. Esta propiedad se inicializa mediante el valor de la variable CMAKE_VS_DEBUGGER_ENVIRONMENT si se establece cuando se crea un destino.",
	"assets/variables.json.VS_DEBUGGER_WORKING_DIRECTORY": "Establece el directorio de trabajo del depurador local para Visual Studio destinos de C++. El valor de propiedad puede usar expresiones de generador <cmake-generator-expressions(7)>. Esto se define en <LocalDebuggerWorkingDirectory> en el archivo de proyecto de Visual Studio. Esta propiedad se inicializa mediante el valor de la variable CMAKE_VS_DEBUGGER_WORKING_DIRECTORY si se establece cuando se crea un destino.",
	"assets/variables.json.VS_DESKTOP_EXTENSIONS_VERSION": "Versión de las extensiones de escritorio de Visual Studio para Windows 10.",
	"assets/variables.json.VS_DOTNET_DOCUMENTATION_FILE": "Salida de la documentación de .NET del proyecto administrado de Visual Studio",
	"assets/variables.json.VS_DOTNET_REFERENCEPROP_refname_TAG_tagname": "Define una propiedad XML <tagname> para una referencia .NET <refname>.",
	"assets/variables.json.VS_DOTNET_REFERENCES": "Referencias .NET de proyecto administrado de Visual Studio",
	"assets/variables.json.VS_DOTNET_REFERENCES_COPY_LOCAL": "Establece la propiedad Copy Local para todas las referencias a sugerencias de .NET en el destino.",
	"assets/variables.json.VS_DOTNET_REFERENCE_refname": "Referencia .NET de proyecto administrado de Visual Studio con el nombre <refname> y la ruta de acceso del archivo de sugerencias.",
	"assets/variables.json.VS_DOTNET_STARTUP_OBJECT": "Establece la propiedad de objeto de inicio en destinos de Visual Studio .NET. El valor de la propiedad define un nombre de clase completo (incluido el nombre del paquete), por ejemplo: MyCompany.Package.MyStarterClass.",
	"assets/variables.json.VS_DOTNET_TARGET_FRAMEWORK_VERSION": "Especifica la versión de la plataforma de destino de .NET.",
	"assets/variables.json.VS_DPI_AWARE": "Configure Herramienta Manifiesto -> Entrada y salida -> Reconocimiento de ppp en las propiedades del proyecto de destino de Visual Studio.",
	"assets/variables.json.VS_FILTER_PROPS": "Establece el archivo de propiedades de filtro que se va a incluir en el archivo de filtro del proyecto de C++ de Visual Studio.",
	"assets/variables.json.VS_GLOBAL_KEYWORD": "Palabra clave del proyecto de Visual Studio.",
	"assets/variables.json.VS_GLOBAL_PROJECT_TYPES": "Tipos de proyecto de Visual Studio.",
	"assets/variables.json.VS_GLOBAL_ROOTNAMESPACE": "Espacio de nombres raíz del proyecto de Visual Studio.",
	"assets/variables.json.VS_GLOBAL_variable": "Variable global específica de un proyecto de Visual Studio.",
	"assets/variables.json.VS_IOT_EXTENSIONS_VERSION": "Versión de las extensiones de Visual Studio para Windows 10 IoT.",
	"assets/variables.json.VS_IOT_STARTUP_TASK": "Tareas continuas en segundo plano de Visual Studio para Windows 10 IoT.",
	"assets/variables.json.VS_JUST_MY_CODE_DEBUGGING": "Habilite Solo mi código con el depurador de Visual Studio.",
	"assets/variables.json.VS_KEYWORD": "Quitado. Esto especificaba la palabra clave del proyecto de Visual Studio para el generador de Visual Studio 9 2008 y versiones anteriores, pero se han quitado todos esos generadores.",
	"assets/variables.json.VS_MOBILE_EXTENSIONS_VERSION": "Versión de las extensiones de Visual Studio para Windows 10 Mobile",
	"assets/variables.json.VS_NO_COMPILE_BATCHING": "Desactive el procesamiento por lotes de compilación para el destino. Normalmente, MSBuild llama al compilador con varios archivos c/cpp y el compilador inicia subprocesos para cada archivo para que la compilación sea paralela. Si desea que el compilador se invoque con un archivo a la vez, establezca VS_NO_COMPILE_BATCHING en ON. Si se establece este indicador, MSBuild llamará al compilador con un archivo c/cpp a la vez. Útil cuando desea utilizar una herramienta que reemplace al compilador, por ejemplo, alguna herramienta de almacenamiento en caché de compilación.",
	"assets/variables.json.VS_NO_SOLUTION_DEPLOY": "Especifique que el destino no debe marcarse para la implementación en un dispositivo con Windows CE o Windows Phone en la solución de Visual Studio generada.",
	"assets/variables.json.VS_PACKAGE_REFERENCES": "Referencias del paquete de Visual Studio para Nuget.",
	"assets/variables.json.VS_PLATFORM_TOOLSET": "Reemplaza el conjunto de herramientas de la plataforma que se usa para compilar un destino.",
	"assets/variables.json.VS_PROJECT_IMPORT": "Importaciones de proyecto administrado de Visual Studio",
	"assets/variables.json.VS_SCC_AUXPATH": "Ruta de acceso auxiliar de control de código fuente de Visual Studio.",
	"assets/variables.json.VS_SCC_LOCALPATH": "Ruta de acceso local de control de código fuente de Visual Studio.",
	"assets/variables.json.VS_SCC_PROJECTNAME": "Proyecto de control de código fuente de Visual Studio.",
	"assets/variables.json.VS_SCC_PROVIDER": "Proveedor de control de código fuente de Visual Studio.",
	"assets/variables.json.VS_SDK_REFERENCES": "Referencias del SDK de un proyecto de Visual Studio. Especifique una lista de referencias del SDK que deben agregarse a un proyecto de Visual Studio generado, separadas por punto y coma; por ejemplo, Microsoft.AdMediatorWindows81, Version=1.0.",
	"assets/variables.json.VS_SOLUTION_DEPLOY": "Especifique que el destino debe marcarse para la implementación cuando no se destine a Windows CE, Windows Phone o a una aplicación de Windows Store.",
	"assets/variables.json.VS_SOURCE_SETTINGS_tool": "Establezca los metadatos de los elementos en todos los archivos no integrados que usen <tool>.",
	"assets/variables.json.VS_USER_PROPS": "Establece el archivo de propiedades del usuario que se va a incluir en el archivo del proyecto de Visual Studio C++. La ruta de acceso estándar es $(UserRootDir)\\\\Microsoft.Cpp. $(Platform). user.props, que, en la mayoría de los casos, coincide con %LOCALAPPDATA%\\\\Microsoft\\\\MSBuild\\\\v4.0\\\\Microsoft.Cpp.Win32.user.props o %LOCALAPPDATA%\\\\Microsoft\\\\MSBuild\\\\v4.0\\\\Microsoft.Cpp.x64.user.props.",
	"assets/variables.json.VS_USE_DEBUG_LIBRARIES": "Indique a los generadores de Visual Studio qué configuraciones se consideran configuraciones de depuración. Esto controla el valor UseDebugLibraries en cada configuración de un archivo .vcxproj.",
	"assets/variables.json.VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION": "Versión mínima de la plataforma de destino de Visual Studio para Windows.",
	"assets/variables.json.VS_WINRT_COMPONENT": "Marca un destino como componente de Windows Runtime para el generador de Visual Studio. Compile el destino con las extensiones del lenguaje C++/CX para Windows Runtime. Para las bibliotecas SHARED y MODULE, también define la macro de preprocesador _WINRT_DLL.",
	"assets/variables.json.VS_WINRT_EXTENSIONS": "En desuso. Use VS_WINRT_COMPONENT en su lugar. Esta propiedad era una implementación parcial experimental de esta.",
	"assets/variables.json.VS_WINRT_REFERENCES": "Referencias de metadatos de Windows Runtime de un proyecto de Visual Studio.",
	"assets/variables.json.WATCOM_RUNTIME_LIBRARY": "Seleccione la biblioteca en tiempo de ejecución de Watcom para que la usen los compiladores que tienen como destino la ABI de Watcom.",
	"assets/variables.json.WIN32_EXECUTABLE": "Compila un ejecutable con un punto de entrada WinMain en Windows.",
	"assets/variables.json.WINDOWS_EXPORT_ALL_SYMBOLS": "Esta propiedad solo se implementa para las herramientas compatibles con MS en Windows.",
	"assets/variables.json.XCODE_ATTRIBUTE_an-attribute": "Establece los atributos de destino de Xcode directamente.",
	"assets/variables.json.XCODE_EMBED_FRAMEWORKS_CODE_SIGN_ON_COPY": "Indique al generador de Xcode que realice la firma de código para todos los marcos y bibliotecas que se incrustan con la propiedad XCODE_EMBED_FRAMEWORKS <XCODE_EMBED_<type>>.",
	"assets/variables.json.XCODE_EMBED_FRAMEWORKS_REMOVE_HEADERS_ON_COPY": "Indique al generador de Xcode que quite los encabezados de todos los marcos que se incrustan con la propiedad XCODE_EMBED_FRAMEWORKS <XCODE_EMBED_<type>>.",
	"assets/variables.json.XCODE_EMBED_type": "Indique al generador de Xcode que incruste la lista de elementos especificada en la agrupación de destinos. El valor <type> especifica la fase de compilación de incrustación que se va a usar. Consulte la documentación de Xcode para obtener la ubicación base de cada <type>.",
	"assets/variables.json.XCODE_EMBED_type_CODE_SIGN_ON_COPY": "Propiedad booleana que solo usa el generador de Xcode. Especifica si se debe realizar la firma de código para los elementos que se incrustan con la propiedad XCODE_EMBED_.",
	"assets/variables.json.XCODE_EMBED_type_PATH": "Esta propiedad solo la usa el generador de Xcode. Cuando se define, especifica la ruta de acceso relativa que se utilizará al incrustar los elementos especificados por XCODE_EMBED_. La ruta de acceso es relativa a la ubicación base de la fase de compilación para incrustar XXX asociada con <type>. Consulte la documentación de Xcode para obtener la ubicación base de cada <type>.",
	"assets/variables.json.XCODE_EMBED_type_REMOVE_HEADERS_ON_COPY": "Propiedad booleana que solo usa el generador de Xcode. Especifica si se deben quitar los encabezados de todos los marcos que se incrustan con la propiedad XCODE_EMBED_.",
	"assets/variables.json.XCODE_GENERATE_SCHEME": "Si se habilita, el generador de Xcode crea archivos de esquema, que son útiles para invocar el análisis, archivado, compilación para pruebas y acciones de pruebas desde la línea de comandos.",
	"assets/variables.json.XCODE_LINK_BUILD_PHASE_MODE": "Cuando se usa el generador de Xcode, las bibliotecas que se van a vincular se especifican en el archivo del proyecto Xcode con la fase de compilación \"Link Binary with Libraries\" o directamente como marcas de enlazador. Lo primero permite que Xcode administre las rutas de acceso de compilación, lo que puede ser necesario al crear archivos de Xcode porque puede usar distintas rutas de acceso de compilación para una compilación normal.",
	"assets/variables.json.XCODE_PRODUCT_TYPE": "Establece el atributo productType de Xcode en su referencia a un destino. CMake calcula un valor predeterminado en función del tipo de destino, pero se le puede indicar de forma explícita con esta propiedad.",
	"assets/variables.json.XCODE_SCHEME_ADDRESS_SANITIZER": "Indica si debe habilitarse AddressSanitizer en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN": "Indica si debe habilitarse Detect use of stack after return en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_ARGUMENTS": "Especifica los argumentos de la línea de comandos que deben agregarse a la sección de argumentos del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_DEBUG_AS_ROOT": "Indica si debe depurarse el destino como \"root\".",
	"assets/variables.json.XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING": "Indica si se va a habilitar la opción Allow debugging when using document Versions Browser en la sección Opciones del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER": "Indica si debe deshabilitarse Main Thread Checker en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS": "Indica si debe habilitarse Dynamic Library Loads en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE": "Indica si debe habilitarse Dynamic Linker API usage en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_ENABLE_GPU_API_VALIDATION": "Valor de propiedad para Metal: Validación de API en la sección Opciones del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE": "Valor de propiedad para la captura de fotogramas de GPU en la sección Opciones del esquema de Xcode generado. Los valores de ejemplo son Metal y Disabled.",
	"assets/variables.json.XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION": "Valor de propiedad para Metal: Shader Validation en la sección Opciones del esquema Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_ENVIRONMENT": "Especifica las variables de entorno que deben agregarse a la sección de argumentos del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_EXECUTABLE": "Especifica la ruta de acceso al ejecutable en la sección Info del esquema de Xcode generado. Si no se establece, el generador de esquemas selecciona el destino actual si es ejecutable.",
	"assets/variables.json.XCODE_SCHEME_GUARD_MALLOC": "Indica si debe habilitarse Guard Malloc en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_LAUNCH_CONFIGURATION": "Establece la configuración de compilación para ejecutar el destino.",
	"assets/variables.json.XCODE_SCHEME_LAUNCH_MODE": "Valor de propiedad de Inicio en la sección Información del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP": "Indica si debe habilitarse la opción Pause on issues de Main Thread Checker en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_MALLOC_GUARD_EDGES": "Indica si debe habilitarse Malloc Guard Edges en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_MALLOC_SCRIBBLE": "Indica si debe habilitarse Malloc Scribble en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_MALLOC_STACK": "Indica si debe habilitarse Malloc Stack en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_THREAD_SANITIZER": "Indica si debe habilitarse Thread Sanitizer en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_THREAD_SANITIZER_STOP": "Indica si debe habilitarse Thread Sanitizer - Pause on issues en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER": "Indica si debe habilitarse Undefined Behavior Sanitizer en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP": "Indica si debe habilitarse Undefined Behavior Sanitizer con la opción Pause on issues en la sección Diagnostics del esquema de Xcode generado.",
	"assets/variables.json.XCODE_SCHEME_WORKING_DIRECTORY": "Especifique el directorio de trabajo de las acciones de ejecución y generación de perfiles en el esquema de Xcode generado. Si el valor contiene expresiones de generador, estas se evalúan.",
	"assets/variables.json.XCODE_SCHEME_ZOMBIE_OBJECTS": "Indica si debe habilitarse Zombie Objects en la sección Diagnostics del esquema Xcode generado.",
	"assets/variables.json.XCODE_XCCONFIG": "Si se establece, el generador de Xcode registrará el archivo especificado como un archivo XCConfig de nivel de destino. Para los archivos XCConfig globales, consulte la variable CMAKE_XCODE_XCCONFIG.",
	"assets/variables.json.XCTEST": "Este destino es un elemento XCTest CFBundle en Mac."
}
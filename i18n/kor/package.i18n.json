/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"cmake-tools.command.cmake.openCMakePresets.title": "CMakePresets.json 열기",
	"cmake-tools.command.cmake.addConfigurePreset.title": "구성 사전 설정 추가",
	"cmake-tools.command.cmake.addBuildPreset.title": "빌드 사전 설정 추가",
	"cmake-tools.command.cmake.addTestPreset.title": "테스트 사전 설정 추가",
	"cmake-tools.command.cmake.addPackagePreset.title": "패키지 사전 설정 추가",
	"cmake-tools.command.cmake.addWorkflowPreset.title": "워크플로 사전 설정 추가",
	"cmake-tools.command.cmake.selectConfigurePreset.title": "구성 사전 설정 선택",
	"cmake-tools.command.cmake.viewConfigureSettings.title": "구성 사전 설정을 재정의하는 설정 보기",
	"cmake-tools.command.cmake.selectBuildPreset.title": "빌드 사전 설정 선택",
	"cmake-tools.command.cmake.viewBuildSettings.title": "빌드 사전 설정을 재정의하는 설정 보기",
	"cmake-tools.command.cmake.selectTestPreset.title": "테스트 사전 설정 선택",
	"cmake-tools.command.cmake.viewTestSettings.title": "테스트 사전 설정을 재정의하는 설정 보기",
	"cmake-tools.command.cmake.viewPackageSettings.title": "패키지 사전 설정을 재정의하는 설정 보기",
	"cmake-tools.command.cmake.selectPackagePreset.title": "패키지 사전 설정 선택",
	"cmake-tools.command.cmake.selectWorkflowPreset.title": "워크플로 사전 설정 선택",
	"cmake-tools.command.cmake.viewLog.title": "CMake 도구 로그 파일 열기",
	"cmake-tools.command.cmake.logDiagnostics.title": "진단 정보 로그",
	"cmake-tools.command.cmake.editKits.title": "user-local CMake 키트 편집",
	"cmake-tools.command.cmake.scanForKits.title": "키트 검색",
	"cmake-tools.command.cmake.scanForCompilers.title": "컴파일러 검색",
	"cmake-tools.command.cmake.selectKit.title": "키트 선택",
	"cmake-tools.command.cmake.setVariant.title": "변형 선택",
	"cmake-tools.command.cmake.setVariantAll.title": "모든 프로젝트의 변형 선택",
	"cmake-tools.command.cmake.configure.title": "구성",
	"cmake-tools.command.cmake.configureWithDebugger.title": "CMake 디버거를 사용하여 구성",
	"cmake-tools.command.cmake.configureAll.title": "모든 프로젝트 구성",
	"cmake-tools.command.cmake.configureAllWithDebugger.title": "CMake 디버거를 사용하여 모든 프로젝트 구성",
	"cmake-tools.command.cmake.showConfigureCommand.title": "구성 명령 표시",
	"cmake-tools.command.cmake.build.title": "빌드",
	"cmake-tools.command.cmake.buildAll.title": "모든 프로젝트 빌드",
	"cmake-tools.command.cmake.showBuildCommand.title": "빌드 명령 표시",
	"cmake-tools.command.cmake.compileFile.title": "활성 파일 컴파일",
	"cmake-tools.command.cmake.outline.compileFile.title": "파일 컴파일",
	"cmake-tools.command.cmake.install.title": "설치",
	"cmake-tools.command.cmake.installAll.title": "모든 프로젝트 설치",
	"cmake-tools.command.cmake.buildWithTarget.title": "빌드 대상",
	"cmake-tools.command.cmake.setDefaultTarget.title": "빌드 대상 설정",
	"cmake-tools.command.cmake.cleanConfigure.title": "캐시 삭제 및 다시 구성",
	"cmake-tools.command.cmake.cleanConfigureWithDebugger.title": "CMake 디버거를 사용하여 캐시 삭제 및 다시 구성",
	"cmake-tools.command.cmake.cleanConfigureAll.title": "캐시 삭제 및 모든 프로젝트 다시 구성",
	"cmake-tools.command.cmake.cleanConfigureAllWithDebugger.title": "CMake 디버거를 사용하여 캐시 삭제 및 모든 프로젝트 다시 구성",
	"cmake-tools.command.cmake.editCacheUI.title": "CMake 캐시 편집(UI)",
	"cmake-tools.command.cmake.outline.cleanConfigure.title": "클린 다시 구성",
	"cmake-tools.command.cmake.outline.cleanConfigureWithDebugger.title": "CMake 디버거를 사용하여 다시 구성 정리",
	"cmake-tools.command.cmake.outline.cleanConfigureAll.title": "모든 프로젝트 클린 다시 구성",
	"cmake-tools.command.cmake.outline.cleanConfigureAllWithDebugger.title": "CMake 디버거를 사용하여 모든 프로젝트 다시 구성 정리",
	"cmake-tools.command.cmake.clean.title": "정리",
	"cmake-tools.command.cmake.cleanAll.title": "모든 프로젝트 정리",
	"cmake-tools.command.cmake.cleanRebuild.title": "클린 다시 빌드",
	"cmake-tools.command.cmake.cleanRebuildAll.title": "모든 프로젝트 클린 다시 빌드",
	"cmake-tools.command.cmake.ctest.title": "테스트 실행",
	"cmake-tools.command.cmake.ctestAll.title": "모든 프로젝트에 대한 테스트 실행",
	"cmake-tools.command.cmake.cpack.title": "CPack 실행",
	"cmake-tools.command.cmake.cpackAll.title": "모든 프로젝트에 대해 CPack 실행",
	"cmake-tools.command.cmake.workflow.title": "워크플로 실행",
	"cmake-tools.command.cmake.workflowAll.title": "모든 프로젝트에 대한 워크플로 실행",
	"cmake-tools.command.cmake.revealTestExplorer.title": "테스트 탐색기 표시",
	"cmake-tools.command.cmake.refreshTests.title": "테스트 새로 고침",
	"cmake-tools.command.cmake.refreshTestsAll.title": "모든 프로젝트에 대한 테스트 새로 고침",
	"cmake-tools.command.cmake.editCache.title": "CMake 캐시 편집",
	"cmake-tools.command.cmake.quickStart.title": "빠른 시작",
	"cmake-tools.command.cmake.debugTarget.title": "디버그",
	"cmake-tools.command.cmake.debugTargetAll.title": "모든 프로젝트 디버그",
	"cmake-tools.command.cmake.launchTarget.title": "디버깅하지 않고 실행",
	"cmake-tools.command.cmake.launchTargetAll.title": "디버깅하지 않고 모든 프로젝트 실행",
	"cmake-tools.command.cmake.selectLaunchTarget.title": "디버그 대상 설정",
	"cmake-tools.command.cmake.stop.title": "빌드 취소",
	"cmake-tools.command.cmake.stopAll.title": "모든 프로젝트의 빌드 취소",
	"cmake-tools.command.cmake.resetState.title": "CMake 도구 확장 상태 다시 설정(문제 해결용)",
	"cmake-tools.command.cmake.openSettings.title": "CMake 도구 확장 설정 열기",
	"cmake-tools.command.cmake.selectActiveFolder.title": "활성 폴더 선택",
	"cmake-tools.command.cmake.outline.runUtilityTarget.title": "유틸리티 실행",
	"cmake-tools.command.cmake.outline.debugTarget.title": "디버그",
	"cmake-tools.command.cmake.outline.launchTarget.title": "터미널에서 실행",
	"cmake-tools.command.cmake.outline.setDefaultTarget.title": "빌드 대상으로 설정",
	"cmake-tools.command.cmake.outline.setLaunchTarget.title": "시작/디버그 대상으로 설정",
	"cmake-tools.command.cmake.outline.revealInCMakeLists.title": "CMakeLists.txt 열기",
	"cmake-tools.command.cmake.folders.setActiveFolder.title": "활성 폴더 설정",
	"cmake-tools.configuration.title": "CMake 도구 구성",
	"cmake-tools.configuration.cmake.cmakePath.description": "사용할 CMake 실행 파일의 이름/경로입니다.",
	"cmake-tools.configuration.cmake.buildDirectory.description": "CMake 빌드 파일이 이동할 디렉터리입니다.",
	"cmake-tools.configuration.cmake.installPrefix.description": "CMake 설치된 파일이 이동할 디렉터리입니다.",
	"cmake-tools.configuration.cmake.sourceDirectory.description": "CMakeLists.txt 루트 디렉터리의 경로 또는 경로 배열입니다.",
	"cmake-tools.configuration.cmake.saveBeforeBuild.description": "빌드하기 전에 열린 파일을 저장합니다.",
	"cmake-tools.configuration.cmake.buildBeforeRun.description": "대상을 실행하기 전에 빌드합니다.",
	"cmake-tools.configuration.cmake.clearOutputBeforeBuild.description": "각 빌드 전에 빌드 출력을 지웁니다.",
	"cmake-tools.configuration.cmake.configureSettings.description": "명령줄에서 설정할 CMake 변수입니다. 이 설정은 키트에만 적용되며 CMake 사전 설정에 사용되지 않습니다.",
	"cmake-tools.configuration.cmake.cacheInit.string.description": "캐시 초기화 CMake 파일 경로입니다.",
	"cmake-tools.configuration.cmake.cacheInit.array.description": "캐시 이니셜라이저 파일 목록입니다.",
	"cmake-tools.configuration.cmake.cacheInit.array.string.description": "CMake 파일을 초기화하는 캐시입니다.",
	"cmake-tools.configuration.cmake.cacheInit.overall.description": "캐시 초기화 CMake 파일을 제공합니다.",
	"cmake-tools.configuration.cmake.preferredGenerators.description": "구성할 때 사용할 기본 설정 CMake 생성기입니다(나열된 순서대로 시도됨).",
	"cmake-tools.configuration.cmake.generator.description": "사용할 CMake 생성기입니다.",
	"cmake-tools.configuration.cmake.toolset.description": "구성할 때 사용할 CMake 도구 세트입니다.",
	"cmake-tools.configuration.cmake.platform.description": "구성할 때 사용할 CMake 플랫폼입니다.",
	"cmake-tools.configuration.cmake.configureArgs.description": "구성할 때 CMake에 전달할 추가 인수입니다. CMake 사전 설정을 사용할 때 이러한 인수가 활성 구성 사전 설정에서 제공하는 인수에 일시적으로 추가됩니다.",
	"cmake-tools.configuration.cmake.buildArgs.description": "빌드할 때 CMake에 전달할 추가 인수입니다. CMake 사전 설정을 사용할 때 이러한 인수가 활성 빌드 사전 설정에서 제공하는 인수에 임시로 추가됩니다.",
	"cmake-tools.configuration.cmake.buildToolArgs.description": "빌드할 때 기본 빌드 도구에 전달할 추가 인수입니다. CMake 사전 설정을 사용할 때 이러한 인수가 빌드 도구를 호출하기 위해 활성 빌드 사전 설정에서 제공하는 인수에 임시로 추가됩니다.",
	"cmake-tools.configuration.cmake.parallelJobs.description": "병렬 빌드 작업의 수입니다. CPU 수를 자동으로 검색하려면 0을 사용합니다. 이 값을 1로 설정하면 기본 빌드 명령에서 병렬 처리 플래그(-j)가 생략되며, 이는 빌드 병렬 처리에 대한 생성기 종속 효과가 있습니다.",
	"cmake-tools.configuration.cmake.ctestPath.description": "CTest 실행 파일의 경로입니다. Null인 경우 cmake.cmakePath에서 유추됩니다(null을 유지하는 것이 좋음).",
	"cmake-tools.configuration.cmake.cpackPath.description": "CPack 실행 파일의 경로입니다. Null인 경우 cmake.cmakePath에서 유추됩니다(null을 유지하는 것이 좋음). 사전 설정 대신 키트를 사용하는 경우 무시됩니다.",
	"cmake-tools.configuration.cmake.ctest.parallelJobs.markdownDescription": "병렬 테스트 작업 수입니다. `#cmake.parallelJobs#` 값을 사용하려면 0을 사용합니다. 이는 `#cmake.ctest.allowParallelJobs#`이 `true`로 설정된 경우에만 적용됩니다.",
	"cmake-tools.configuration.cmake.ctest.allowParallelJobs.description": "Ctest를 병렬로 실행할 수 있지만 그로 인해 결과 출력이 왜곡될 수 있으며 테스트 탐색기에 테스트 진행 상황이 정확하게 반영되지 않을 수 있습니다.",
	"cmake-tools.configuration.cmake.ctest.testExplorerIntegrationEnabled.description": "테스트 탐색기와의 통합을 사용할 수 있는지 여부입니다. 이는 테스트 통합에 다른 확장을 사용하려는 경우 사용하지 않도록 설정하는 데 유용합니다.",
	"cmake-tools.configuration.cmake.parseBuildDiagnostics.description": "경고 및 오류에 대한 컴파일러 출력을 구문 분석합니다.",
	"cmake-tools.configuration.cmake.enabledOutputParsers.description": "사용할 출력 파서입니다. 지원되는 파서: GNULD 스타일 링커 출력의 경우 `cmake`, `gcc`, `gnuld`, Microsoft Visual C++의 경우 `msvc`, Green Hills 컴파일러의 경우 `ghs`(--no_wrap_diagnostics --brief_diagnostics 포함), Wind River Diab 컴파일러의 경우 `diab`",
	"cmake-tools.configuration.cmake.debugConfig.description": "대상을 디버깅할 때 사용할 디버그 구성입니다.",
	"cmake-tools.configuration.cmake.debugConfig.symbolSearchPath.description": "Visual Studio 디버거 기호 검색 경로입니다.",
	"cmake-tools.configuration.cmake.debugConfig.additionalSOLibSearchPath.description": ".so 파일을 검색할 GDB 또는 LLDB 경로입니다.",
	"cmake-tools.configuration.cmake.debugConfig.externalConsole.description": "프로그램의 외부 콘솔을 시작합니다.",
	"cmake-tools.configuration.cmake.debugConfig.console.description": "디버그 대상을 시작할 위치입니다. 정의되지 않은 경우 기본값인 `internalConsole`로 설정됩니다.",
	"cmake-tools.configuration.cmake.debugConfig.console.internalConsole.description": "VS Code 디버그 콘솔에 출력합니다. 콘솔 입력 읽기(예:`std::cin` 또는 `scanf`)는 지원되지 않습니다.",
	"cmake-tools.configuration.cmake.debugConfig.console.integratedTerminal.description": "VS Code의 통합 터미널",
	"cmake-tools.configuration.cmake.debugConfig.console.externalTerminal.description": "콘솔 애플리케이션이 외부 터미널 창에서 시작됩니다. 이 창은 다시 시작 시나리오에서 재사용되며, 애플리케이션이 종료될 때 자동으로 사라지지 않습니다.",
	"cmake-tools.configuration.cmake.debugConfig.console.newExternalWindow.description": "콘솔 애플리케이션은 애플리케이션이 중지될 때 종료되는 해당 외부 콘솔 창에서 시작됩니다. 콘솔이 아닌 애플리케이션은 터미널 없이 실행되며, stdout/stderr이 무시됩니다.",
	"cmake-tools.configuration.cmake.debugConfig.logging.description": "콘솔에 기록해야 하는 메시지 형식을 알립니다.",
	"cmake-tools.configuration.cmake.debugConfig.visualizerFile.description": "디버그할 때 사용할 .natvis 파일입니다.",
	"cmake-tools.configuration.cmake.debugConfig.args.description": "프로그램 명령줄에 전달할 인수입니다.",
	"cmake-tools.configuration.cmake.debugConfig.cwd.description": "프로그램의 작업 디렉터리를 설정합니다.",
	"cmake-tools.configuration.cmake.debugConfig.environment.name.description": "환경 변수 이름입니다.",
	"cmake-tools.configuration.cmake.debugConfig.environment.value.description": "환경 변수 값입니다.",
	"cmake-tools.configuration.cmake.debugConfig.miDebuggerPath.description": "gdb 또는 lldb 디버거 경로입니다.",
	"cmake-tools.configuration.cmake.debugConfig.stopAtEntry.description": "대상의 진입점에서 중지합니다.",
	"cmake-tools.configuration.cmake.debugConfig.setupCommands.description": "gdb 또는 lldb를 설정하는 명령입니다.",
	"cmake-tools.configuration.cmake.debugConfig.setupCommands.text.description": "실행할 명령입니다.",
	"cmake-tools.configuration.cmake.debugConfig.setupCommands.description.description": "명령에 대한 설명입니다.",
	"cmake-tools.configuration.cmake.defaultVariants.overall.description": "기본 변형 설정을 구성합니다.",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.description": "빌드 형식입니다.",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.debug.long": "최적화 사용 안 함-디버그 정보를 포함합니다.",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.release.long": "속도 최적화 - 디버그 정보를 제외합니다.",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.minsize.long": "최소 이진 크기에 맞게 최적화 - 디버그 정보를 제외합니다.",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.reldeb.long": "속도 최적화 - 디버그 정보를 포함합니다.",
	"cmake-tools.configuration.cmake.ctestArgs.description": "CTest에 전달할 추가 인수입니다. CMake 사전 설정을 사용할 때 이러한 인수가 활성 테스트 사전 설정에서 제공하는 인수에 임시로 추가됩니다.",
	"cmake-tools.configuration.cmake.ctestDefaultArgs.description": "기본적으로 CTest에 전달된 인수입니다.",
	"cmake-tools.configuration.cmake.environment.description": "CMake 명령을 실행할 때 설정할 환경 변수입니다. CMake 사전 설정을 사용하는 경우 CMake 명령에 사용되는 환경에 임시로 추가됩니다.",
	"cmake-tools.configuration.cmake.environment.additionalProperties.description": "환경 변수 값입니다.",
	"cmake-tools.configuration.cmake.configureEnvironment.description": "구성하는 동안 CMake에 전달할 환경 변수입니다. CMake 사전 설정을 사용하는 경우 활성 구성 사전 설정에서 제공하는 환경에 임시로 추가됩니다.",
	"cmake-tools.configuration.cmake.buildEnvironment.description": "빌드하는 동안 CMake에 전달할 환경 변수입니다. CMake 사전 설정을 사용하는 경우 활성 빌드 사전 설정에서 제공하는 환경에 임시로 추가됩니다.",
	"cmake-tools.configuration.cmake.testEnvironment.description": "CTest에 전달할 환경 변수입니다. CMake 사전 설정을 사용하는 경우 활성 테스트 사전 설정에서 제공하는 환경에 임시로 추가됩니다.",
	"cmake-tools.configuration.cmake.cpackArgs.description": "CPack에 전달할 추가 인수입니다(사전 설정을 사용하는 경우에만, 키트에 지원되지 않음). 이러한 인수는 활성 패키지 사전 설정에서 제공하는 인수에 일시적으로 추가됩니다.",
	"cmake-tools.configuration.cmake.cpackEnvironment.description": "CPack을 사용하여 패키징할 때 설정할 환경 변수입니다(사전 설정을 사용하는 경우에만, 키트에 지원되지 않음). CPack 실행에 사용되는 환경에 일시적으로 추가됩니다.",
	"cmake-tools.configuration.cmake.mingwSearchDirs.description": "MinGW를 설치할 수 있는 디렉터리입니다.",
	"cmake-tools.configuration.cmake.additionalCompilerSearchDirs.description": "컴파일러를 검색할 추가 디렉터리입니다.",
	"cmake-tools.configuration.cmake.searchDirs.items.description": "디렉터리 경로입니다.",
	"cmake-tools.configuration.cmake.emscriptenSearchDirs.description": "Emscripten을 설치할 수 있는 디렉터리입니다.",
	"cmake-tools.configuration.cmake.mergedCompileCommands.description": "cmake.buildDirectory에 있는 모든 compile_commands.json을 재귀적으로 수집하고 병합합니다.",
	"cmake-tools.configuration.cmake.copyCompileCommands.description": "구성에 성공한 후 compile_commands.json을 이 위치로 복사합니다.",
	"cmake-tools.configuration.cmake.configureOnOpen.description": "CMake 프로젝트 디렉터리를 열 때 자동으로 구성합니다.",
	"cmake-tools.configuration.cmake.configureOnEdit.description": "cmake.sourceDirectory 또는 CMakeLists.txt 콘텐츠가 저장될 때 CMake 프로젝트 디렉터리를 자동으로 구성합니다.",
	"cmake-tools.configuration.cmake.setBuildTypeOnMultiConfig.description": "다중 구성 생성기에도 CMAKE_BUILD_TYPE를 설정합니다.",
	"cmake-tools.configuration.cmake.skipConfigureIfCachePresent.description": "캐시가 있으면 구성 프로세스를 건너뜁니다.",
	"cmake-tools.configuration.cmake.cmakeCommunicationMode": "확장과 CMake 간 통신에 사용되는 프로토콜입니다.",
	"cmake-tools.configuration.cmake.showSystemKits.description": "키트 선택에 시스템 키트를 포함합니다.",
	"cmake-tools.configuration.cmake.ignoreKitEnv.description": "CMake 명령을 실행할 때 키트 환경 변수를 사용하지 않습니다.",
	"cmake-tools.configuration.cmake.buildTask.description": "내부 프로세스 대신 tasks.json을 사용하여 빌드합니다.",
	"cmake-tools.configuration.cmake.outputLogEncoding.description": "외부 명령의 출력 인코딩입니다(예: cmake -- build).",
	"cmake-tools.configuration.cmake.enableTraceLogging.description": "파일 및 콘솔에 대한 추적 로깅을 사용합니다(매우 불안정함).",
	"cmake-tools.configuration.cmake.autoSelectActiveFolder.description": "활성 폴더를 자동으로 선택합니다.",
	"cmake-tools.configuration.cmake.touchbar.advanced.description": "확장에서 MacBook 터치 바에 단추를 표시하는 방법에 대한 고급 설정을 구성합니다.",
	"cmake-tools.configuration.cmake.touchbar.visibility.description": "확장이 MacBook Touch Bar에 단추를 표시하는 방식을 구성합니다.",
	"cmake-tools.configuration.cmake.touchbar.visibility.default.description": "지원되는 시스템에 Touch Bar 단추를 표시합니다.",
	"cmake-tools.configuration.cmake.touchbar.visibility.hidden.description": "Touch Bar 단추를 표시하지 않습니다.",
	"cmake-tools.configuration.cmake.showOptionsMovedNotification": "확장 시작 시기를 표시하기 위해 프로젝트 상태 보기로 이동하는 상태 표시줄 옵션에 대한 알림을 사용하도록 설정합니다.",
	"cmake-tools.configuration.cmake.showConfigureWithDebuggerNotification": "구성 실패 시 CMake 디버거를 사용하여 구성할지를 묻는 팝업을 사용합니다.",
	"cmake-tools.configuration.cmake.showNotAllDocumentsSavedQuestion": "일부 파일이 저장되지 않았을 수 있음에도 불구하고 빌드를 계속할 것인지 묻는 팝업을 활성화합니다. 활성화하지 않으면 빌드가 계속 진행됩니다.",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.visible.description": "상태 표시줄 옵션을 전체 크기로 표시합니다.",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.icon.description": "상태 표시줄 옵션의 아이콘만 표시합니다.",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.compact.markdownDescription": "상태 표시줄 옵션의 텍스트가 `#cmake.status.advanced.statusBarLength#`(기본값 20)에 지정된 길이로 잘려 표시됩니다.",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.variant.compact.description": "상태 메시지가 제거된 상태 표시줄 옵션을 표시합니다.",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.hidden.description": "상태 표시줄 옵션을 숨깁니다.",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.inherit.markdownDescription": "보다 일반적인 `#cmake.options.statusBarVisibility#` 설정이 `hidden`으로 설정된 경우 이 설정은 기본적으로 `#cmake.options.advanced.inheritDefault#` 설정으로 설정되고, 그렇지 않으면 `#cmake.options.statusBarVisibility#` 설정을 상속합니다.",
	"cmake-tools.configuration.cmake.options.advanced.inheritDefault.markdownDescription": "`#cmake.options.statusBarVisibility#`이(가) `hidden`으로 설정된 경우 `#cmake.options.advanced.statusBarVisibility#` 설정의 `inherit` 옵션이 기본값으로 설정되는 항목을 구성합니다. `#cmake.options.advanced.statusBarVisibility#` 설정과 동일한 옵션이 있으며 `inherit` 옵션을 뺀 값이 있습니다.",
	"cmake-tools.configuration.cmake.options.statusBarVisibility.markdownDescription": "확장이 상태 표시줄에 옵션을 표시하는 방식을 구성합니다. 이러한 설정은 보다 구체적인 `#cmake.options.advanced.statusBarVisibility#` 설정으로 덮어쓸 수 있습니다. [추가 정보](https://aka.ms/cmaketoolsoptionsconfiguration)",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.markdownDescription": "개별 상태 표시줄 옵션에 대한 설정을 구성합니다. 이 설정이 더 일반적인 `#cmake.options.statusBarVisibility#` 설정을 덮어씁니다.",
	"cmake-tools.configuration.cmake.options.advanced.projectStatusVisibility.visible.description": "프로젝트 상태 보기에 노드를 표시합니다.",
	"cmake-tools.configuration.cmake.options.advanced.projectStatusVisibility.hidden.description": "프로젝트 상태 보기에서 노드 및 자식 요소를 숨깁니다.",
	"cmake-tools.configuration.cmake.options.advanced.markdownDescription": "개별 프로젝트 상태 보기 및 상태 표시줄 옵션에 대한 설정을 구성합니다. 이 설정이 더 일반적인 `#cmake.options.statusBarVisibility#` 설정을 덮어쓸 수 있습니다. [추가 정보](https://aka.ms/cmaketoolsoptionsconfiguration)",
	"cmake-tools.configuration.cmake.options.advanced.projectStatusVisibility.description": "확장에서 이 옵션을 프로젝트 상태 보기에 표시하는 방법을 구성합니다.",
	"cmake-tools.configuration.cmake.options.advanced.ctest.color.description": "테스트 결과에 따라 이 옵션의 색을 변경합니다.",
	"cmake-tools.configuration.cmake.options.advanced.cpack.color.description": "cpack 결과에 따라 이 옵션의 색을 변경할 수 있습니다.",
	"cmake-tools.configuration.cmake.options.advanced.workflow.color.description": "워크플로 실행 결과에 따라 이 옵션의 색을 변경할 수 있습니다.",
	"cmake-tools.configuration.cmake.options.advanced.statusBarLength.markdownDescription": "`compact` 모드로 설정된 경우 상태 표시줄에서 표시되는 텍스트의 최대 길이를 구성합니다.",
	"cmake-tools.configuration.views.cmake.folders.description": "폴더",
	"cmake-tools.configuration.views.cmake.projectStatus.description": "프로젝트 상태",
	"cmake-tools.configuration.views.cmake.pinnedCommandsWelcome.description": "CMake 명령이 아직 고정되지 않았습니다.\n[명령 추가](command:cmake.pinnedCommands.add)",
	"cmake-tools.configuration.views.cmake.outline.description": "프로젝트 개요",
	"cmake-tools.configuration.views.cmake.pinnedCommands.description": "고정된 명령",
	"cmake-tools.configuration.cmake.additionalKits.description": "사용자 지정 키트 파일의 경로 배열입니다.",
	"cmake-tools.configuration.cmake.revealLog.description": "로그를 표시하고 출력 채널에 초점을 맞추는 설정을 구성합니다.",
	"cmake-tools.configuration.cmake.revealLog.focus.description": "로그가 나타나고 출력 채널이 커서 포커스를 받습니다.",
	"cmake-tools.configuration.cmake.revealLog.always.description": "로그가 나타나지만 출력 채널은 커서 포커스를 받지 않습니다.",
	"cmake-tools.configuration.cmake.revealLog.never.description": "로그가 나타나지도 않고 초점을 맞추지 않습니다.",
	"cmake-tools.configuration.cmake.exportCompileCommandsFile.description": "compile_commands.json 내보내기를 사용하도록 설정합니다. 키트 시나리오에서만 사용됩니다. 사전 설정 시나리오에서는 CMakePresets.json을 사용하여 설정하세요.",
	"cmake-tools.configuration.cmake.useCMakePresets.description": "CMakePresets.json을 사용하여 드라이브 CMake 구성, 빌드 및 테스트를 구성합니다. CMakePresets.json을 사용할 때, 키트, 변형 및 settings.json의 일부 설정이 무시됩니다.",
	"cmake-tools.configuration.cmake.allowCommentsInPresetsFile.description": "CMakePresets.json의 설명과 같은 JSON 확장 사용을 허용합니다. CMakePresets.json 파일은 다른 IDE에서 또는 비표준 JSON을 사용하는 경우 명령줄에서 유효하지 않은 것으로 간주될 수 있습니다.",
	"cmake-tools.configuration.cmake.allowUnsupportedPresetsVersions.description": "CMake Tools 확장에서 현재 지원하지 않는 버전의 기능을 사용하는 사전 설정 파일을 사용하도록 설정합니다. 알 수 없는 속성 및 매크로는 무시됩니다.",
	"cmake-tools.configuration.cmake.ignoreCMakeListsMissing.description": "`true`이면 확장에서 작업 영역에 있지만 루트 폴더에는 없는 경우 구성을 위해 CMakeLists.txt 파일을 선택하도록 사용자에게 요청하지 않습니다.",
	"cmake-tools.configuration.cmake.launchBehavior.description": "대상을 시작할 때 시작 터미널에서 수행되는 작업을 제어합니다.",
	"cmake-tools.configuration.cmake.automaticReconfigure.description": "키트 또는 구성 사전 설정이 변경되면 CMake 프로젝트 디렉터리를 자동으로 구성합니다.",
	"cmake-tools.configuration.cmake.pinnedCommands.description": "고정할 CMake 명령 목록입니다.",
	"cmake-tools.configuration.cmake.enableAutomaticKitScan.description": "키트를 선택하지 않은 경우 키트 자동 검사를 활성화합니다. CMake 사전 설정을 사용하지 않는 경우에만 적용됩니다.",
	"cmake-tools.debugger.pipeName.description": "디버거 통신에 사용할 파이프(Windows) 또는 도메인 소켓(Unix의 경우)의 이름입니다.",
	"cmake-tools.debugger.clean.description": "구성하기 전에 정리합니다.",
	"cmake-tools.debugger.configureAll.description": "모든 프로젝트에 대해 구성합니다.",
	"cmake-tools.debugger.dapLog.description": "디버거 DAP 로그를 기록해야 하는 위치입니다.",
	"cmake-tools.debugger.scriptPath.description": "디버그할 스크립트의 경로입니다.",
	"cmake-tools.debugger.scriptArgs.description": "디버깅할 스크립트의 인수입니다.",
	"cmake-tools.debugger.scriptEnv.description": "스크립트를 사용할 환경입니다.",
	"cmake-tools.debugger.name": "이름",
	"cmake-tools.debugger.value": "값",
	"cmake-tools.debugger.debugType.description": "CMake 디버그 세션의 형식입니다. 사용 가능한 옵션은 \"구성\", \"외부\", \"스크립트\"입니다.",
	"cmake-tools.debugger.configure.snippet.label": "CMake: 구성",
	"cmake-tools.debugger.configure.snippet.description": "CMake 프로젝트 구성 디버그",
	"cmake-tools.debugger.configure.snippet.body.name": "CMake: 프로젝트 구성",
	"cmake-tools.debugger.script.snippet.label": "CMake: 스크립트",
	"cmake-tools.debugger.script.snippet.description": "CMake 스크립트 디버그",
	"cmake-tools.debugger.script.snippet.body.name": "CMake: 스크립트 디버깅",
	"cmake-tools.debugger.external.snippet.label": "CMake: 외부",
	"cmake-tools.debugger.external.snippet.description": "외부에서 시작된 CMake 호출에 연결",
	"cmake-tools.debugger.external.snippet.body.name": "CMake: 외부에서 시작됨",
	"cmake-tools.taskDefinitions.properties.label.description": "작업의 이름",
	"cmake-tools.taskDefinitions.properties.command.description": "CMake 명령",
	"cmake-tools.taskDefinitions.properties.targets.description": "CMake 빌드 대상",
	"cmake-tools.taskDefinitions.properties.preset.description": "CMake 사전 설정 이름. CMake 명령을 기반으로 하는 구성, 빌드 또는 테스트 사전 설정입니다.",
	"cmake-tools.taskDefinitions.properties.options.description": "추가 명령 옵션",
	"cmake-tools.taskDefinitions.properties.options.cwd.description": "실행된 프로그램 또는 스크립트의 현재 작업 디렉터리입니다. 생략된 경우 Code의 현재 작업 영역 루트가 사용됩니다.",
	"cmake-tools.taskDefinitions.properties.options.environment.markdownDescription": "\"이름\": \"값\" 형식의 환경 변수.",
	"cmake-tools.taskDefinitions.properties.details.description": "작업의 추가 세부 정보",
	"cmake-tools.configuration.cmake.launchBehavior.reuseTerminal.markdownDescriptions": "시작 터미널 인스턴스가 다시 사용되며 터미널이 유휴 상태가 되면 대상이 시작됩니다.",
	"cmake-tools.configuration.cmake.launchBehavior.breakAndReuseTerminal.markdownDescriptions": "시작 터미널 인스턴스가 재사용되고 대상을 시작하기 전에 활성 포그라운드 프로세스를 종료하기 위해 `break` 명령이 전송됩니다.",
	"cmake-tools.configuration.cmake.launchBehavior.newTerminal.markdownDescriptions": "새 터미널 인스턴스가 만들어지고 대상이 해당 인스턴스에서 시작됩니다. 기존 터미널은 자동으로 정리되지 않습니다.",
	"cmake-tools.configuration.cmake.loadCompileCommands.description": "확장이 compile_commands.json을 읽어 단일 파일 컴파일을 사용하도록 설정할지 여부를 제어합니다.",
	"cmake-tools.command.cmake.projectStatus.update.title": "프로젝트 상태 새로 고침",
	"cmake-tools.command.cmake.pinnedCommands.add.title": "고정할 CMake 명령 추가",
	"cmake-tools.command.cmake.pinnedCommands.remove.title": "명령 고정 해제",
	"cmake-tools.command.cmake.pinnedCommands.run.title": "실행 명령",
	"cmake-tools.command.cmake.projectStatus.cleanConfigure.title": "캐시 삭제 및 다시 구성",
	"cmake-tools.command.cmake.projectStatus.selectTestPreset.title": "테스트 대상 설정",
	"cmake-tools.command.cmake.projectStatus.openVisibilitySettings.title": "표시 유형 설정 열기",
	"cmake-tools.debugger.label": "CMake 디버거",
	"cmake-tools.command.cmake.appendBuildDirectoryToWorkspace.title": "현재 작업 영역에 빌드 디렉터리 추가",
	"cmake-tools.command.workbench.action.tasks.configureTaskRunner.title": "작업 구성",
	"cmake-tools.command.workbench.action.tasks.runTask.title": "작업 실행"
}
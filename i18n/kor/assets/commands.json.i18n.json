/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"assets/commands.json.add_compile_definitions": "소스 파일 컴파일에 전처리기 정의를 추가합니다.",
	"assets/commands.json.add_compile_options": "소스 파일 컴파일에 옵션을 추가합니다.",
	"assets/commands.json.add_custom_command": "생성된 빌드 시스템에 사용자 지정 빌드 규칙을 추가합니다.",
	"assets/commands.json.add_custom_target": "항상 빌드되도록 출력 없이 대상을 추가합니다.",
	"assets/commands.json.add_definitions": "소스 파일 컴파일에 -D 정의 플래그를 추가합니다.",
	"assets/commands.json.add_dependencies": "최상위 대상 간에 종속성을 추가합니다.",
	"assets/commands.json.add_executable": "지정된 소스 파일을 사용하여 프로젝트에 실행 파일을 추가합니다.",
	"assets/commands.json.add_library": "지정된 소스 파일을 사용하여 프로젝트에 라이브러리를 추가합니다.",
	"assets/commands.json.add_link_options": "해당 명령이 호출된 후 추가되는 현재 디렉터리 및 하위 디렉터리의 실행 파일, 공유 라이브러리 또는 모듈 라이브러리 대상의 링크 단계에 옵션을 추가합니다.",
	"assets/commands.json.add_subdirectory": "빌드에 하위 디렉터리를 추가합니다.",
	"assets/commands.json.add_test": "ctest로 실행할 테스트를 프로젝트에 추가합니다.",
	"assets/commands.json.aux_source_directory": "디렉터리에서 모든 소스 파일을 찾습니다.",
	"assets/commands.json.block": "전용 변수 및/또는 정책 범위를 사용하여 명령 그룹을 평가합니다.",
	"assets/commands.json.break": "바깥쪽 foreach 또는 while 루프를 중단합니다.",
	"assets/commands.json.build_command": "현재 프로젝트를 빌드하는 명령줄을 가져옵니다. 이 명령줄은 CTest 모듈에서 주로 내부용으로 사용됩니다.",
	"assets/commands.json.build_name": "버전 3.0부터 허용되지 않습니다. CMake Policy CMP0036을 참조하세요.",
	"assets/commands.json.cmake_file_api": "CMake 파일 API <cmake-file-api(7)>로 상호작용을 사용하도록 설정.",
	"assets/commands.json.cmake_host_system_information": "다양한 호스트 시스템 정보를 쿼리합니다.",
	"assets/commands.json.cmake_language": "CMake 명령에서 메타 작업을 호출합니다.",
	"assets/commands.json.cmake_minimum_required": "Cmake의 최소 버전이 필요합니다.",
	"assets/commands.json.cmake_parse_arguments": "함수 또는 매크로 인수를 구문 분석합니다.",
	"assets/commands.json.cmake_path": "이 명령은 경로 조작을 위한 것입니다. 경로의 구문 측면만 처리되며 기본 파일 시스템과 어떤 종류의 상호 작용도 없습니다. 경로가 존재하지 않는 경로를 나타내거나 현재 파일 시스템 또는 플랫폼에 존재하도록 허용되지 않은 경로도 나타낼 수 있습니다. 파일 시스템과 상호 작용하는 작업의 경우 파일 명령을 참조하세요.",
	"assets/commands.json.cmake_policy": "CMake 정책 설정을 관리합니다. 정의된 정책은 cmake-policies 설명서를 참조하세요.",
	"assets/commands.json.configure_file": "파일을 다른 위치로 복사하고 해당 콘텐츠를 수정합니다.",
	"assets/commands.json.continue": "바깥쪽 foreach 또는 while 루프의 위쪽으로 계속합니다.",
	"assets/commands.json.create_test_sourcelist": "여러 작은 테스트를 단일 실행 파일로 연결하는 테스트 드라이버 프로그램을 만듭니다. 이는 필요한 총 크기를 줄이기 위해 큰 라이브러리를 사용하여 정적 실행 파일을 빌드할 때 유용합니다.",
	"assets/commands.json.ctest_build": "대시보드 클라이언트로 CTest 빌드 단계를 수행합니다.",
	"assets/commands.json.ctest_configure": "대시보드 클라이언트로 CTest 구성 단계를 수행합니다.",
	"assets/commands.json.ctest_coverage": "대시보드 클라이언트로 CTest 검사 단계를 수행합니다.",
	"assets/commands.json.ctest_empty_binary_directory": "이진 디렉터리를 비웁니다.",
	"assets/commands.json.ctest_memcheck": "대시보드 클라이언트로 CTest MemCheck 단계를 수행합니다.",
	"assets/commands.json.ctest_read_custom_files": "CTestCustom 파일을 읽습니다.",
	"assets/commands.json.ctest_run_script": "ctest -S 스크립트를 실행합니다.",
	"assets/commands.json.ctest_sleep": "일정 시간 동안 대기",
	"assets/commands.json.ctest_start": "지정된 모델의 테스트를 시작합니다.",
	"assets/commands.json.ctest_submit": "대시보드 클라이언트로 CTest 제출 단계를 수행합니다.",
	"assets/commands.json.ctest_test": "대시보드 클라이언트로 CTest 테스트 단계를 수행합니다.",
	"assets/commands.json.ctest_update": "대시보드 클라이언트로 CTest 업데이트 단계를 수행합니다.",
	"assets/commands.json.ctest_upload": "대시보드 클라이언트로 대시보드 서버에 파일을 업로드합니다.",
	"assets/commands.json.define_property": "사용자 지정 속성을 정의하고 문서화합니다.",
	"assets/commands.json.else": "if 블록의 else 부분을 시작합니다.",
	"assets/commands.json.elseif": "if 블록의 elseif 부분을 시작합니다.",
	"assets/commands.json.enable_language": "언어(CXX/C/OBJC/OBJCXX/Fortran/etc) 사용",
	"assets/commands.json.enable_testing": "현재 디렉터리 및 하위 디렉터리의 테스트를 사용하도록 설정합니다.",
	"assets/commands.json.endblock": "블록에서 명령 목록을 종료하고 블록 명령으로 생성된 범위를 제거합니다.",
	"assets/commands.json.endforeach": "foreach 블록에서 명령 목록을 종료합니다.",
	"assets/commands.json.endfunction": "함수 블록에서 명령 목록을 종료합니다.",
	"assets/commands.json.endif": "if 블록에서 명령 목록을 종료합니다.",
	"assets/commands.json.endmacro": "매크로 블록에서 명령 목록을 종료합니다.",
	"assets/commands.json.endwhile": "while 블록에서 명령 목록을 종료합니다.",
	"assets/commands.json.execute_process": "하나 이상의 자식 프로세스를 실행합니다.",
	"assets/commands.json.exec_program": "CMakeList.txt 파일을 처리하는 동안 실행 프로그램을 실행합니다.",
	"assets/commands.json.export": "외부 프로젝트의 대상 또는 패키지를 내보내어 설치할 필요 없이 현재 프로젝트의 빌드 트리에서 바로 사용합니다.",
	"assets/commands.json.export_library_dependencies": "버전 3.0부터 허용되지 않습니다. CMake Policy CMP0033을 참조하세요.",
	"assets/commands.json.file": "파일 조작 명령입니다.",
	"assets/commands.json.find_file": "이 명령은 명명된 파일의 전체 경로를 찾는 데 사용됩니다.",
	"assets/commands.json.find_library": "이 명령은 라이브러리를 찾는 데 사용됩니다.",
	"assets/commands.json.find_package": "패키지(일반적으로 프로젝트 외부에서 제공)를 찾고 패키지별 세부 정보를 로드합니다. 이 명령에 대한 호출은 종속성 공급자가 가로챌 수도 있습니다.",
	"assets/commands.json.find_path": "이 명령은 명명된 파일을 포함하는 디렉터리를 찾는 데 사용됩니다.",
	"assets/commands.json.find_program": "이 명령은 프로그램을 찾는 데 사용됩니다.",
	"assets/commands.json.fltk_wrap_ui": "FLTK 사용자 인터페이스 래퍼를 만듭니다.",
	"assets/commands.json.foreach": "목록에서 각 값에 대해 명령 그룹을 평가합니다.",
	"assets/commands.json.function": "나중에 명령으로 호출하기 위해 함수 기록을 시작합니다.",
	"assets/commands.json.get_cmake_property": "CMake 인스턴스의 전역 속성을 가져옵니다.",
	"assets/commands.json.get_directory_property": "DIRECTORY 범위의 속성을 가져옵니다.",
	"assets/commands.json.get_filename_component": "전체 파일 이름의 특정 구성 요소를 가져옵니다.",
	"assets/commands.json.get_property": "속성을 가져옵니다.",
	"assets/commands.json.get_source_file_property": "소스 파일의 속성을 가져옵니다.",
	"assets/commands.json.get_target_property": "대상에서 속성을 가져옵니다.",
	"assets/commands.json.get_test_property": "테스트 속성을 가져옵니다.",
	"assets/commands.json.if": "명령 그룹을 조건부로 실행합니다.",
	"assets/commands.json.include": "파일 또는 모듈에서 CMake 코드를 로드하고 실행합니다.",
	"assets/commands.json.include_directories": "빌드에 포함 디렉터리를 추가합니다.",
	"assets/commands.json.include_external_msproject": "작업 영역에 외부 Microsoft 프로젝트 파일을 포함합니다.",
	"assets/commands.json.include_guard": "현재 CMake에서 처리되는 파일의 포함 가드를 제공합니다.",
	"assets/commands.json.include_regular_expression": "종속성 검사에 사용되는 정규식을 설정합니다.",
	"assets/commands.json.install": "설치 시간에 실행할 규칙을 지정합니다.",
	"assets/commands.json.install_files": "이 명령은 install 명령으로 대체되었습니다. 이전 CMake 코드와의 호환성을 위해 제공됩니다. FILES 형식은 설치 명령의 FILES 형식으로 직접 대체됩니다. regexp 형식은 file 명령의 GLOB 형식을 사용하여 보다 명확하게 표현할 수 있습니다.",
	"assets/commands.json.install_programs": "이 명령은 install 명령으로 대체되었습니다. 이전 CMake 코드와의 호환성을 위해 제공됩니다. FILES 형식은 설치 명령의 PROGRAMS 형식으로 직접 대체됩니다. regexp 형식은 file 명령의 GLOB 형식을 사용하여 보다 명확하게 표현할 수 있습니다.",
	"assets/commands.json.install_targets": "이 명령은 install 명령으로 대체되었습니다. 이전 CMake 코드와의 호환성을 위해 제공됩니다.",
	"assets/commands.json.link_directories": "링커가 라이브러리를 찾을 디렉터리를 추가합니다.",
	"assets/commands.json.link_libraries": "나중에 추가된 모든 대상에 라이브러리를 연결합니다.",
	"assets/commands.json.list": "세미콜론으로 구분된 목록에 대한 작업입니다.",
	"assets/commands.json.load_cache": "다른 프로젝트 CMake 캐시의 값에 로드됩니다.",
	"assets/commands.json.load_command": "버전 3.0부터 허용되지 않습니다. CMake Policy CMP0031을 참조하세요.",
	"assets/commands.json.macro": "나중에 명령으로 호출하기 위해 매크로 기록을 시작합니다.",
	"assets/commands.json.make_directory": "지정된 디렉터리를 만듭니다. 전체 경로를 지정해야 합니다. 존재하지 않는 부모 디렉터리도 생성됩니다. 주의해서 사용하세요.",
	"assets/commands.json.mark_as_advanced": "cmake 캐시 변수를 고급으로 표시합니다.",
	"assets/commands.json.math": "수학 식을 평가합니다.",
	"assets/commands.json.message": "메시지를 기록합니다.",
	"assets/commands.json.option": "사용자가 선택적으로 선택할 수 있는 부울 옵션을 제공하세요.",
	"assets/commands.json.output_required_files": "버전 3.0부터 허용되지 않습니다. CMake Policy CMP0032를 참조하세요.",
	"assets/commands.json.project": "프로젝트의 이름을 설정합니다.",
	"assets/commands.json.qt_wrap_cpp": "수동으로 Qt 래퍼를 만듭니다.",
	"assets/commands.json.qt_wrap_ui": "수동으로 Qt 사용자 인터페이스 래퍼를 만듭니다.",
	"assets/commands.json.remove": "변수 VAR에서 VALUE를 제거합니다. 일반적으로 벡터(예: 세미콜론으로 구분된 목록)에서 항목을 제거하는 데 사용됩니다. VALUE가 확장됩니다.",
	"assets/commands.json.remove_definitions": "add_definitions로 추가된 -D 정의 플래그를 제거합니다.",
	"assets/commands.json.return": "파일, 디렉터리 또는 함수에서 반환됩니다.",
	"assets/commands.json.separate_arguments": "명령줄 인수를 세미콜론으로 구분된 목록으로 구문 분석합니다.",
	"assets/commands.json.set": "일반, 캐시 또는 환경 변수를 제공된 값으로 설정합니다. 일반 변수와 캐시 항목의 범위 및 상호 작용에 대해서는 cmake-language(7) 변수 설명서를 참조하세요.",
	"assets/commands.json.set_directory_properties": "현재 디렉터리 및 하위 디렉터리의 속성을 설정합니다.",
	"assets/commands.json.set_property": "지정된 범위에서 명명된 속성을 설정합니다.",
	"assets/commands.json.set_source_files_properties": "소스 파일에는 빌드 방법에 영향을 주는 속성이 포함될 수 있습니다.",
	"assets/commands.json.set_target_properties": "대상에는 빌드 방법에 영향을 주는 속성이 포함될 수 있습니다.",
	"assets/commands.json.set_tests_properties": "테스트 속성을 설정합니다.",
	"assets/commands.json.site_name": "지정된 변수를 컴퓨터 이름으로 설정합니다.",
	"assets/commands.json.source_group": "IDE 프로젝트 생성 시 소스 파일 그룹을 정의합니다. 소스 그룹을 만들기 위한 두 가지 시그니처가 있습니다.",
	"assets/commands.json.string": "문자열 작업입니다.",
	"assets/commands.json.subdirs": "하위 디렉터리 목록을 빌드에 추가합니다.",
	"assets/commands.json.subdir_depends": "버전 3.0부터 허용되지 않습니다. CMake Policy CMP0029를 참조하세요.",
	"assets/commands.json.target_compile_definitions": "대상에 컴파일 정의를 추가합니다.",
	"assets/commands.json.target_compile_features": "대상에 예상되는 컴파일러 기능을 추가합니다.",
	"assets/commands.json.target_compile_options": "대상에 컴파일 옵션을 추가합니다.",
	"assets/commands.json.target_include_directories": "대상에 포함 디렉터리를 추가합니다.",
	"assets/commands.json.target_link_directories": "대상에 링크 디렉터리를 추가합니다.",
	"assets/commands.json.target_link_libraries": "지정된 대상 및/또는 해당 종속성을 연결할 경우 사용할 라이브러리 또는 플래그를 지정합니다. 연결된 라이브러리 대상의 사용 요구 사항이 전파됩니다. 대상 종속성의 사용 요구 사항은 자체 소스의 컴파일에 영향을 줍니다.",
	"assets/commands.json.target_link_options": "실행 파일, 공유 라이브러리 또는 모듈 라이브러리 대상의 링크 단계에 옵션을 추가합니다.",
	"assets/commands.json.target_precompile_headers": "미리 컴파일할 헤더 파일 목록을 추가합니다.",
	"assets/commands.json.target_sources": "대상에 소스를 추가합니다.",
	"assets/commands.json.try_compile": "일부 코드를 빌드해 보세요.",
	"assets/commands.json.try_run": "컴파일 후 일부 코드를 실행해 보세요.",
	"assets/commands.json.unset": "변수, 캐시 변수 또는 환경 변수를 설정 해제합니다.",
	"assets/commands.json.use_mangled_mesa": "버전 3.0부터 허용되지 않습니다. CMake Policy CMP0030을 참조하세요.",
	"assets/commands.json.utility_source": "버전 3.0부터 허용되지 않습니다. CMake Policy CMP0034를 참조하세요.",
	"assets/commands.json.variable_requires": "버전 3.0부터 허용되지 않습니다. CMake Policy CMP0035를 참조하세요.",
	"assets/commands.json.variable_watch": "변경할 CMake 변수를 봅니다.",
	"assets/commands.json.while": "조건이 true인 동안 명령 그룹을 평가합니다.",
	"assets/commands.json.write_file": "첫 번째 인수는 파일 이름이며 나머지 인수는 기록할 메시지입니다. 인수 APPEND를 지정하면 메시지가 추가됩니다."
}
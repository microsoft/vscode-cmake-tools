/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"assets/variables.json.ANDROID": "Definido como 1 quando o sistema de destino (CMAKE_SYSTEM_NAME) é o Android.",
	"assets/variables.json.APPLE": "Definido como Verdadeiro quando o sistema de destino for uma plataforma Apple (macOS, iOS, tvOS, visionOS ou watchOS).",
	"assets/variables.json.BORLAND": "True se o compilador Borland está sendo usado.",
	"assets/variables.json.BSD": "Definir como um valor de cadeia de caracteres quando o sistema de destino for BSD. Esse valor pode ser um dos seguintes: DragonFlyBSD, FreeBSD, OpenBSD ou NetBSD.",
	"assets/variables.json.BUILD_SHARED_LIBS": "Informe a add_library para usar bibliotecas SHARED como padrão, em vez de bibliotecas STATIC, quando chamado sem nenhum tipo de biblioteca explícito.",
	"assets/variables.json.CACHE": "Operador para ler variáveis de cache.",
	"assets/variables.json.CMAKE_ABSOLUTE_DESTINATION_FILES": "Lista de arquivos que foram instalados usando um caminho de DESTINO ABSOLUTO.",
	"assets/variables.json.CMAKE_ADD_CUSTOM_COMMAND_DEPENDS_EXPLICIT_ONLY": "Se deve habilitar a opção DEPENDS_EXPLICIT_ONLY por padrão em add_custom_command.",
	"assets/variables.json.CMAKE_ADSP_ROOT": "Quando :ref:`Cross Compiling for ADSP SHARC/Blackfin`, essa variável mantém o caminho absoluto para a instalação mais recente de CCES ou VDSP++. Espera-se que o diretório contenha os compiladores cc21k.exe e ccblkfn.exe. Isso será definido automaticamente se uma instalação padrão de CCES ou VDSP++ for encontrada.",
	"assets/variables.json.CMAKE_AIX_EXPORT_ALL_SYMBOLS": "Valor padrão da propriedade de destino AIX_EXPORT_ALL_SYMBOLS. Esta variável é usada para inicializar a propriedade em cada destino assim que ela é criada.",
	"assets/variables.json.CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS": "Valor padrão da propriedade de destino ANDROID_ANT_ADDITIONAL_OPTIONS. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_API": "No caso de Compilação Cruzada para Android com o NVIDIA Nsight Tegra Visual Studio Edition, essa variável pode ser definida para especificar o valor padrão da propriedade de destino ANDROID_API. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_API_MIN": "Valor padrão da propriedade de destino ANDROID_API_MIN. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_ARCH": "No caso de Compilação Cruzada para Android com o NVIDIA Nsight Tegra Visual Studio Edition, essa variável pode ser definida para especificar o valor padrão da propriedade de destino ANDROID_ARCH. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_ARCH_ABI": "No caso de Compilação Cruzada para Android, essa variável especifica a arquitetura de destino e o ABI a serem usados. Os valores válidos são:",
	"assets/variables.json.CMAKE_ANDROID_ARM_MODE": "No caso de Compilação Cruzada para Android, se a CMAKE_ANDROID_ARCH_ABI estiver definida como uma das arquiteturas armeabi, defina a CMAKE_ANDROID_ARM_MODE como ON para direcionar a processadores ARM de 32 bits (-marm). Caso contrário, o padrão será direcionar aos processadores Thumb de 16 bits (-mthumb).",
	"assets/variables.json.CMAKE_ANDROID_ARM_NEON": "No caso de Compilação Cruzada para Android, se a CMAKE_ANDROID_ARCH_ABI estiver definida como armeabi-v7a, defina CMAKE_ANDROID_ARM_NEON como ON para direcionar a dispositivos ARM NEON.",
	"assets/variables.json.CMAKE_ANDROID_ASSETS_DIRECTORIES": "Valor padrão da propriedade de destino ANDROID_ASSETS_DIRECTORIES. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_EXCEPTIONS": "Quando se faz a Compilação Cruzada para Android com o NDK, esta variável pode ser definida para especificar se as exceções serão habilitadas.",
	"assets/variables.json.CMAKE_ANDROID_GUI": "Valor padrão da propriedade de destino ANDROID_GUI de executáveis. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_JAR_DEPENDENCIES": "Valor padrão da propriedade de destino ANDROID_JAR_DEPENDENCIES. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_JAR_DIRECTORIES": "Valor padrão da propriedade de destino ANDROID_JAR_DIRECTORIES. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_JAVA_SOURCE_DIR": "Valor padrão da propriedade de destino ANDROID_JAVA_SOURCE_DIR. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_NATIVE_LIB_DEPENDENCIES": "Valor padrão da propriedade de destino ANDROID_NATIVE_LIB_DEPENDENCIES. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_NATIVE_LIB_DIRECTORIES": "Valor padrão da propriedade de destino ANDROID_NATIVE_LIB_DIRECTORIES. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_NDK": "No caso de Compilação Cruzada para Android com o NDK, essa variável contém o caminho absoluto para o diretório raiz do NDK. O diretório precisa conter um subdiretório de plataformas com os diretórios android-<api>.",
	"assets/variables.json.CMAKE_ANDROID_NDK_DEPRECATED_HEADERS": "No caso de Compilação Cruzada para Android com o NDK, essa variável pode ser definida para especificar se deseja usar os cabeçalhos por nível de API preteridos em vez dos cabeçalhos unificados.",
	"assets/variables.json.CMAKE_ANDROID_NDK_TOOLCHAIN_HOST_TAG": "No caso de Compilação Cruzada para Android com o NDK, essa variável fornece a \"tag do host\" do NDK usada para construir o caminho para as cadeias de ferramentas predefinidas em execução no host.",
	"assets/variables.json.CMAKE_ANDROID_NDK_TOOLCHAIN_VERSION": "No caso de Compilação Cruzada para Android com o NDK, essa variável pode ser definida para especificar a versão da cadeia de ferramentas a ser usada como o compilador.",
	"assets/variables.json.CMAKE_ANDROID_NDK_VERSION": "Quando se faz a Compilação Cruzada para Android com o NDK e se usa uma versão 11 ou superior do NDK do Android, esta variável é fornecida pelo CMake para relatar o número de versão do NDK.",
	"assets/variables.json.CMAKE_ANDROID_PROCESS_MAX": "Valor padrão da propriedade de destino ANDROID_PROCESS_MAX. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_PROGUARD": "Valor padrão da propriedade de destino ANDROID_PROGUARD. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_PROGUARD_CONFIG_PATH": "Valor padrão da propriedade de destino ANDROID_PROGUARD_CONFIG_PATH. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_RTTI": "Quando se faz a Compilação Cruzada para Android com o NDK, esta variável pode ser definida para especificar se o RTTI será habilitado.",
	"assets/variables.json.CMAKE_ANDROID_SECURE_PROPS_PATH": "Valor padrão da propriedade de destino ANDROID_SECURE_PROPS_PATH. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_SKIP_ANT_STEP": "Valor padrão da propriedade de destino ANDROID_SKIP_ANT_STEP. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_ANDROID_STANDALONE_TOOLCHAIN": "No caso de Compilação Cruzada para Android com uma Cadeia de Ferramentas Autônoma, essa variável contém o caminho absoluto para o diretório raiz da cadeia de ferramentas. O diretório especificado precisa conter um subdiretório sysroot.",
	"assets/variables.json.CMAKE_ANDROID_STL_TYPE": "No caso de Compilação Cruzada para Android com o NVIDIA Nsight Tegra Visual Studio Edition, essa variável pode ser definida para especificar o valor padrão da propriedade de destino ANDROID_STL_TYPE. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_APPBUNDLE_PATH": "Lista separada por ponto e vírgula de diretórios que especifica um caminho de pesquisa para os lotes de aplicativos do macOS usados pelos comandos find_program e find_package.",
	"assets/variables.json.CMAKE_APPLE_SILICON_PROCESSOR": "Em hosts Apple Silicon que executam o macOS, configure esta variável para informar ao CMake qual arquitetura usar para CMAKE_HOST_SYSTEM_PROCESSOR. O valor precisa ser arm64 ou x86_64.",
	"assets/variables.json.CMAKE_AR": "Nome da ferramenta de arquivamento de bibliotecas estáticas.",
	"assets/variables.json.CMAKE_ARCHIVE_OUTPUT_DIRECTORY": "Local no qual todos os arquivos de destino de ARQUIVO MORTO devem ser colocados quando compilados.",
	"assets/variables.json.CMAKE_ARCHIVE_OUTPUT_DIRECTORY_CONFIG": "Local no qual todos os arquivos de destino de ARQUIVO MORTO devem ser colocados quando compilados para uma configuração específica.",
	"assets/variables.json.CMAKE_ARGC": "Número de argumentos de linha de comando passados ao CMake no modo de script.",
	"assets/variables.json.CMAKE_ARGV0": "Argumento de linha de comando passados ao CMake no modo de script.",
	"assets/variables.json.CMAKE_AUTOGEN_BETTER_GRAPH_MULTI_CONFIG": "Esta variável é usada para inicializar a propriedade AUTOGEN_BETTER_GRAPH_MULTI_CONFIG em todos os destinos conforme eles são criados. Confira essa propriedade de destino para obter informações adicionais.",
	"assets/variables.json.CMAKE_AUTOGEN_COMMAND_LINE_LENGTH_MAX": "Limite de comprimento de linha de comando para destinos autogen, ou seja, moc ou uic, que dispara o uso de arquivos de resposta no Windows em vez de passar todos os argumentos para a linha de comando.",
	"assets/variables.json.CMAKE_AUTOGEN_ORIGIN_DEPENDS": "Alterne para o encaminhamento de dependências de destino de origem para os destinos <ORIGIN>_autogen correspondentes.",
	"assets/variables.json.CMAKE_AUTOGEN_PARALLEL": "Número de processos moc ou uic paralelos a serem iniciados ao usar AUTOMOC e AUTOUIC.",
	"assets/variables.json.CMAKE_AUTOGEN_USE_SYSTEM_INCLUDE": "Essa variável é usada para inicializar a propriedade AUTOGEN_USE_SYSTEM_INCLUDE em todos os destinos à medida que eles são criados. Consulte essa propriedade de destino para obter informações adicionais.",
	"assets/variables.json.CMAKE_AUTOGEN_VERBOSE": "Define o detalhamento de AUTOMOC, AUTOUIC e AUTORCC. Um valor inteiro positivo ou um valor booliano true permite que os geradores AUTO* emitam informações de processamento adicionais.",
	"assets/variables.json.CMAKE_AUTOMOC": "Se deseja manipular o moc automaticamente para destinos Qt.",
	"assets/variables.json.CMAKE_AUTOMOC_COMPILER_PREDEFINES": "Esta variável é usada para inicializar a propriedade AUTOMOC_COMPILER_PREDEFINES em todos os destinos. Consulte essa propriedade de destino para obter mais informações.",
	"assets/variables.json.CMAKE_AUTOMOC_DEPEND_FILTERS": "Definições de filtro usadas pelo CMAKE_AUTOMOC para extrair os nomes de arquivos do código-fonte como dependências adicionais do arquivo moc.",
	"assets/variables.json.CMAKE_AUTOMOC_EXECUTABLE": "Essa variável é usada para inicializar a propriedade AUTOMOC_EXECUTABLE em todos os destinos. Consulte essa propriedade de destino para obter informações adicionais.",
	"assets/variables.json.CMAKE_AUTOMOC_MACRO_NAMES": "Uma lista separada por ponto e vírgula de nomes de macro usados pelo CMAKE_AUTOMOC para determinar se um arquivo C++ precisa ser processado pelo moc.",
	"assets/variables.json.CMAKE_AUTOMOC_MOC_OPTIONS": "Opções adicionais para o moc ao usar o CMAKE_AUTOMOC.",
	"assets/variables.json.CMAKE_AUTOMOC_PATH_PREFIX": "Se a opção de prefixo de caminho -p deve ser gerada para o MOC em destinos de Qt habilitados para AUTOMOC.",
	"assets/variables.json.CMAKE_AUTOMOC_RELAXED_MODE": "Alternar entre o modo estrito e ameno do automoc.",
	"assets/variables.json.CMAKE_AUTORCC": "Se deseja manipular o rcc automaticamente para destinos Qt.",
	"assets/variables.json.CMAKE_AUTORCC_EXECUTABLE": "Essa variável é usada para inicializar a propriedade AUTORCC_EXECUTABLE em todos os destinos. Consulte essa propriedade de destino para obter informações adicionais.",
	"assets/variables.json.CMAKE_AUTORCC_OPTIONS": "Opções adicionais para o rcc ao usar o CMAKE_AUTORCC.",
	"assets/variables.json.CMAKE_AUTOUIC": "Se deseja manipular o uic automaticamente para destinos Qt.",
	"assets/variables.json.CMAKE_AUTOUIC_EXECUTABLE": "Essa variável é usada para inicializar a propriedade AUTOUIC_EXECUTABLE em todos os destinos. Consulte essa propriedade de destino para obter informações adicionais.",
	"assets/variables.json.CMAKE_AUTOUIC_OPTIONS": "Opções adicionais para o uic ao usar o CMAKE_AUTOUIC.",
	"assets/variables.json.CMAKE_AUTOUIC_SEARCH_PATHS": "Lista de caminhos de pesquisa usada pelo CMAKE_AUTOUIC para localizar os arquivos .ui incluídos.",
	"assets/variables.json.CMAKE_BACKWARDS_COMPATIBILITY": "Preterido. Consulte a documentação da Política do CMake CMP0001.",
	"assets/variables.json.CMAKE_BINARY_DIR": "O caminho para o nível superior da árvore de build.",
	"assets/variables.json.CMAKE_BUILD_RPATH": "Uma lista separada por ponto e vírgula que especifica as entradas de RPATH (caminho de runtime) a serem adicionadas aos binários vinculados na árvore de build (para plataformas compatíveis). As entradas não serão usadas para binários na árvore de instalação. Confira também a variável CMAKE_INSTALL_RPATH.",
	"assets/variables.json.CMAKE_BUILD_RPATH_USE_ORIGIN": "Se deseja usar caminhos relativos para o RPATH de build.",
	"assets/variables.json.CMAKE_BUILD_TOOL": "Esta variável existe somente para manter a compatibilidade com versões anteriores. Ela contém o mesmo valor que CMAKE_MAKE_PROGRAM. Use essa variável em seu lugar.",
	"assets/variables.json.CMAKE_BUILD_TYPE": "Especifica o tipo de build em geradores de configuração única (por exemplo, Geradores Makefile ou Ninja). Os valores típicos incluem Debug, Release, RelwithDebInfo e MinSizeRel, mas os tipos de compilação personalizados também podem ser definidos.",
	"assets/variables.json.CMAKE_BUILD_WITH_INSTALL_NAME_DIR": "Se deseja usar INSTALL_NAME_DIR nos destinos da árvore de build.",
	"assets/variables.json.CMAKE_BUILD_WITH_INSTALL_RPATH": "Usar o caminho de instalação do RPATH.",
	"assets/variables.json.CMAKE_CACHEFILE_DIR": "Esta variável é usada internamente pelo CMake e não pode ser definida durante a primeira configuração de uma árvore de compilações. Quando definida, tem o mesmo valor que CMAKE_BINARY_DIR. Use essa variável em vez disso.",
	"assets/variables.json.CMAKE_CACHE_MAJOR_VERSION": "Versão principal do CMake usada para criar o arquivo CMakeCache.txt",
	"assets/variables.json.CMAKE_CACHE_MINOR_VERSION": "Versão secundária do CMake usada para criar o arquivo CMakeCache.txt",
	"assets/variables.json.CMAKE_CACHE_PATCH_VERSION": "Versão de patch do CMake usada para criar o arquivo CMakeCache.txt",
	"assets/variables.json.CMAKE_CFG_INTDIR": "Referência de tempo de build ao subdiretório de saída por configuração.",
	"assets/variables.json.CMAKE_CLANG_VFS_OVERLAY": "Quando se faz a compilação cruzada para Windows com Clang-CL, esta variável pode ser um caminho absoluto apontando para um arquivo de Clang do sistema de arquivos virtual YAML, o que habilitará Clang-CL para resolver nomes de cabeçalhos do Windows em um sistema de arquivos que diferencia maiúsculas de minúsculas.",
	"assets/variables.json.CMAKE_CL_64": "Não recomendado. Use CMAKE_SIZEOF_VOID_P.",
	"assets/variables.json.CMAKE_CODEBLOCKS_COMPILER_ID": "Alterar a ID do compilador nos arquivos de projeto do CodeBlocks gerados.",
	"assets/variables.json.CMAKE_CODEBLOCKS_EXCLUDE_EXTERNAL_FILES": "Alterar a maneira como o gerador de CodeBlocks cria arquivos de projeto.",
	"assets/variables.json.CMAKE_CODELITE_USE_TARGETS": "Alterar a maneira como o gerador de CodeLite cria projectfiles.",
	"assets/variables.json.CMAKE_COLOR_DIAGNOSTICS": "Habilite o diagnóstico de cores em todo o processo.",
	"assets/variables.json.CMAKE_COLOR_MAKEFILE": "Habilita a saída com cores ao usar os Geradores de Makefile.",
	"assets/variables.json.CMAKE_COMMAND": "O caminho completo para o executável do cmake.",
	"assets/variables.json.CMAKE_COMPILER_2005": "Usando o compilador do Visual Studio 2005 da Microsoft",
	"assets/variables.json.CMAKE_COMPILER_IS_GNUCC": "True se o compilador C for GNU.",
	"assets/variables.json.CMAKE_COMPILER_IS_GNUCXX": "True se o compilador C++ (CXX) for GNU.",
	"assets/variables.json.CMAKE_COMPILER_IS_GNUG77": "True se o compilador Fortran for GNU.",
	"assets/variables.json.CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY": "Diretório de saída dos arquivos .pdb de símbolo de depuração da MS gerados pelo compilador durante a compilação de arquivos de origem.",
	"assets/variables.json.CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY_CONFIG": "Diretório de saída de arquivos .pdb de símbolo de depuração da MS gerados pelo compilador durante a compilação de arquivos de origem, por configuração.",
	"assets/variables.json.CMAKE_COMPILE_WARNING_AS_ERROR": "Especifique se os avisos devem ser tratados na compilação como erros.",
	"assets/variables.json.CMAKE_CONFIGURATION_TYPES": "Especifica os tipos de compilação disponíveis (configurações) em geradores de várias configurações (por exemplo, Visual Studio, Xcode ou Ninja Multi-Config). Entradas típicas incluem Debug, Release, RelwithDebInfo e MinSizeRel, mas os tipos de compilação personalizados também podem ser definidos.",
	"assets/variables.json.CMAKE_CONFIG_POSTFIX": "Nome de arquivo padrão pós-fixado para as bibliotecas na configuração <CONFIG>.",
	"assets/variables.json.CMAKE_CPACK_COMMAND": "Caminho completo para o comando do cpack instalado com o CMake.",
	"assets/variables.json.CMAKE_CROSSCOMPILING": "Essa variável é definida pelo CMake para indicar se ele está fazendo compilação cruzada, mas observe as limitações discutidas abaixo.",
	"assets/variables.json.CMAKE_CROSSCOMPILING_EMULATOR": "Esta variável é usada somente quando CMAKE_CROSSCOMPILING está habilitada. Ela deve apontar para um comando no sistema host que possa executar um executável compilado para o sistema de destino.",
	"assets/variables.json.CMAKE_CROSS_CONFIGS": "Especifica uma lista de configurações separadas por ponto e vírgula disponíveis de todos os arquivos build-<Config>.ninja no gerador Ninja Multi-Config. Essa variável ativa o modo de configuração cruzada. Os destinos de cada configuração especificada nesta variável podem ser compilados de qualquer arquivo build-<Config>.ninja. Os comandos personalizados usarão a configuração nativa para build-<Config>.ninja. Se ele estiver definido como todos, todas as configurações de CMAKE_CONFIGURATION_TYPES serão de configuração cruzada. Se não estiver especificado ou vazio, cada arquivo build-<Config>.ninja só conterá regras de build para sua própria configuração.",
	"assets/variables.json.CMAKE_CTEST_ARGUMENTS": "Defina isso como uma lista separada por ponto e vírgula dos argumentos de linha de comando para passar para CTest ao executar testes por meio do destino de teste (ou RUN_TESTS) do sistema de build gerado.",
	"assets/variables.json.CMAKE_CTEST_COMMAND": "Caminho completo para o comando do ctest instalado com o CMake.",
	"assets/variables.json.CMAKE_CUDA_ARCHITECTURES": "Valor padrão da propriedade CUDA_ARCHITECTURES de destinos.",
	"assets/variables.json.CMAKE_CUDA_COMPILE_FEATURES": "Lista de recursos conhecidos pelo compilador do CUDA",
	"assets/variables.json.CMAKE_CUDA_EXTENSIONS": "Valor padrão para a propriedade de destino CUDA_EXTENSIONS se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_CUDA_HOST_COMPILER": "Esse é o nome original específico do CUDA para a variável mais geral CMAKE_<LANG>_HOST_COMPILER. Consulte essa última para obter detalhes.",
	"assets/variables.json.CMAKE_CUDA_RESOLVE_DEVICE_SYMBOLS": "Valor padrão para a propriedade de destino CUDA_RESOLVE_DEVICE_SYMBOLS quando definida. Por padrão, essa variável não está definida.",
	"assets/variables.json.CMAKE_CUDA_RUNTIME_LIBRARY": "Selecione a biblioteca de runtime CUDA a ser usada ao compilar e vincular CUDA. Essa variável é usada para inicializar a propriedade CUDA_RUNTIME_LIBRARY em todos os destinos conforme eles são criados.",
	"assets/variables.json.CMAKE_CUDA_SEPARABLE_COMPILATION": "Valor padrão da propriedade de destino CUDA_SEPARABLE_COMPILATION. Esta variável é usada para inicializar a propriedade em cada destino assim que ela é criada.",
	"assets/variables.json.CMAKE_CUDA_STANDARD": "Valor padrão para a propriedade de destino CUDA_STANDARD se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_CUDA_STANDARD_REQUIRED": "Valor padrão para a propriedade de destino CUDA_STANDARD_REQUIRED se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES": "Quando a linguagem CUDA estiver habilitada, essa opção fornecerá uma lista separada por ponto e vírgula de diretórios de inclusão fornecidos pelo Kit de Ferramentas do CUDA. O valor pode ser útil para que os arquivos de origem C++ incluam cabeçalhos CUDA.",
	"assets/variables.json.CMAKE_CURRENT_BINARY_DIR": "O caminho para o diretório de binário que está sendo processado no momento.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION": "Ao executar o código dentro de uma função, essa variável contém o nome da função atual. Pode ser útil para mensagens de diagnóstico ou de depuração.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION_LIST_DIR": "Ao executar o código dentro de uma função, essa variável contém o diretório completo do listfile que definiu a função atual.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION_LIST_FILE": "Ao executar o código dentro de uma função, essa variável contém o caminho completo para o listfile que definiu a função atual.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION_LIST_LINE": "Ao executar o código dentro de uma função, essa variável contém o número de linha em listfile em que a função atual foi definida.",
	"assets/variables.json.CMAKE_CURRENT_LIST_DIR": "O diretório completo do listfile que está sendo processado no momento.",
	"assets/variables.json.CMAKE_CURRENT_LIST_FILE": "Caminho completo para o listfile que está sendo processado no momento.",
	"assets/variables.json.CMAKE_CURRENT_LIST_LINE": "O número de linha do arquivo atual que está sendo processado.",
	"assets/variables.json.CMAKE_CURRENT_SOURCE_DIR": "O caminho para o diretório de origem que está sendo processado no momento.",
	"assets/variables.json.CMAKE_CXX_COMPILER_IMPORT_STD": "Uma lista de níveis padrão do C++ para os quais o suporte a import std existe para a cadeia de ferramentas C++ atual. O suporte para C++<NN> pode ser detectado usando um <NN> IN_LIST CMAKE_CXX_COMPILER_IMPORT_STD predicado com o comando if.",
	"assets/variables.json.CMAKE_CXX_COMPILE_FEATURES": "Lista de recursos conhecidos pelo compilador do C++",
	"assets/variables.json.CMAKE_CXX_EXTENSIONS": "Valor padrão para a propriedade de destino CXX_EXTENSIONS se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_CXX_MODULE_STD": "Se deve adicionar destinos de utilitário como dependências para destinos com pelo menos cxx_std_23 ou não.",
	"assets/variables.json.CMAKE_CXX_SCAN_FOR_MODULES": "Se é preciso verificar se há dependências de módulo nos arquivos de origem do C++.",
	"assets/variables.json.CMAKE_CXX_STANDARD": "Valor padrão para a propriedade de destino CXX_STANDARD se definido quando um destino é criado.",
	"assets/variables.json.CMAKE_CXX_STANDARD_REQUIRED": "Valor padrão para a propriedade de destino CXX_STANDARD_REQUIRED se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_C_COMPILE_FEATURES": "Lista de recursos conhecidos pelo compilador do C",
	"assets/variables.json.CMAKE_C_EXTENSIONS": "O valor padrão para a propriedade de destino C_EXTENSIONS se definido quando um destino é criado.",
	"assets/variables.json.CMAKE_C_STANDARD": "Valor padrão para a propriedade de destino C_STANDARD se definido quando um destino é criado.",
	"assets/variables.json.CMAKE_C_STANDARD_REQUIRED": "Valor padrão para a propriedade de destino C_STANDARD_REQUIRED se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_DEBUG_POSTFIX": "Consulte a variável CMAKE_<CONFIG>_POSTFIX.",
	"assets/variables.json.CMAKE_DEBUG_TARGET_PROPERTIES": "Habilita a saída de rastreamento das propriedades de destino.",
	"assets/variables.json.CMAKE_DEFAULT_BUILD_TYPE": "Especifica a configuração a ser usada por padrão em um arquivo build.ninja no gerador Ninja Multi-Config. Se essa variável for especificada, build.ninja usará regras de build build-<Config>.ninja por padrão. Todos os comandos personalizados são executados com esta configuração. Se a variável não for especificada, o primeiro item de CMAKE_CONFIGURATION_TYPES será usado em seu lugar.",
	"assets/variables.json.CMAKE_DEFAULT_CONFIGS": "Especifica uma lista separada por ponto e vírgula das configurações a serem compiladas para um destino em build.ninja, caso nenhum sufixo de :<Config> seja especificado no gerador Ninja Multi-Config. Se ele estiver definido como todos, serão usadas todas as configurações de CMAKE_CROSS_CONFIGS. Se não for especificado, o padrão será CMAKE_DEFAULT_BUILD_TYPE.",
	"assets/variables.json.CMAKE_DEPENDS_IN_PROJECT_ONLY": "Quando definido como TRUE em um diretório, o sistema de build produzido pelos Geradores de Makefile será configurado para considerar somente as dependências em arquivos de origem que apareçam nos diretórios de origem ou de binários. As alterações nos arquivos de origem fora desses diretórios não causarão rebuilds.",
	"assets/variables.json.CMAKE_DEPENDS_USE_COMPILER": "Para os Geradores de Makefile, as dependências de origem agora são, para uma seleção de compiladores, geradas pelo próprio compilador. Ao definir essa variável com valor FALSE, você pode restaurar o comportamento herdado (ou seja, usando CMake para a descoberta de dependências).",
	"assets/variables.json.CMAKE_DIRECTORY_LABELS": "Especificar os rótulos do diretório atual.",
	"assets/variables.json.CMAKE_DISABLE_FIND_PACKAGE_PackageName": "Variável para desabilitar as chamadas de find_package.",
	"assets/variables.json.CMAKE_DISABLE_PRECOMPILE_HEADERS": "Valor padrão de DISABLE_PRECOMPILE_HEADERS de destinos.",
	"assets/variables.json.CMAKE_DLL_NAME_WITH_SOVERSION": "Essa variável é usada para inicializar a propriedade DLL_NAME_WITH_SOVERSION em destinos de biblioteca compartilhada para a plataforma Windows, que é selecionada quando a variável WIN32 está definida.",
	"assets/variables.json.CMAKE_DL_LIBS": "Nome da biblioteca que contém o dlopen e o dlclose.",
	"assets/variables.json.CMAKE_DOTNET_SDK": "Valor padrão para a propriedade DOTNET_SDK dos destinos.",
	"assets/variables.json.CMAKE_DOTNET_TARGET_FRAMEWORK": "Valor padrão da propriedade DOTNET_TARGET_FRAMEWORK de destinos.",
	"assets/variables.json.CMAKE_DOTNET_TARGET_FRAMEWORK_VERSION": "Valor padrão da propriedade DOTNET_TARGET_FRAMEWORK_VERSION de destinos.",
	"assets/variables.json.CMAKE_ECLIPSE_GENERATE_LINKED_RESOURCES": "Esta variável de cache é usada pelo gerador de projeto do Eclipse. Confira cmake-generators.",
	"assets/variables.json.CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT": "Esta variável de cache é usada pelo gerador de projeto do Eclipse. Confira cmake-generators.",
	"assets/variables.json.CMAKE_ECLIPSE_MAKE_ARGUMENTS": "Esta variável de cache é usada pelo gerador de projeto do Eclipse. Confira cmake-generators.",
	"assets/variables.json.CMAKE_ECLIPSE_RESOURCE_ENCODING": "Essa variável de cache informa ao gerador de projetos do Eclipse CDT4 que defina a codificação de recurso para o valor especificado em arquivos de projeto gerados. Se nenhum valor for fornecido, nenhuma codificação será definida.",
	"assets/variables.json.CMAKE_ECLIPSE_VERSION": "Esta variável de cache é usada pelo gerador de projeto do Eclipse. Confira cmake-generators.",
	"assets/variables.json.CMAKE_EDIT_COMMAND": "Caminho completo para cmake-gui ou ccmake. Definido somente para geradores de Makefile e Geradores Ninja quando não estiver usando nenhum Gerador Extra.",
	"assets/variables.json.CMAKE_ENABLE_EXPORTS": "Especifique se os executáveis exportam símbolos para módulos carregáveis.",
	"assets/variables.json.CMAKE_ERROR_DEPRECATED": "Se deseja emitir erros para uma funcionalidade preterida.",
	"assets/variables.json.CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION": "Solicite que o script cmake_install.cmake informe um erro assim que um arquivo com o DESTINO DE INSTALAÇÃO absoluto for encontrado.",
	"assets/variables.json.CMAKE_EXECUTABLE_ENABLE_EXPORTS": "Especifique se os executáveis exportam símbolos para módulos carregáveis.",
	"assets/variables.json.CMAKE_EXECUTABLE_SUFFIX": "O sufixo dos executáveis nesta plataforma.",
	"assets/variables.json.CMAKE_EXECUTABLE_SUFFIX_LANG": "O sufixo a ser usado para o final de um nome de arquivo executável da arquitetura de destino do compilador < LANG>, se houver.",
	"assets/variables.json.CMAKE_EXECUTE_PROCESS_COMMAND_ECHO": "Se esta variável for definida como STDERR, STDOUT ou NONE, os comandos em chamadas execute_process serão impressos em stderr ou stdout ou não serão impressos.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS": "Os sinalizadores de vinculador a serem usados para criar executáveis.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS_CONFIG": "Os sinalizadores a serem usados ao vincular um executável.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS_CONFIG_INIT": "O valor usado para inicializar a entrada de cache CMAKE_EXE_LINKER_FLAGS_ na primeira vez em que uma árvore de build é configurada. Essa variável deve ser definida por um arquivo de cadeia de ferramentas. O CMake pode preceder ou acrescentar conteúdo ao valor com base no ambiente e na plataforma de destino.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS_INIT": "O valor usado para inicializar a entrada de cache CMAKE_EXE_LINKER_FLAGS na primeira vez em que uma árvore de build é configurada. Essa variável deve ser definida por um arquivo de cadeia de ferramentas. O CMake pode preceder ou acrescentar conteúdo ao valor com base no ambiente e na plataforma de destino.",
	"assets/variables.json.CMAKE_EXPORT_COMPILE_COMMANDS": "Habilitar/Desabilitar a saída de comandos de compilação durante a geração.",
	"assets/variables.json.CMAKE_EXPORT_FIND_PACKAGE_NAME": "Inicializa o valor de EXPORT_FIND_PACKAGE_NAME.",
	"assets/variables.json.CMAKE_EXPORT_NO_PACKAGE_REGISTRY": "Desabilitar o comando exportar quando CMP0090 não estiver definido como NEW.",
	"assets/variables.json.CMAKE_EXPORT_PACKAGE_REGISTRY": "Habilita o comando exportar quando CMP0090 está definido como NEW.",
	"assets/variables.json.CMAKE_EXTRA_GENERATOR": "O gerador extra usado para compilar o projeto. Confira cmake-generators.",
	"assets/variables.json.CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES": "Sufixos adicionais para bibliotecas compartilhadas.",
	"assets/variables.json.CMAKE_FIND_APPBUNDLE": "Esta variável afeta como os comandos find_* escolhem entre Lotes de Aplicativos do macOS e componentes de pacote do estilo do Unix.",
	"assets/variables.json.CMAKE_FIND_DEBUG_MODE": "Imprimir informações de chamada de localização adicionais para os seguintes comandos para erro padrão:",
	"assets/variables.json.CMAKE_FIND_FRAMEWORK": "Esta variável afeta como os comandos find_* escolhem entre Estruturas do macOS e componentes de pacote do estilo do Unix.",
	"assets/variables.json.CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX": "Especificar um <suffix> para informar ao comando find_library que ele deve pesquisar em um diretório lib<suffix> antes de cada diretório lib que normalmente seria ser pesquisado.",
	"assets/variables.json.CMAKE_FIND_LIBRARY_PREFIXES": "Prefixos a serem usados ao procurar bibliotecas.",
	"assets/variables.json.CMAKE_FIND_LIBRARY_SUFFIXES": "Sufixos a serem acrescentados ao procurar bibliotecas.",
	"assets/variables.json.CMAKE_FIND_NO_INSTALL_PREFIX": "Excluir os valores das variáveis CMAKE_INSTALL_PREFIX e CMAKE_STAGING_PREFIX do CMAKE_SYSTEM_PREFIX_PATH. O CMake adiciona esses prefixos de destino do projeto ao CMAKE_SYSTEM_PREFIX_PATH, por padrão, para permitir a compilação de uma série de pacotes dependentes e a instalação deles em um prefixo comum. Defina CMAKE_FIND_NO_INSTALL_PREFIX como TRUE para suprimir esse comportamento.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_NAME": "Definido pelo comando find_package durante o carregamento de um módulo de localização para registrar o nome do pacote especificado pelo chamador. Confira a documentação do comando para obter detalhes.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY": "Por padrão, essa variável não está definida. Caso nem CMAKE_FIND_USE_PACKAGE_REGISTRY nem CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY estejam definidas, o find_package() usa o Registro do Pacote do Usuário, a menos que a opção NO_CMAKE_PACKAGE_REGISTRY seja fornecida.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY": "Por padrão, essa variável não está definida. Caso nem CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY nem CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY estejam definidas, o find_package() usa o Registro do Pacote do Sistema, a menos que a opção NO_CMAKE_SYSTEM_PACKAGE_REGISTRY seja fornecida.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_PREFER_CONFIG": "Diga find_package para experimentar o modo \"Config\" antes do modo \"Module\", se nenhum modo for especificado.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_REDIRECTS_DIR": "Essa variável somente leitura especifica um diretório que o comando find_package verificará antes de pesquisar um módulo ou arquivo de pacote de configuração em qualquer outro lugar. Um arquivo de pacote de configuração neste diretório sempre será encontrado em preferência a qualquer outro arquivo de módulo Localizar ou arquivo de pacote de configuração.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS": "Defina como TRUE para informar as chamadas find_package para resolver links simbólicos no valor de <PackageName>_DIR.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_SORT_DIRECTION": "A direção de classificação usada por CMAKE_FIND_PACKAGE_SORT_ORDER. Ela pode assumir um dos seguintes valores:",
	"assets/variables.json.CMAKE_FIND_PACKAGE_SORT_ORDER": "A ordem padrão para a classificação de pacotes encontrados usando find_package. Ela pode assumir um dos seguintes valores:",
	"assets/variables.json.CMAKE_FIND_PACKAGE_TARGETS_GLOBAL": "Definir como TRUE promove todos os destinos IMPORTED descobertos por find_package a um escopo GLOBAL.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_WARN_NO_MODULE": "Informar ao find_package que ele deverá avisar se for chamado sem um modo explícito.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH": "Lista separada por ponto e vírgula de caminhos raiz a serem pesquisados no sistema de arquivos.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_INCLUDE": "Esta variável controla se o CMAKE_FIND_ROOT_PATH e o CMAKE_SYSROOT são usados pelo FIND_XXX.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_LIBRARY": "Esta variável controla se o CMAKE_FIND_ROOT_PATH e o CMAKE_SYSROOT são usados pelo FIND_XXX.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_PACKAGE": "Esta variável controla se o CMAKE_FIND_ROOT_PATH e o CMAKE_SYSROOT são usados pelo FIND_XXX.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_PROGRAM": "Esta variável controla se o CMAKE_FIND_ROOT_PATH e o CMAKE_SYSROOT são usados pelo FIND_XXX.",
	"assets/variables.json.CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH": "Controla o comportamento padrão dos seguintes comandos para se pesquisar ou não caminhos fornecidos por variáveis de ambiente do CMake específicas:",
	"assets/variables.json.CMAKE_FIND_USE_CMAKE_PATH": "Controla o comportamento padrão dos seguintes comandos para se pesquisar ou não caminhos fornecidos por variáveis de cache específicas do cmake:",
	"assets/variables.json.CMAKE_FIND_USE_CMAKE_SYSTEM_PATH": "Controla o comportamento padrão dos seguintes comandos para se pesquisar ou não caminhos fornecidos pelas variáveis do CMake específicas da plataforma:",
	"assets/variables.json.CMAKE_FIND_USE_INSTALL_PREFIX": "Controla o comportamento padrão dos comandos a seguir para pesquisar ou não os locais nas variáveis CMAKE_INSTALL_PREFIX e CMAKE_STAGING_PREFIX.",
	"assets/variables.json.CMAKE_FIND_USE_PACKAGE_REGISTRY": "Controla o comportamento padrão do comando find_package para se pesquisar ou não caminhos fornecidos pelo Registro do Pacote do Usuário.",
	"assets/variables.json.CMAKE_FIND_USE_PACKAGE_ROOT_PATH": "Controla o comportamento padrão dos seguintes comandos para se pesquisar ou não caminhos fornecidos pelas variáveis <PackageName>_ROOT:",
	"assets/variables.json.CMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH": "Controla o comportamento padrão dos seguintes comandos para se pesquisar ou não caminhos fornecidos por variáveis de ambiente padrão do sistema:",
	"assets/variables.json.CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY": "Controla a pesquisa do Registro do Pacote do Sistema pelo comando find_package.",
	"assets/variables.json.CMAKE_FOLDER": "Definir o nome da pasta. Use para organizar destinos em um IDE.",
	"assets/variables.json.CMAKE_Fortran_FORMAT": "Definido como FIXO ou LIVRE para indicar o layout da fonte Fortran.",
	"assets/variables.json.CMAKE_Fortran_MODDIR_DEFAULT": "Diretório de saída do módulo padrão do Fortran.",
	"assets/variables.json.CMAKE_Fortran_MODDIR_FLAG": "Sinalizador do Fortran para o diretório de saída do módulo.",
	"assets/variables.json.CMAKE_Fortran_MODOUT_FLAG": "Sinalizador do Fortran para habilitar a saída do módulo.",
	"assets/variables.json.CMAKE_Fortran_MODULE_DIRECTORY": "Diretório de saída do módulo do Fortran.",
	"assets/variables.json.CMAKE_Fortran_PREPROCESS": "Valor padrão de Fortran_PREPROCESS de destinos.",
	"assets/variables.json.CMAKE_FRAMEWORK": "Valor padrão de FRAMEWORK de destinos.",
	"assets/variables.json.CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_CONFIG": "Sufixo do nome de arquivo da estrutura padrão na configuração <CONFIG> ao usar um gerador de várias configurações.",
	"assets/variables.json.CMAKE_FRAMEWORK_PATH": "Lista separada por ponto e vírgula de diretórios que especifica um caminho de pesquisa para as estruturas do macOS usadas pelos comandos find_library, find_package, find_path e find_file.",
	"assets/variables.json.CMAKE_GENERATOR": "O gerador usado para compilar o projeto. Confira cmake-generators.",
	"assets/variables.json.CMAKE_GENERATOR_INSTANCE": "Especificação de instância específica do gerador fornecida pelo usuário.",
	"assets/variables.json.CMAKE_GENERATOR_PLATFORM": "Especificação de plataforma de destino específica do gerador fornecida pelo usuário.",
	"assets/variables.json.CMAKE_GENERATOR_TOOLSET": "Especificação do conjunto de ferramentas do sistema de build nativo fornecida pelo usuário.",
	"assets/variables.json.CMAKE_GHS_NO_SOURCE_GROUP_FILE": "Booliano ATIVADO/DESATIVADO para controlar se o arquivo de projeto de um destino deve ser um único arquivo ou vários arquivos. Confira GHS_NO_SOURCE_GROUP_FILE para obter mais detalhes.",
	"assets/variables.json.CMAKE_GLOBAL_AUTOGEN_TARGET": "Alterne para habilitar a geração de um destino autogen global.",
	"assets/variables.json.CMAKE_GLOBAL_AUTOGEN_TARGET_NAME": "Altere o nome do destino autogen global.",
	"assets/variables.json.CMAKE_GLOBAL_AUTORCC_TARGET": "Alternar para habilitar a geração de um destino de autorcc global.",
	"assets/variables.json.CMAKE_GLOBAL_AUTORCC_TARGET_NAME": "Altere o nome do destino do autorcc global.",
	"assets/variables.json.CMAKE_GNUtoMS": "Converter as bibliotecas de importação GNU (.dll.a) para o formato MS (.lib).",
	"assets/variables.json.CMAKE_HIP_ARCHITECTURES": "Lista de arquiteturas de GPU para as quais gerar o código da dispositivo. Os nomes de arquitetura são interpretados com base em CMAKE_HIP_PLATFORM.",
	"assets/variables.json.CMAKE_HIP_COMPILE_FEATURES": "Lista de recursos conhecidos pelo compilador HIP",
	"assets/variables.json.CMAKE_HIP_EXTENSIONS": "Valor padrão para a propriedade de destino HIP_EXTENSIONS se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_HIP_PLATFORM": "Plataforma de GPU para a qual os códigos-fonte de linguagem HIP devem ser compilados.",
	"assets/variables.json.CMAKE_HIP_STANDARD": "Valor padrão para a propriedade de destino HIP_STANDARD se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_HIP_STANDARD_REQUIRED": "Valor padrão para a propriedade de destino HIP_STANDARD_REQUIRED se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_HOME_DIRECTORY": "Caminho para o topo da árvore de origem. O mesmo que CMAKE_SOURCE_DIR.",
	"assets/variables.json.CMAKE_HOST_APPLE": "True para sistemas operacionais macOS da Apple.",
	"assets/variables.json.CMAKE_HOST_BSD": "Definir como um valor de cadeia de caracteres quando o sistema host for BSD. Esse valor pode ser um dos seguintes: DragonFlyBSD, FreeBSD, OpenBSD ou NetBSD.",
	"assets/variables.json.CMAKE_HOST_LINUX": "Definir como verdadeiro quando o sistema host for Linux.",
	"assets/variables.json.CMAKE_HOST_SOLARIS": "True para sistemas operacionais Oracle Solaris.",
	"assets/variables.json.CMAKE_HOST_SYSTEM": "O Nome Composto do sistema operacional no qual o CMake está sendo executado.",
	"assets/variables.json.CMAKE_HOST_SYSTEM_NAME": "Nome do sistema operacional no qual o CMake está em execução.",
	"assets/variables.json.CMAKE_HOST_SYSTEM_PROCESSOR": "O nome da CPU na qual o CMake está sendo executado.",
	"assets/variables.json.CMAKE_HOST_SYSTEM_VERSION": "A versão do sistema operacional no qual CMake está em execução.",
	"assets/variables.json.CMAKE_HOST_UNIX": "True para sistemas operacionais UNIX e semelhantes ao UNIX.",
	"assets/variables.json.CMAKE_HOST_WIN32": "True se o sistema host está executando o Windows, incluindo o Windows de 64 bits e o MSYS.",
	"assets/variables.json.CMAKE_IGNORE_PATH": "Lista separada por ponto e vírgula  dos diretórios a serem ignorados pelos vários comandos find...().",
	"assets/variables.json.CMAKE_IGNORE_PREFIX_PATH": "Lista separada por ponto e vírgula de prefixos de pesquisa a serem ignorados pelos comandos find_program, find_library, find_file e find_path. Os prefixos também são ignorados pelo modo de configuração do comando find_package (O modo do módulo não é afetado). Para ignorar diretórios específicos, consulte CMAKE_IGNORE_NONPREFIX_VAR.",
	"assets/variables.json.CMAKE_IMPORT_LIBRARY_PREFIX": "O prefixo das bibliotecas de importação às quais você vinculará.",
	"assets/variables.json.CMAKE_IMPORT_LIBRARY_SUFFIX": "O sufixo das bibliotecas de importação às quais você vinculará.",
	"assets/variables.json.CMAKE_INCLUDE_CURRENT_DIR": "Adicionar automaticamente os diretórios de origem e de build atuais ao caminho de inclusão.",
	"assets/variables.json.CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE": "Adicionar automaticamente os diretórios de origem e de build atuais à propriedade de destino INTERFACE_INCLUDE_DIRECTORIES.",
	"assets/variables.json.CMAKE_INCLUDE_DIRECTORIES_BEFORE": "Se deseja acrescentar ou preceder diretórios por padrão em include_directories.",
	"assets/variables.json.CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE": "Se deseja forçar que os diretórios de inclusão do projeto sejam precedidos.",
	"assets/variables.json.CMAKE_INCLUDE_PATH": "Lista separada por ponto e vírgula de diretórios que especifica um caminho de pesquisa para os comandos find_file e find_path. Por padrão, essa opção fica vazia e deve ser definida pelo projeto.",
	"assets/variables.json.CMAKE_INSTALL_DEFAULT_COMPONENT_NAME": "O componente padrão usado nos comandos de instalação.",
	"assets/variables.json.CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS": "Permissões padrão para os diretórios criados implicitamente durante a instalação dos arquivos, por install e file.",
	"assets/variables.json.CMAKE_INSTALL_MESSAGE": "Especificar o detalhamento do código de script de instalação gerado pelo comando de instalação (usando o comando de arquivo). Para caminhos recém-instalados ou atualizados, a instalação pode imprimir linhas como:",
	"assets/variables.json.CMAKE_INSTALL_NAME_DIR": "Nome do diretório para destinos instalados em plataformas da Apple.",
	"assets/variables.json.CMAKE_INSTALL_PREFIX": "O diretório de instalação usado pela instalação.",
	"assets/variables.json.CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT": "O CMake define esta variável como um valor VERDADEIRO quando o CMAKE_INSTALL_PREFIX acaba de ser inicializado com seu valor padrão, normalmente na primeira execução do CMake em uma nova árvore de build, e a variável de ambiente CMAKE_INSTALL_PREFIX não é definida na primeira execução do CMake. Essa opção pode ser usada pelo código do projeto para alterar o padrão sem substituir um valor fornecido pelo usuário:",
	"assets/variables.json.CMAKE_INSTALL_REMOVE_ENVIRONMENT_RPATH": "Define o padrão para se os rpaths definidos pela cadeia ferramentas devem ser removidos durante a instalação.",
	"assets/variables.json.CMAKE_INSTALL_RPATH": "O rpath a ser usado para os destinos instalados.",
	"assets/variables.json.CMAKE_INSTALL_RPATH_USE_LINK_PATH": "Adicionar caminhos para a pesquisa de vinculador e o rpath instalado.",
	"assets/variables.json.CMAKE_INTERNAL_PLATFORM_ABI": "Uma variável interna sujeita a alterações.",
	"assets/variables.json.CMAKE_INTERPROCEDURAL_OPTIMIZATION": "Valor padrão de INTERPROCEDURAL_OPTIMIZATION de destinos.",
	"assets/variables.json.CMAKE_INTERPROCEDURAL_OPTIMIZATION_CONFIG": "Valor padrão de INTERPROCEDURAL_OPTIMIZATION_ de destinos.",
	"assets/variables.json.CMAKE_IOS_INSTALL_COMBINED": "Valor padrão de IOS_INSTALL_COMBINED de destinos.",
	"assets/variables.json.CMAKE_ISPC_HEADER_DIRECTORY": "Diretório de saída de cabeçalho gerado pelo ISPC.",
	"assets/variables.json.CMAKE_ISPC_HEADER_SUFFIX": "Sufixo de saída a ser usado para cabeçalhos gerados pelo ISPC.",
	"assets/variables.json.CMAKE_ISPC_INSTRUCTION_SETS": "Valor padrão da propriedade ISPC_INSTRUCTION_SETS de destinos.",
	"assets/variables.json.CMAKE_JOB_POOLS": "Se a propriedade global JOB_POOLS não estiver definida, o valor dessa variável será usado em seu lugar. Consulte JOB_POOLS para obter mais informações.",
	"assets/variables.json.CMAKE_JOB_POOL_COMPILE": "Esta variável é usada para inicializar a propriedade JOB_POOL_COMPILE em todos os destinos. Consulte JOB_POOL_COMPILE para obter mais informações.",
	"assets/variables.json.CMAKE_JOB_POOL_LINK": "Esta variável é usada para inicializar a propriedade JOB_POOL_LINK em todos os destinos. Consulte JOB_POOL_LINK para obter mais informações.",
	"assets/variables.json.CMAKE_JOB_POOL_PRECOMPILE_HEADER": "Esta variável é usada para inicializar a propriedade JOB_POOL_PRECOMPILE_HEADER em todos os destinos. Consulte JOB_POOL_PRECOMPILE_HEADER para obter mais informações.",
	"assets/variables.json.CMAKE_KATE_FILES_MODE": "Essa variável de cache é usada pelo gerador de projetos Kate e controla em que modo a entrada de arquivos no arquivo de projeto será definida. Confira cmake-generators.",
	"assets/variables.json.CMAKE_KATE_MAKE_ARGUMENTS": "Essa variável de cache é usada pelo gerador de projetos Kate. Confira cmake-generators.",
	"assets/variables.json.CMAKE_LANG_ANDROID_TOOLCHAIN_MACHINE": "No caso de Compilação Cruzada para Android, essa variável contém o nome do computador dos binutils da cadeia de ferramentas (por exemplo, gcc -dumpmachine). Os binutils geralmente contém o prefixo <machine>- no nome.",
	"assets/variables.json.CMAKE_LANG_ANDROID_TOOLCHAIN_PREFIX": "No caso de Compilação Cruzada para Android, essa variável contém o caminho absoluto que prefixa GNU Compiler da cadeia de ferramentas e seus binutils.",
	"assets/variables.json.CMAKE_LANG_ANDROID_TOOLCHAIN_SUFFIX": "No caso de Compilação Cruzada para Android, essa variável contém o sufixo da plataforma host do GNU Compiler da cadeia de ferramentas e seus binutils.",
	"assets/variables.json.CMAKE_LANG_ARCHIVE_APPEND": "Variável de regra a ser acrescentada a um arquivo morto estático.",
	"assets/variables.json.CMAKE_LANG_ARCHIVE_CREATE": "Variável de regra para criar um arquivo morto estático.",
	"assets/variables.json.CMAKE_LANG_ARCHIVE_FINISH": "Variável de regra para concluir um arquivo morto estático existente.",
	"assets/variables.json.CMAKE_LANG_BYTE_ORDER": "Ordem de byte da arquitetura de destino do compilador <LANG>, se conhecida. Se definido e não vazio, o valor é um dos seguintes:",
	"assets/variables.json.CMAKE_LANG_CLANG_TIDY": "Valor padrão da propriedade de destino <LANG>_CLANG_TIDY quando <LANG> é C, CXX, OBJC ou OBJCXX.",
	"assets/variables.json.CMAKE_LANG_CLANG_TIDY_EXPORT_FIXES_DIR": "Valor padrão da propriedade de destino <LANG>_CLANG_TIDY quando <LANG> é C, CXX, OBJC ou OBJCXX.",
	"assets/variables.json.CMAKE_LANG_COMPILER": "O caminho completo para o compilador da LANG.",
	"assets/variables.json.CMAKE_LANG_COMPILER_ABI": "Uma variável interna sujeita a alterações.",
	"assets/variables.json.CMAKE_LANG_COMPILER_AR": "Um wrapper que encapsula ar e adiciona a opção --plugin apropriada para o compilador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_ARCHITECTURE_ID": "Uma variável interna sujeita a alterações.",
	"assets/variables.json.CMAKE_LANG_COMPILER_EXTERNAL_TOOLCHAIN": "A cadeia de ferramentas externa para compilação cruzada, se houver suporte.",
	"assets/variables.json.CMAKE_LANG_COMPILER_FRONTEND_VARIANT": "Cadeia de caracteres de identificação da variante de front-end do compilador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_ID": "Cadeia de caracteres de identificação do compilador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LAUNCHER": "Valor padrão da propriedade de destino <LANG>_COMPILER_LAUNCHER. Essa variável é usada para inicializar a propriedade em cada destino assim que é criada. Isso é feito somente quando <LANG> é C, CXX, Fortran, ISPC, OBJC, OBJCXX ou CUDA.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER": "O caminho completo para o vinculador para LANG.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER_FRONTEND_VARIANT": "Cadeia de caracteres de identificação da variante de front-end do vinculador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER_ID": "Cadeia de caracteres de identificação do vinculador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER_VERSION": "Cadeia de caracteres de versão do vinculador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LOADED": "Definido como true se o idioma estiver habilitado.",
	"assets/variables.json.CMAKE_LANG_COMPILER_PREDEFINES_COMMAND": "Comando que emite as predefinições do compilador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_RANLIB": "Um wrapper que encapsula o ranlib e adiciona a opção --plugin apropriada para o compilador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_TARGET": "O destino da compilação cruzada, se houver suporte.",
	"assets/variables.json.CMAKE_LANG_COMPILER_VERSION": "Cadeia de caracteres da versão do compilador.",
	"assets/variables.json.CMAKE_LANG_COMPILER_VERSION_INTERNAL": "Uma variável interna sujeita a alterações.",
	"assets/variables.json.CMAKE_LANG_COMPILE_OBJECT": "Variável de regra para compilar um único arquivo de objeto.",
	"assets/variables.json.CMAKE_LANG_CPPCHECK": "Valor padrão da propriedade de destino <LANG>_CPPCHECK. Esta variável é usada para inicializar a propriedade em cada destino assim que ela é criada. Isso é feito somente quando <LANG> é C ou CXX.",
	"assets/variables.json.CMAKE_LANG_CPPLINT": "Valor padrão da propriedade de destino <LANG>_CPPLINT. Esta variável é usada para inicializar a propriedade em cada destino assim que ela é criada. Isso é feito somente quando <LANG> é C ou CXX.",
	"assets/variables.json.CMAKE_LANG_CREATE_SHARED_LIBRARY": "Variável de regra para criar uma biblioteca compartilhada.",
	"assets/variables.json.CMAKE_LANG_CREATE_SHARED_MODULE": "Variável de regra para criar um módulo compartilhado.",
	"assets/variables.json.CMAKE_LANG_CREATE_STATIC_LIBRARY": "Variável de regra para criar uma biblioteca estática.",
	"assets/variables.json.CMAKE_LANG_EXTENSIONS": "As variações são:",
	"assets/variables.json.CMAKE_LANG_EXTENSIONS_DEFAULT": "Modo de extensões padrão do compilador. Usado como padrão para a <LANG>propriedade de destino _EXTENSIONS quando CMAKE_<LANG>_EXTENSIONS não está definido (consulte CMP0128).",
	"assets/variables.json.CMAKE_LANG_FLAGS": "Sinalizadores de linguagem em toda a linguagem <LANG> usada na compilação para todas as configurações. Esses sinalizadores serão passados para todas as invocações do compilador. Isso inclui invocações que conduzem a compilação e as que conduzem a vinculação.",
	"assets/variables.json.CMAKE_LANG_FLAGS_CONFIG": "Sinalizadores de linguagem em toda a linguagem <LANG> utilizadas ao compilar para a configuração <CONFIG>. Esses sinalizadores serão passados para todas as invocações do compilador na configuração correspondente. Isso inclui invocações que conduzem a compilação e as que conduzem a vinculação.",
	"assets/variables.json.CMAKE_LANG_FLAGS_CONFIG_INIT": "O valor usado para inicializar a entrada de cache CMAKE_<LANG>_FLAGS_­ na primeira vez em que uma árvore de build é configurada para a linguagem <LANG>. Essa variável deve ser definida por um arquivo de cadeia de ferramentas. O CMake pode preceder ou acrescentar conteúdo ao valor com base no ambiente e na plataforma de destino.",
	"assets/variables.json.CMAKE_LANG_FLAGS_DEBUG": "Esta variável é a variante de Depuração da variável CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_DEBUG_INIT": "Esta variável é a variante de Depuração da variável CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_FLAGS_INIT": "Valor usado para inicializar a entrada de cache CMAKE_<LANG>_FLAGS na primeira vez que uma árvore de build for configurada para o idioma <LANG>. Essa variável deve ser definida por um arquivo de cadeia ferramentas. O CMake pode preceder o valor ou acrescentar conteúdo a ele com base no ambiente e na plataforma de destino. Por exemplo, o conteúdo de uma variável de ambiente xxxFLAGS terá um valor antes dele, em que xxx será específico a um idioma, mas não necessariamente o mesmo que <LANG> (por exemplo, CXXFLAGS para CXX, FFLAGS para Fortran e assim por diante).",
	"assets/variables.json.CMAKE_LANG_FLAGS_MINSIZEREL": "Esta variável é a variante de MinSizeRel da variável CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_MINSIZEREL_INIT": "Esta variável é a variante de MinSizeRel da variável CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELEASE": "Esta variável é a variante de Versão da variável CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELEASE_INIT": "Esta variável é a variante de Versão da variável CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELWITHDEBINFO": "Esta variável é a variante de RelWithDebInfo da variável CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELWITHDEBINFO_INIT": "Esta variável é a variante de RelWithDebInfo da variável CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_HOST_COMPILER": "Essa variável está disponível quando <LANG> é CUDA ou HIP.",
	"assets/variables.json.CMAKE_LANG_IGNORE_EXTENSIONS": "Extensões de arquivo que devem ser ignoradas pelo build.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_INCLUDE_DIRECTORIES": "Os diretórios nos quais o compilador pesquisa arquivos de cabeçalho implicitamente.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_LINK_DIRECTORIES": "Caminho de pesquisa do vinculador implícito detectado para a linguagem <LANG>.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES": "Caminho de pesquisa da estrutura do vinculador implícito detectado para a linguagem <LANG>.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_LINK_LIBRARIES": "Sinalizadores e bibliotecas de link implícitos detectados para a linguagem <LANG>.",
	"assets/variables.json.CMAKE_LANG_INCLUDE_WHAT_YOU_USE": "Valor padrão da propriedade de destino <LANG>_INCLUDE_WHAT_YOU_USE. Esta variável é usada para inicializar a propriedade em cada destino assim que ela é criada. Isso é feito somente quando <LANG> é C ou CXX.",
	"assets/variables.json.CMAKE_LANG_LIBRARY_ARCHITECTURE": "Nome do diretório de biblioteca da arquitetura de destino detectado para <LANG>.",
	"assets/variables.json.CMAKE_LANG_LINKER_LAUNCHER": "Valor padrão da propriedade de destino <LANG>_COMPILER_LAUNCHER. Esta variável é usada para inicializar a propriedade em cada destino assim que ela é criada. Isso é feito somente quando <LANG> é C, CXX, Fortran ou CUDA.",
	"assets/variables.json.CMAKE_LANG_LINKER_PREFERENCE": "Uma variável interna sujeita a alterações.",
	"assets/variables.json.CMAKE_LANG_LINKER_PREFERENCE_PROPAGATES": "Uma variável interna sujeita a alterações.",
	"assets/variables.json.CMAKE_LANG_LINKER_WRAPPER_FLAG": "Define a sintaxe da opção de driver do compilador para passar opções à ferramenta de vinculador. Essa opção será usada para converter o prefixo LINKER: nas opções do link (consulte add_link_options e target_link_options).",
	"assets/variables.json.CMAKE_LANG_LINKER_WRAPPER_FLAG_SEP": "Esta variável é usada com a variável CMAKE_<LANG>_LINKER_WRAPPER_FLAG para formatar o prefixo LINKER: nas opções do link (consulte add_link_options e target_link_options).",
	"assets/variables.json.CMAKE_LANG_LINK_EXECUTABLE": "Variável de regra para vincular um executável.",
	"assets/variables.json.CMAKE_LANG_LINK_GROUP_USING_FEATURE": "Esta variável define como vincular um grupo de bibliotecas para o <FEATURE> especificado quando uma expressão de gerador de LINK_GROUP é usada e o idioma do link para o destino é <LANG>. Para que essa variável tenha efeito, a variável CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>_SUPPORTED associada deve ser definida como true.",
	"assets/variables.json.CMAKE_LANG_LINK_GROUP_USING_FEATURE_SUPPORTED": "Esta variável especifica se o <FEATURE> tem suporte para o idioma do link <LANG>. Se esta variável for verdadeira, o <FEATURE> deverá ser definido por CMAKE_<LANG>_LINK_GROUP_USING_, e as variáveis mais genéricas CMAKE_LINK_GROUP_USING_<FEATURE>_SUPPORTED e CMAKE_LINK_GROUP_USING_ não serão usadas.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_FEATURE_ATTRIBUTES": "Esta variável define a semântica do biblioteca de link especificado <FEATURE> ao vincular com a linguagem de link <LANG>. Ela tem precedência sobre CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES se essa variável também estiver definida para o mesmo <FEATURE>, mas, caso contrário, tem efeitos semelhantes. Consulte CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES para mais detalhes.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_FILE_FLAG": "O sinalizador específico a um idioma a ser usado para vincular uma biblioteca especificada por um caminho ao seu arquivo.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_FLAG": "O sinalizador a ser usado para vincular uma biblioteca em uma biblioteca compartilhada ou em um executável.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_SUFFIX": "O sufixo específico a um idioma das bibliotecas às quais você vinculará.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_USING_FEATURE": "Esta variável define como vincular uma biblioteca ou estrutura para o <FEATURE> especificado quando uma expressão de gerador de LINK_LIBRARY é usada e o idioma do link para o destino é <LANG>. Para que essa variável tenha efeito, a variável CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED associada deve ser definida como true.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_USING_FEATURE_SUPPORTED": "Defina como TRUE se <FEATURE>, conforme definido pela variável CMAKE_< LANG>_LINK_LIBRARY_USING_, tiver suporte para o idioma do vinculador <LANG>.",
	"assets/variables.json.CMAKE_LANG_LINK_WHAT_YOU_USE_FLAG": "Sinalizador do vinculador a ser usado para configurar o vinculador para que todas as bibliotecas especificadas na linha de comando sejam vinculadas ao destino.",
	"assets/variables.json.CMAKE_LANG_OUTPUT_EXTENSION": "Extensão para a saída de uma compilação de um único arquivo.",
	"assets/variables.json.CMAKE_LANG_PLATFORM_ID": "Uma variável interna sujeita a alterações.",
	"assets/variables.json.CMAKE_LANG_SIMULATE_ID": "Cadeia de caracteres de identificação do compilador “simulado”.",
	"assets/variables.json.CMAKE_LANG_SIMULATE_VERSION": "Cadeia de caracteres de versão do compilador \"simulado\".",
	"assets/variables.json.CMAKE_LANG_SIZEOF_DATA_PTR": "Tamanho dos tipos de ponteiro para dados da linguagem <LANG>.",
	"assets/variables.json.CMAKE_LANG_SOURCE_FILE_EXTENSIONS": "Extensões de arquivos de origem para a linguagem fornecida.",
	"assets/variables.json.CMAKE_LANG_STANDARD": "As variações são:",
	"assets/variables.json.CMAKE_LANG_STANDARD_DEFAULT": "O padrão do compilador padrão para a linguagem <LANG>. Vazio se o compilador não tem concepção de níveis padrão.",
	"assets/variables.json.CMAKE_LANG_STANDARD_INCLUDE_DIRECTORIES": "Incluir os diretórios a serem usados para cada arquivo de origem compilado com o compilador <LANG>. Essa opção destina-se à especificação dos diretórios de inclusão do sistema necessários para a linguagem da plataforma atual. Os diretórios sempre aparecem no final do caminho de inclusão passado ao compilador.",
	"assets/variables.json.CMAKE_LANG_STANDARD_LATEST": "Esta variável representa o mínimo entre a última versão do padrão para a linguagem <LANG> que tem suporte pelo compilador atual e a última versão que tem suporte pelo CMake. Seu valor será definido como um dos valores que tem suporte da propriedade de destino <LANG>_STANDARD correspondente; consulte a documentação dessa propriedade para uma lista de idiomas com suporte.",
	"assets/variables.json.CMAKE_LANG_STANDARD_LIBRARIES": "As bibliotecas vinculadas em cada executável e a biblioteca compartilhada vinculada para a linguagem <LANG>. Essa opção destina-se à especificação das bibliotecas do sistema necessárias para a linguagem da plataforma atual.",
	"assets/variables.json.CMAKE_LANG_STANDARD_REQUIRED": "As variações são:",
	"assets/variables.json.CMAKE_LANG_USING_LINKER_MODE": "Isso controla de que maneira o valor da variável CMAKE_<LANG>_USING_LINKER_ deve ser interpretado. Os valores do modo vinculador com suporte são:",
	"assets/variables.json.CMAKE_LANG_USING_LINKER_TYPE": "Esta variável define como especificar o vinculador <TYPE> para a etapa de vínculo, conforme controlado pela variável CMAKE_LINKER_TYPE ou pela propriedade de destino LINKER_TYPE. Dependendo do valor da variável CMAKE_<LANG>_USING_LINKER_MODE, CMAKE_<LANG>_USING_LINKER_<TYPE> pode conter sinalizadores de compilador para a etapa de vínculo ou sinalizadores a serem fornecidos diretamente à ferramenta do vinculador.",
	"assets/variables.json.CMAKE_LANG_VISIBILITY_PRESET": "Valor padrão da propriedade de destino <LANG>_VISIBILITY_PRESET quando um destino é criado.",
	"assets/variables.json.CMAKE_LIBRARY_ARCHITECTURE": "Nome do diretório de biblioteca da arquitetura de destino, caso seja detectado.",
	"assets/variables.json.CMAKE_LIBRARY_ARCHITECTURE_REGEX": "Regex que corresponde a possíveis nomes de diretório de biblioteca da arquitetura de destino.",
	"assets/variables.json.CMAKE_LIBRARY_OUTPUT_DIRECTORY": "Local no qual todos os arquivos de destino de LIBRARY devem ser colocados quando compilados.",
	"assets/variables.json.CMAKE_LIBRARY_OUTPUT_DIRECTORY_CONFIG": "Local no qual todos os arquivos de destino de LIBRARY devem ser colocados quando compilados para uma configuração específica.",
	"assets/variables.json.CMAKE_LIBRARY_PATH": "Lista separada por ponto e vírgula de diretórios que especifica um caminho de pesquisa para o comando find_library. Por padrão, essa opção fica vazia e deve ser definida pelo projeto.",
	"assets/variables.json.CMAKE_LIBRARY_PATH_FLAG": "O sinalizador a ser usado para adicionar um caminho de pesquisa de biblioteca a um compilador.",
	"assets/variables.json.CMAKE_LINKER_TYPE": "Especifique qual vinculador será usado para a etapa de vínculo.",
	"assets/variables.json.CMAKE_LINK_DEF_FILE_FLAG": "O sinalizador de vinculador a ser usado para especificar um arquivo .def para a criação da dll.",
	"assets/variables.json.CMAKE_LINK_DEPENDS_NO_SHARED": "Se deseja ignorar as dependências de link nos arquivos de biblioteca compartilhada.",
	"assets/variables.json.CMAKE_LINK_DEPENDS_USE_LINKER": "Para os geradores Makefile e Ninja, as dependências de link são agora, para uma seleção de vinculadores, geradas pelo próprio vinculador. Ao definir essa variável com o valor FALSO, você poderá desativar esse recurso.",
	"assets/variables.json.CMAKE_LINK_DIRECTORIES_BEFORE": "Se deseja acrescentar ou preceder diretórios por padrão em link_directories.",
	"assets/variables.json.CMAKE_LINK_GROUP_USING_FEATURE": "Esta variável define como vincular um grupo de bibliotecas para o <FEATURE> especificado quando uma expressão de gerador LINK_GROUP é usada. Ambas as condições a seguir devem ser atendidas para que esta variável tenha qualquer efeito:",
	"assets/variables.json.CMAKE_LINK_GROUP_USING_FEATURE_SUPPORTED": "Essa variável especifica se <FEATURE> tem suporte, independentemente do idioma do link. Se essa variável for verdadeira, o <FEATURE> deve ser definido por CMAKE_LINK_GROUP_USING_.",
	"assets/variables.json.CMAKE_LINK_INTERFACE_LIBRARIES": "Valor padrão de LINK_INTERFACE_LIBRARIES de destinos.",
	"assets/variables.json.CMAKE_LINK_LIBRARIES_ONLY_TARGETS": "Defina esta variável para inicializar a propriedade LINK_LIBRARIES_ONLY_TARGETS de destinos não importados quando eles forem criados. Defini-lo como true permite uma verificação adicional de que todos os itens nomeados por TARGET_LINK_Libraries que podem ser nomes de destino sejam realmente nomes de destinos existentes. Consulte a documentação da propriedade de destino para obter detalhes.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_FEATURE_ATTRIBUTES": "Esta variável define o comportamento do recurso de link especificado <FEATURE>. Especifica como o <FEATURE> interage com outros recursos, quando o <FEATURE> deve ser aplicado e aspectos de como o <FEATURE> deve ser tratado quando o CMake monta a linha de comando final do vinculador (por exemplo, eliminação de duplicação).",
	"assets/variables.json.CMAKE_LINK_LIBRARY_FILE_FLAG": "O sinalizador a ser usado para vincular uma biblioteca especificada por um caminho ao seu arquivo.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_FLAG": "O sinalizador a ser usado para vincular uma biblioteca e um executável.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_SUFFIX": "O sufixo das bibliotecas às quais você vinculará.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_USING_FEATURE": "Esta variável define como vincular um grupo de bibliotecas para o <FEATURE> especificado quando uma expressão de gerador LINK_GROUP é usada. Ambas as condições a seguir devem ser atendidas para que esta variável tenha qualquer efeito:",
	"assets/variables.json.CMAKE_LINK_LIBRARY_USING_FEATURE_SUPPORTED": "Defina como TRUE se <FEATURE>, conforme definido pela variável CMAKE_LINK_LIBRARY_USING_, tiver suporte para o idioma do vinculador.",
	"assets/variables.json.CMAKE_LINK_SEARCH_END_STATIC": "Terminar uma linha de link de modo que as bibliotecas estáticas do sistema sejam usadas.",
	"assets/variables.json.CMAKE_LINK_SEARCH_START_STATIC": "Considerar que o vinculador procura bibliotecas estáticas por padrão.",
	"assets/variables.json.CMAKE_LINK_WHAT_YOU_USE": "Valor padrão da propriedade de destino LINK_WHAT_YOU_USE. Esta variável é usada para inicializar a propriedade em cada destino assim que ela é criada.",
	"assets/variables.json.CMAKE_LINK_WHAT_YOU_USE_CHECK": "Define o comando executado após a etapa do vínculo para verificar o uso de bibliotecas. Atualmente, essa verificação está definida apenas em plataformas ELF com valor ldd -u -r.",
	"assets/variables.json.CMAKE_MACOSX_BUNDLE": "Valor padrão de MACOSX_BUNDLE de destinos.",
	"assets/variables.json.CMAKE_MACOSX_RPATH": "Se deseja usar rpaths no macOS e no iOS.",
	"assets/variables.json.CMAKE_MAJOR_VERSION": "O primeiro componente de número de versão da variável CMAKE_VERSION.",
	"assets/variables.json.CMAKE_MAKE_PROGRAM": "Ferramenta que pode iniciar o sistema de build nativo. O valor poderá ser o caminho completo para um executável ou apenas o nome da ferramenta, se for esperado que ela esteja no PATH.",
	"assets/variables.json.CMAKE_MAP_IMPORTED_CONFIG_CONFIG": "Valor padrão de MAP_IMPORTED_CONFIG_ de destinos.",
	"assets/variables.json.CMAKE_MATCH_COUNT": "O número de correspondências com a última expressão regular.",
	"assets/variables.json.CMAKE_MATCH_n": "O grupo de captura <n> foi correspondido pela última expressão regular, para grupos de 0 a 9. O grupo 0 é a correspondência inteira. Os grupos de 1 a 9 são as subexpressões capturadas pela sintaxe ().",
	"assets/variables.json.CMAKE_MAXIMUM_RECURSION_DEPTH": "Profundidade de recursão máxima para scripts de CMake. Ela deve ser definida na linha de comando com -DCMAKE_MAXIMUM_RECURSION_DEPTH=<x> ou dentro de CMakeLists.txt por projetos que exigem uma grande profundidade de recursão. Projetos que definem essa variável devem fornecer ao usuário uma forma de substituí-lo. Por exemplo:",
	"assets/variables.json.CMAKE_MESSAGE_CONTEXT": "Quando habilitado pela opção de linha de comando cmake --log-context ou pela variável CMAKE_MESSAGE_CONTEXT_SHOW, o comando de mensagem converte a lista CMAKE_MESSAGE_CONTEXT em uma cadeia de caracteres separada por pontos entre colchetes e a precede a cada linha para mensagens de níveis de log NOTICE e abaixo.",
	"assets/variables.json.CMAKE_MESSAGE_CONTEXT_SHOW": "Definir essa variável como true permite mostrar um contexto com cada linha registrada pelo comando message (confira CMAKE_MESSAGE_CONTEXT para ver como o contexto é especificado).",
	"assets/variables.json.CMAKE_MESSAGE_INDENT": "O comando message une as cadeias de caracteres desta lista e para os níveis de log de aviso prévio e abaixo, ele antecede a cadeia de caracteres resultante em cada linha da mensagem.",
	"assets/variables.json.CMAKE_MESSAGE_LOG_LEVEL": "Quando definida, essa variável especifica o nível de log usado pelo comando de mensagem. Os valores válidos são iguais aos da opção de linha de comando --log-level <cmake --log-level> do programa cmake. Se essa variável for definida e a opção de linha de comando --log-level <cmake --log-level> for fornecida, a opção de linha de comando terá precedência.",
	"assets/variables.json.CMAKE_MFC_FLAG": "Use a biblioteca do MFC para um executável ou uma dll.",
	"assets/variables.json.CMAKE_MINIMUM_REQUIRED_VERSION": "A versão <min> do CMake fornecida à chamada mais recente para o comando cmake_minimum_required no escopo da variável atual ou em qualquer escopo de variável pai.",
	"assets/variables.json.CMAKE_MINOR_VERSION": "O segundo componente do número de versão da variável CMAKE_VERSION.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS": "Os sinalizadores de vinculador a serem usados para criar módulos.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS_CONFIG": "Os sinalizadores a serem usados ao vincular um módulo.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS_CONFIG_INIT": "O valor usado para inicializar a entrada de cache CMAKE_MODULE_LINKER_FLAGS_ na primeira vez em que uma árvore de build é configurada. Essa variável deve ser definida por um arquivo de cadeia de ferramentas. O CMake pode preceder ou acrescentar conteúdo ao valor com base no ambiente e na plataforma de destino.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS_INIT": "O valor usado para inicializar a entrada de cache CMAKE_MODULE_LINKER_FLAGS na primeira vez em que uma árvore de build é configurada. Essa variável deve ser definida por um arquivo de cadeia de ferramentas. O CMake pode preceder ou acrescentar conteúdo ao valor com base no ambiente e na plataforma de destino.",
	"assets/variables.json.CMAKE_MODULE_PATH": "Lista separada por ponto e vírgula de diretórios, representada usando barras, que especifica um caminho de pesquisa para os módulos do CMake a serem carregados pelos comandos include ou find_package antes de verificar os módulos padrão fornecidos com o CMake. Por padrão, essa opção fica vazia e deve ser definida pelo projeto.",
	"assets/variables.json.CMAKE_MSVCIDE_RUN_PATH": "Locais de PATH extras que devem ser usados ao executar add_custom_command ou add_custom_target ao usar o gerador Visual Studio 12 2013 (ou superior). Isso permite executar comandos e usar dll's que o ambiente IDE não conhece.",
	"assets/variables.json.CMAKE_MSVC_DEBUG_INFORMATION_FORMAT": "Selecione o formato de informações de depuração do MSVC tendo como alvo a ABI do MSVC. Essa variável é usada para inicializar a propriedade MSVC_DEBUG_INFORMATION_FORMAT em todos os destinos à medida que são criados. Ela também é propagada por chamadas para o comando try_compile para o projeto de teste.",
	"assets/variables.json.CMAKE_MSVC_RUNTIME_LIBRARY": "Selecione a biblioteca de runtime MSVC para uso pelos compiladores cujo destino é o ABI do MSVC. Essa variável é usada para inicializar a propriedade MSVC_RUNTIME_LIBRARY em todos os destinos conforme eles são criados. Ela também é propagada por chamadas para o comando try_compile no projeto de teste.",
	"assets/variables.json.CMAKE_NETRC": "Essa variável é usada para inicializar a opção NETRC para o arquivo e os comandos de arquivo. Consulte esses comandos para obter informações adicionais.",
	"assets/variables.json.CMAKE_NETRC_FILE": "Essa variável é usada para inicializar a opção NETRC_FILE para o arquivo e os comandos de arquivo. Consulte esses comandos para obter informações adicionais.",
	"assets/variables.json.CMAKE_NINJA_OUTPUT_PATH_PREFIX": "Informe aos geradores Ninja para adicionar um prefixo a cada caminho de saída em build.ninja. Uma barra final será anexada ao prefixo, se estiver ausente.",
	"assets/variables.json.CMAKE_NOT_USING_CONFIG_FLAGS": "Ignorar os sinalizadores _BUILD_TYPE se essa opção estiver definida como true.",
	"assets/variables.json.CMAKE_NO_BUILTIN_CHRPATH": "Não use o editor interno binário para consertar os caminhos de pesquisa da biblioteca de runtime na instalação.",
	"assets/variables.json.CMAKE_NO_SYSTEM_FROM_IMPORTED": "Valor padrão de NO_SYSTEM_FROM_IMPORTED de destinos.",
	"assets/variables.json.CMAKE_OBJCXX_EXTENSIONS": "Valor padrão para a propriedade de destino OBJCXX_EXTENSIONS se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_OBJCXX_STANDARD": "Valor padrão para a propriedade de destino OBJCXX_STANDARD se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_OBJCXX_STANDARD_REQUIRED": "Valor padrão para a propriedade de destino OBJCXX_STANDARD_REQUIRED se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_OBJC_EXTENSIONS": "Valor padrão para a propriedade de destino OBJC_EXTENSIONS se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_OBJC_STANDARD": "Valor padrão para a propriedade de destino OBJC_STANDARD se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_OBJC_STANDARD_REQUIRED": "Valor padrão para a propriedade de destino OBJC_STANDARD_REQUIRED se definida quando um destino é criado.",
	"assets/variables.json.CMAKE_OBJECT_PATH_MAX": "Tamanho máximo do caminho completo do arquivo de objeto permitido pelas ferramentas de build nativas.",
	"assets/variables.json.CMAKE_OPTIMIZE_DEPENDENCIES": "Inicializa a propriedade de destino OPTIMIZE_DEPENDENCIES.",
	"assets/variables.json.CMAKE_OSX_ARCHITECTURES": "Direcionar a arquiteturas específicas para o macOS e o iOS.",
	"assets/variables.json.CMAKE_OSX_DEPLOYMENT_TARGET": "Especificar a versão mínima da plataforma de destino (por exemplo, macOS ou iOS) na qual os binários de destino devem ser implantados. O CMake usa esse valor de variável para o sinalizador -mmacosx-version-min ou seus respectivos equivalentes da plataforma de destino. Para as versões mais antigas do Xcode que incluem vários SDKs do macOS, essa variável também ajuda a escolher o SDK quando CMAKE_OSX_SYSROOT não está definida.",
	"assets/variables.json.CMAKE_OSX_SYSROOT": "Especificar o local ou o nome do SDK da plataforma macOS a ser usado. O CMake usa esse valor para calcular o valor do sinalizador -isysroot ou equivalente e para ajudar os comandos find_* a localizar os arquivos no SDK.",
	"assets/variables.json.CMAKE_PARENT_LIST_FILE": "Caminho completo para o arquivo do CMake que incluiu o atual.",
	"assets/variables.json.CMAKE_PATCH_VERSION": "O terceiro componente de número de versão da variável CMAKE_VERSION.",
	"assets/variables.json.CMAKE_PCH_INSTANTIATE_TEMPLATES": "Esta variável é usada para inicializar a propriedade PCH_INSTANTIATE_TEMPLATES de destinos quando eles são criados.",
	"assets/variables.json.CMAKE_PCH_WARN_INVALID": "Essa variável é usada para inicializar a propriedade PCH_WARN_INVALID de destinos quando eles são criados.",
	"assets/variables.json.CMAKE_PDB_OUTPUT_DIRECTORY": "Diretório de saída dos arquivos .pdb de símbolo de depuração da MS gerados pelo vinculador para destinos de biblioteca compartilhada e de executável.",
	"assets/variables.json.CMAKE_PDB_OUTPUT_DIRECTORY_CONFIG": "Diretório de saída dos arquivos .pdb de símbolo de depuração da MS gerados pelo vinculador para destinos de biblioteca compartilhada e de executável, por configuração.",
	"assets/variables.json.CMAKE_PLATFORM_NO_VERSIONED_SONAME": "Essa variável é usada para controlar globalmente se as propriedades de destino VERSION e SOVERSION devem ser usadas para bibliotecas compartilhadas. Quando definido como true, a adição de informações de versão para cada destino de biblioteca compartilhada é desabilitada.",
	"assets/variables.json.CMAKE_POLICY_DEFAULT_CMPNNNN": "Padrão da Política do CMake CMP<NNNN> quando estiver sem definição.",
	"assets/variables.json.CMAKE_POLICY_WARNING_CMPNNNN": "Habilite ou desabilite explicitamente o aviso quando o CMP da Política CMake<NNNN>não tiver sido definido explicitamente por cmake_policy ou implicitamente por cmake_minimum_required. Isso é significativo somente para as políticas que não avisam por padrão:",
	"assets/variables.json.CMAKE_POSITION_INDEPENDENT_CODE": "Valor padrão de POSITION_INDEPENDENT_CODE de destinos.",
	"assets/variables.json.CMAKE_PREFIX_PATH": "Lista de diretórios separada por ponto e vírgula que especifica os prefixos de instalação a serem pesquisados pelos comandos find_package, find_program, find_library, find_file e find_path. Cada comando adicionará os subdiretórios apropriados (como bin, lib ou de inclusão) conforme a especificação na documentação de cada um.",
	"assets/variables.json.CMAKE_PROGRAM_PATH": "Lista separada por ponto e vírgula de diretórios que especifica um caminho de pesquisa para o comando find_program. Por padrão, essa opção fica vazia e deve ser definida pelo projeto.",
	"assets/variables.json.CMAKE_PROJECT_DESCRIPTION": "A descrição do projeto de nível superior.",
	"assets/variables.json.CMAKE_PROJECT_HOMEPAGE_URL": "A URL da home page do projeto de nível superior.",
	"assets/variables.json.CMAKE_PROJECT_INCLUDE": "Um arquivo de linguagem CMake a ser incluído como a última etapa de todas as chamadas de comando do projeto. Isso é destinado a injetar código personalizado em compilações do projeto sem modificar a origem. Confira Injeção de código para obter uma discussão mais detalhada dos arquivos potencialmente incluídos durante uma chamada de projeto.",
	"assets/variables.json.CMAKE_PROJECT_INCLUDE_BEFORE": "Um arquivo de linguagem CMake a ser incluído como a primeira etapa de todas as chamadas de comando do projeto. Isso é destinado a injetar código personalizado em compilações do projeto sem modificar a origem. Confira Injeção de código para obter uma discussão mais detalhada dos arquivos potencialmente incluídos durante uma chamada de projeto.",
	"assets/variables.json.CMAKE_PROJECT_NAME": "O nome do projeto de nível superior.",
	"assets/variables.json.CMAKE_PROJECT_PROJECT-NAME_INCLUDE": "Um arquivo de linguagem CMake a ser incluído como a última etapa de qualquer chamada de comando de projeto que especifique <PROJECT-NAME> como o nome do projeto. Isso é destinado a injetar código personalizado em compilações do projeto sem modificar a origem. Confira Injeção de código para obter uma discussão mais detalhada dos arquivos potencialmente incluídos durante uma chamada de projeto.",
	"assets/variables.json.CMAKE_PROJECT_PROJECT-NAME_INCLUDE_BEFORE": "Um arquivo de linguagem CMake a ser incluído como a primeira etapa de qualquer chamada de comando de projeto que especifique <PROJECT-NAME> como o nome do projeto. Isso é destinado a injetar código personalizado em compilações do projeto sem modificar a origem. Confira Injeção de código para obter uma discussão mais detalhada dos arquivos potencialmente incluídos durante uma chamada de projeto.",
	"assets/variables.json.CMAKE_PROJECT_TOP_LEVEL_INCLUDES": "Lista separada por ponto e vírgula de arquivos de linguagem CMake a serem incluídos como parte da primeira chamada do projeto. Os arquivos serão incluídos imediatamente depois que o arquivo de cadeia de ferramentas tiver sido lido (se um for especificado) e as variáveis de plataforma tiverem sido definidas, mas antes de qualquer idioma ter sido habilitado. Portanto, variáveis específicas de linguagem, incluindo itens como CMAKE_< LANG>_COMPILER, talvez não estejam definidas. Consulte Injeção de Código para consultar uma discussão mais detalhada dos arquivos potencialmente incluídos durante uma chamada de projeto.",
	"assets/variables.json.CMAKE_PROJECT_VERSION": "A versão do projeto de nível superior.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_MAJOR": "A versão principal do projeto de nível superior.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_MINOR": "A versão secundária do projeto de nível superior.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_PATCH": "A versão de patch do projeto de nível superior.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_TWEAK": "A versão de ajuste do projeto de nível superior.",
	"assets/variables.json.CMAKE_RANLIB": "Nome da ferramenta de geração aleatória das bibliotecas estáticas.",
	"assets/variables.json.CMAKE_REQUIRE_FIND_PACKAGE_PackageName": "Variável para fazer a chamada find_package OBRIGATÓRIA.",
	"assets/variables.json.CMAKE_ROOT": "O diretório de instalação para executar o cmake.",
	"assets/variables.json.CMAKE_RULE_MESSAGES": "Especificar se deseja relatar uma mensagem para cada regra do make.",
	"assets/variables.json.CMAKE_RUNTIME_OUTPUT_DIRECTORY": "Local no qual todos os arquivos de destino de RUNTIME devem ser colocados quando compilados.",
	"assets/variables.json.CMAKE_RUNTIME_OUTPUT_DIRECTORY_CONFIG": "Local no qual todos os arquivos de destino de RUNTIME devem ser colocados quando compilados para uma configuração específica.",
	"assets/variables.json.CMAKE_SCRIPT_MODE_FILE": "Caminho completo para o arquivo de script do cmake -P que está sendo processado no momento.",
	"assets/variables.json.CMAKE_SHARED_LIBRARY_ENABLE_EXPORTS": "Especifique se a biblioteca compartilhada gerará um arquivo de importação.",
	"assets/variables.json.CMAKE_SHARED_LIBRARY_PREFIX": "O prefixo das bibliotecas compartilhadas às quais você vinculará.",
	"assets/variables.json.CMAKE_SHARED_LIBRARY_SUFFIX": "O sufixo das bibliotecas compartilhadas às quais você vincula.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS": "Os sinalizadores de vinculador a serem usados para criar bibliotecas compartilhadas.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS_CONFIG": "Os sinalizadores a serem usados ao vincular uma biblioteca compartilhada.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS_CONFIG_INIT": "O valor usado para inicializar a entrada de cache CMAKE_SHARED_LINKER_FLAGS_ na primeira vez em que uma árvore de build é configurada. Essa variável deve ser definida por um arquivo de cadeia de ferramentas. O CMake pode preceder ou acrescentar conteúdo ao valor com base no ambiente e na plataforma de destino.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS_INIT": "O valor usado para inicializar a entrada de cache CMAKE_SHARED_LINKER_FLAGS na primeira vez em que uma árvore de build é configurada. Essa variável deve ser definida por um arquivo de cadeia de ferramentas. O CMake pode preceder ou acrescentar conteúdo ao valor com base no ambiente e na plataforma de destino.",
	"assets/variables.json.CMAKE_SHARED_MODULE_PREFIX": "O prefixo dos módulos carregáveis aos quais você vinculará.",
	"assets/variables.json.CMAKE_SHARED_MODULE_SUFFIX": "O sufixo das bibliotecas compartilhadas às quais você vincula.",
	"assets/variables.json.CMAKE_SIZEOF_VOID_P": "Tamanho de um ponteiro nulo.",
	"assets/variables.json.CMAKE_SKIP_BUILD_RPATH": "Não incluir RPATHs na árvore de build.",
	"assets/variables.json.CMAKE_SKIP_INSTALL_ALL_DEPENDENCY": "Não fazer com que o destino de instalação dependa do destino todos.",
	"assets/variables.json.CMAKE_SKIP_INSTALL_RPATH": "Não incluir RPATHs na árvore de instalação.",
	"assets/variables.json.CMAKE_SKIP_INSTALL_RULES": "Se deseja desabilitar a geração de regras de instalação.",
	"assets/variables.json.CMAKE_SKIP_RPATH": "Se for true, não adicionar informações de caminho de tempo de execução.",
	"assets/variables.json.CMAKE_SKIP_TEST_ALL_DEPENDENCY": "Controle se o destino test depende do destino all.",
	"assets/variables.json.CMAKE_SOURCE_DIR": "O caminho para o nível superior da árvore de origem.",
	"assets/variables.json.CMAKE_STAGING_PREFIX": "Essa variável pode ser definida como um caminho de instalação durante uma compilação cruzada. Ela pode ser útil quando o caminho em CMAKE_SYSROOT é somente leitura. Em outros casos, ela deve permanecer primitiva.",
	"assets/variables.json.CMAKE_STATIC_LIBRARY_PREFIX": "O prefixo das bibliotecas estáticas às quais você vinculará.",
	"assets/variables.json.CMAKE_STATIC_LIBRARY_SUFFIX": "O sufixo das bibliotecas estáticas às quais você vinculará.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS": "Sinalizadores a serem usados para criar bibliotecas estáticas. Esses sinalizadores serão passados para o arquivador ao criar uma biblioteca estática.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS_CONFIG": "Sinalizadores a serem usados para criar bibliotecas estáticas. Esses sinalizadores serão passados para o arquivador ao criar uma biblioteca estática na configuração <CONFIG>.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS_CONFIG_INIT": "O valor usado para inicializar a entrada de cache CMAKE_STATIC_LINKER_FLAGS_ na primeira vez em que uma árvore de build é configurada. Essa variável deve ser definida por um arquivo de cadeia de ferramentas. O CMake pode preceder ou acrescentar conteúdo ao valor com base no ambiente e na plataforma de destino.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS_INIT": "O valor usado para inicializar a entrada de cache CMAKE_STATIC_LINKER_FLAGS na primeira vez em que uma árvore de build é configurada. Essa variável deve ser definida por um arquivo de cadeia de ferramentas. O CMake pode preceder ou acrescentar conteúdo ao valor com base no ambiente e na plataforma de destino.",
	"assets/variables.json.CMAKE_SUBLIME_TEXT_2_ENV_SETTINGS": "Esta variável contém uma lista de variáveis env como uma lista de tokens com a sintaxe var=value.",
	"assets/variables.json.CMAKE_SUBLIME_TEXT_2_EXCLUDE_BUILD_TREE": "Se essa variável for avaliada como ON no final do arquivo CMakeLists.txt de nível superior, o gerador extra Sublime Text 2 excluirá a árvore de build do .sublime-project se ela estiver dentro da árvore de origem.",
	"assets/variables.json.CMAKE_SUPPRESS_REGENERATION": "Se o CMAKE_SUPPRESS_REGENERATION estiver OFF, que é o padrão, o CMake adicionará um destino especial do qual todos os outros destinos serão dependentes, para verificar o sistema de build e, opcionalmente, executar o CMake novamente para regenerar o sistema de build, quando a origem da especificação de destino for alterada.",
	"assets/variables.json.CMAKE_Swift_COMPILATION_MODE": "Especifique como o Swift compila um destino. Esta variável é usada para inicializar a propriedade Swift_COMPILATION_MODE nos destinos conforme eles são criados.",
	"assets/variables.json.CMAKE_Swift_LANGUAGE_VERSION": "Defina o número de versão da linguagem Swift. Se não estiver definido, a versão mais antiga herdada que se sabe estar disponível na versão do host Xcode será usada:",
	"assets/variables.json.CMAKE_Swift_MODULE_DIRECTORY": "Diretório de saída do módulo do Swift.",
	"assets/variables.json.CMAKE_Swift_NUM_THREADS": "Número de threads para compilação paralela para destinos Swift.",
	"assets/variables.json.CMAKE_SYSROOT": "O caminho a ser passado para o compilador no sinalizador --sysroot.",
	"assets/variables.json.CMAKE_SYSROOT_COMPILE": "O caminho a ser passado para o compilador no sinalizador --sysroot durante a compilação de arquivos de origem. Essa opção é igual à CMAKE_SYSROOT, mas é usada somente para compilar origens e não para vincular.",
	"assets/variables.json.CMAKE_SYSROOT_LINK": "O caminho a ser passado para o compilador no sinalizador --sysroot durante a vinculação. Essa opção é igual à CMAKE_SYSROOT, mas é usada somente para vincular e não para compilar origens.",
	"assets/variables.json.CMAKE_SYSTEM": "O nome composto do sistema operacional para o qual o CMake está compilando.",
	"assets/variables.json.CMAKE_SYSTEM_APPBUNDLE_PATH": "O caminho de pesquisa de lotes de aplicativos do macOS usado pelos comandos find_program e find_package. Por padrão, ele contém os diretórios padrão do sistema atual. Ele não deve ser modificado pelo projeto, para isso, use CMAKE_APPBUNDLE_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_FRAMEWORK_PATH": "O caminho de pesquisa para as estruturas do macOS usado pelos comandos find_library, find_package, find_path e find_file. Por padrão, ele contém os diretórios padrão do sistema atual. Ele não deve ser modificado pelo projeto, para isso, use CMAKE_FRAMEWORK_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_IGNORE_PATH": "Lista separada por ponto e vírgula  dos diretórios a serem ignorados pelos vários comandos find...().",
	"assets/variables.json.CMAKE_SYSTEM_IGNORE_PREFIX_PATH": "Lista separada por ponto e vírgula de prefixos de pesquisa a serem ignorados pelos comandos find_program, find_library, find_file e find_path. Os prefixos também são ignorados pelo modo de configuração do comando find_package (O modo do módulo não é afetado). Para ignorar diretórios específicos, consulte CMAKE_IGNORE_NONPREFIX_VAR.",
	"assets/variables.json.CMAKE_SYSTEM_INCLUDE_PATH": "Lista separada por ponto e vírgula de diretórios que especifica um caminho de pesquisa para os comandos find_file e find_path. Por padrão, essa opção contém os diretórios padrão do sistema atual. Ela não deve ser modificada pelo projeto, para isso, use CMAKE_INCLUDE_PATH. Consulte também CMAKE_SYSTEM_PREFIX_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_LIBRARY_PATH": "Lista separada por ponto e vírgula de diretórios que especifica um caminho de pesquisa para o comando find_library. Por padrão, essa opção contém os diretórios padrão do sistema atual. Ela não deve ser modificada pelo projeto, para isso, use CMAKE_LIBRARY_PATH. Consulte também CMAKE_SYSTEM_PREFIX_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_NAME": "O nome do sistema operacional para o qual o CMake deve ser compilado. Consulte a variável CMAKE_SYSTEM_VERSION para obter a versão do sistema operacional.",
	"assets/variables.json.CMAKE_SYSTEM_PREFIX_PATH": "Lista de diretórios separada por ponto e vírgula que especifica os prefixos de instalação a serem pesquisados pelos comandos find_package, find_program, find_library, find_file e find_path. Cada comando adicionará os subdiretórios apropriados (como bin, lib ou de inclusão) conforme a especificação na documentação de cada um.",
	"assets/variables.json.CMAKE_SYSTEM_PROCESSOR": "Quando não se faz compilação cruzada, esta variável tem o mesmo valor da variável CMAKE_HOST_SYSTEM_PROCESSOR. Em muitos casos, isso corresponderá à arquitetura de destino para a compilação, mas isso não é garantido. (Por exemplo, no Windows, o host pode ser AMD64 mesmo quando se usa um compilador MSVC CL com um destino de 32 bits.)",
	"assets/variables.json.CMAKE_SYSTEM_PROGRAM_PATH": "Lista separada por ponto e vírgula de diretórios que especifica um caminho de pesquisa para o comando find_program. Por padrão, essa opção contém os diretórios padrão do sistema atual. Ela não deve ser modificada pelo projeto, para isso, use CMAKE_LIBRARY_PATH. Consulte também CMAKE_SYSTEM_PREFIX_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_VERSION": "A versão do sistema operacional para o qual o CMake deve ser compilado. Consulte a variável CMAKE_SYSTEM_NAME para obter o nome do sistema operacional.",
	"assets/variables.json.CMAKE_TASKING_TOOLSET": "Selecione o conjunto de ferramentas de Tarefas que fornece o compilador",
	"assets/variables.json.CMAKE_TEST_LAUNCHER": "Esta variável é usada para inicializar a propriedade de destino TEST_LAUNCHER dos destinos executáveis à medida que eles são criados. Usado para especificar um inicializador para a execução de testes, adicionado pelo comando add_test, que executa um destino executável.",
	"assets/variables.json.CMAKE_TLS_CAINFO": "Especifique o valor padrão para as opções TLS_CAINFO do arquivo e dos comandos de arquivo. Ele não é definido por padrão.",
	"assets/variables.json.CMAKE_TLS_VERIFY": "Especifique o valor padrão para as opções TLS_VERIFY dos comandos de arquivo e arquivo. Se esta variável não estiver definida, os comandos verificam a variável de ambiente CMAKE_TLS_VERIFY. Se nenhuma estiver definida, o padrão é desligado.",
	"assets/variables.json.CMAKE_TLS_VERSION": "Especifique o valor padrão para a opção TLS_VERSION dos comandos arquivo e arquivo. Se esta variável não estiver definida, os comandos verificam a variável de ambiente CMAKE_TLS_VERSION.",
	"assets/variables.json.CMAKE_TOOLCHAIN_FILE": "O caminho para o arquivo de cadeia de ferramentas fornecido ao cmake.",
	"assets/variables.json.CMAKE_TRY_COMPILE_CONFIGURATION": "Configuração de build usada para os projetos try_compile e try_run.",
	"assets/variables.json.CMAKE_TRY_COMPILE_NO_PLATFORM_VARIABLES": "Defina como um valor verdadeiro para informar ao comando try_compile para não propagar nenhuma variável de plataforma para o projeto de teste.",
	"assets/variables.json.CMAKE_TRY_COMPILE_PLATFORM_VARIABLES": "Lista de variáveis que a assinatura do arquivo de origem do comando try_compile precisa propagar ao projeto de teste para direcionar à mesma plataforma que a do projeto do host.",
	"assets/variables.json.CMAKE_TRY_COMPILE_TARGET_TYPE": "Tipo de destino gerado para chamadas try_compile usando a assinatura do arquivo de origem. Os valores válidos são:",
	"assets/variables.json.CMAKE_TWEAK_VERSION": "Definido como 0 para manter a compatibilidade com o código escrito para as versões mais antigas do CMake que podem ter definido valores mais altos.",
	"assets/variables.json.CMAKE_UNITY_BUILD": "Essa variável é usada para inicializar a propriedade UNITY_BUILD de destinos quando eles são criados. Defini-la como true habilita a compilação em lote de várias fontes em cada destino. Esse recurso é conhecido como build do Unity ou de Jumbo.",
	"assets/variables.json.CMAKE_UNITY_BUILD_BATCH_SIZE": "Essa variável é usada para inicializar a propriedade UNITY_BUILD_BATCH_SIZE de destinos quando eles são criados. Ela especifica o limite superior padrão do número de arquivos de origem que podem ser combinados em qualquer arquivo de origem do Unity quando os builds do Unity estão habilitados para um destino.",
	"assets/variables.json.CMAKE_UNITY_BUILD_UNIQUE_ID": "Esta variável é usada para inicializar a propriedade UNITY_BUILD_UNIQUE_ID de destinos quando eles são criados. Ela especifica o nome do identificador exclusivo gerado por arquivo em um build do Unity.",
	"assets/variables.json.CMAKE_USER_MAKE_RULES_OVERRIDE": "Especificar um arquivo do CMake que substituirá as informações de plataforma.",
	"assets/variables.json.CMAKE_USER_MAKE_RULES_OVERRIDE_LANG": "Especificar um arquivo do CMake que substituirá as informações de plataforma da <LANG>.",
	"assets/variables.json.CMAKE_USE_RELATIVE_PATHS": "Esta variável não tem efeito. O efeito parcialmente implementado que ela tinha nas versões anteriores foi removido no CMake 3.4.",
	"assets/variables.json.CMAKE_VERBOSE_MAKEFILE": "Habilitar a saída detalhada dos builds do Makefile.",
	"assets/variables.json.CMAKE_VERIFY_INTERFACE_HEADER_SETS": "Essa variável é usada para inicializar a propriedade de destinos VERIFY_INTERFACE_HEADER_SETS quando eles são criados. Defini-la como true habilita a verificação do conjunto de cabeçalhos.",
	"assets/variables.json.CMAKE_VERSION": "A cadeia de caracteres de versão do CMake como três componentes inteiros não negativos separados por . e, possivelmente, seguidos por - e outras informações. Os dois primeiros componentes representam o nível do recurso e o terceiro componente representa um nível de correção de bug ou a data de desenvolvimento.",
	"assets/variables.json.CMAKE_VISIBILITY_INLINES_HIDDEN": "Valor padrão da propriedade de destino VISIBILITY_INLINES_HIDDEN quando um destino é criado.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_COMMAND": "Essa variável é usada para inicializar a propriedade VS_DEBUGGER_COMMAND em cada destino à medida que ele é criado. Consulte essa propriedade de destino para obter informações adicionais.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS": "Essa variável é usada para inicializar a propriedade VS_DEBUGGER_COMMAND_ARGUMENTS em cada destino à medida que ele for criado. Consulte essa propriedade de destino para obter informações adicionais.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_ENVIRONMENT": "Essa variável é usada para inicializar a propriedade VS_DEBUGGER_ENVIRONMENT em cada destino à medida que ele for criado. Consulte essa propriedade de destino para obter informações adicionais.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_WORKING_DIRECTORY": "Essa variável é usada para inicializar a propriedade VS_DEBUGGER_WORKING_DIRECTORY em cada destino à medida que ele for criado. Consulte essa propriedade de destino para obter informações adicionais.",
	"assets/variables.json.CMAKE_VS_DEVENV_COMMAND": "Os geradores para o Visual Studio 12 2013 e acima definem esta variável para o comando devenv.com instalado com a versão correspondente do Visual Studio. Observe que esta variável pode estar vazia nas edições do Visual Studio Express porque elas não fornecem esta ferramenta.",
	"assets/variables.json.CMAKE_VS_GLOBALS": "Lista de registros Chave=Valor a serem definidos por destino como propriedades VS_GLOBAL_ de destino com a variável = Chave e o valor igual a Valor.",
	"assets/variables.json.CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD": "Incluir o destino de INSTALAÇÃO no build padrão.",
	"assets/variables.json.CMAKE_VS_INCLUDE_PACKAGE_TO_DEFAULT_BUILD": "Incluir o destino de PACOTE no build padrão.",
	"assets/variables.json.CMAKE_VS_INTEL_Fortran_PROJECT_VERSION": "Ao gerar para o Visual Studio 12 2013 ou superior com o plug-in Intel Fortran instalado, isso especifica a versão do formato de arquivo de projeto .vfproj. Isso é destinado ao uso interno pelo CMake e não deve ser usado pelo código do projeto.",
	"assets/variables.json.CMAKE_VS_JUST_MY_CODE_DEBUGGING": "Habilitar Apenas Meu Código com o depurador do Visual Studio.",
	"assets/variables.json.CMAKE_VS_MSBUILD_COMMAND": "Os geradores do Visual Studio 12 2013 e posteriores definem essa variável como o comando MSBuild.exe instalado com a versão correspondente do Visual Studio.",
	"assets/variables.json.CMAKE_VS_NO_COMPILE_BATCHING": "Desabilitar o envio em lote de compilação ao usar geradores do Visual Studio.",
	"assets/variables.json.CMAKE_VS_NsightTegra_VERSION": "Quando um gerador do Visual Studio é usado com a variável CMAKE_SYSTEM_NAME definida como Android, essa variável contém o número de versão do NVIDIA Nsight Tegra Visual Studio Edition instalado.",
	"assets/variables.json.CMAKE_VS_NUGET_PACKAGE_RESTORE": "Ao usar um gerador do Visual Studio, esta variável de cache controla se o msbuild deve tentar automaticamente restaurar pacotes NuGet antes de uma compilação. Pacotes NuGet podem ser definidos usando a propriedade VS_PACKAGE_REFERENCES em um destino. Se nenhuma referência de pacote for definida, esta configuração não fará nada.",
	"assets/variables.json.CMAKE_VS_PLATFORM_NAME": "Nome da plataforma de destino do Visual Studio usada pelo gerador atual.",
	"assets/variables.json.CMAKE_VS_PLATFORM_NAME_DEFAULT": "Padrão para o nome da plataforma de destino do Visual Studio para o gerador atual sem considerar o valor da variável CMAKE_GENERATOR_PLATFORM. Para Geradores do Visual Studio para VS 2017 e abaixo, este sempre é Win32. Para o VS 2019 e superior, isso se baseia na plataforma do host.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET": "Nome do Conjunto de Ferramentas da Plataforma do Visual Studio.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_CUDA": "Versão do Kit de Ferramentas do NVIDIA CUDA cujo conjunto de ferramentas do Visual Studio usará.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_CUDA_CUSTOM_DIR": "Caminho para o Kit de ferramentas NVIDIA CUDA autônomo (por exemplo, extraído do instalador).",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_FORTRAN": "Compilador Fortran a ser usado por projetos do Visual Studio.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE": "Arquitetura da ferramenta preferencial do Visual Studio.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_VERSION": "Versão do Conjunto de Ferramentas da Plataforma do Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_EXCLUDE_DIRECTORIES": "Esta variável permite substituir os Diretórios de Exclusão padrão do Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_EXECUTABLE_DIRECTORIES": "Esta variável permite substituir os Diretórios de Executável padrão do Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_INCLUDE_DIRECTORIES": "Esta variável permite substituir os Diretórios de Inclusão padrão do Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_LIBRARY_DIRECTORIES": "Esta variável permite substituir os Diretórios de Biblioteca padrão do Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_LIBRARY_WINRT_DIRECTORIES": "Esta variável permite substituir os Diretórios WinRT de Biblioteca padrão do Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_REFERENCE_DIRECTORIES": "Esta variável permite substituir os Diretórios de Referência padrão do Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_SOURCE_DIRECTORIES": "Esta variável permite substituir os Diretórios de Origem padrão do Visual Studio.",
	"assets/variables.json.CMAKE_VS_TARGET_FRAMEWORK_IDENTIFIER": "Identificador da estrutura de destino do Visual Studio.",
	"assets/variables.json.CMAKE_VS_TARGET_FRAMEWORK_TARGETS_VERSION": "Versão de destinos da estrutura de destino do Visual Studio.",
	"assets/variables.json.CMAKE_VS_TARGET_FRAMEWORK_VERSION": "Versão da estrutura de destino do Visual Studio.",
	"assets/variables.json.CMAKE_VS_USE_DEBUG_LIBRARIES": "Indique aos Geradores do Visual Studio quais configurações são consideradas configurações de depuração. Isso controla a configuração UseDebugLibraries em cada configuração de um arquivo .vcxproj.",
	"assets/variables.json.CMAKE_VS_VERSION_BUILD_NUMBER": "Versão do Visual Studio.",
	"assets/variables.json.CMAKE_VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION": "Informe aos Geradores do Visual Studio para usar a Versão Mínima da Plataforma de Destino do Windows fornecida.",
	"assets/variables.json.CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION": "Versão da Plataforma de Destino Windows do Visual Studio.",
	"assets/variables.json.CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM": "Substitua a Versão Máxima do SDK do Windows 10 por VS 2015 e posteriores.",
	"assets/variables.json.CMAKE_VS_WINRT_BY_DEFAULT": "Informe aos Geradores do Visual Studio para VS 2010 e posteriores que a plataforma de destino habilita a compilação do WinRT por padrão e precisa ser desabilitada explicitamente caso /ZW ou VS_WINRT_COMPONENT sejam omitidos (em vez de habilitá-los caso uma dessas opções esteja presente)",
	"assets/variables.json.CMAKE_WARN_DEPRECATED": "Se deseja emitir avisos para uma funcionalidade preterida.",
	"assets/variables.json.CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION": "Solicite que o script cmake_install.cmake emita um aviso sempre que um arquivo com o DESTINO DE INSTALAÇÃO absoluto for encontrado.",
	"assets/variables.json.CMAKE_WATCOM_RUNTIME_LIBRARY": "Selecione a biblioteca de runtime Watcom para uso pelos compiladores cujo destino é o ABI do MSVC. Essa variável é usada para inicializar a propriedade WATCOM_RUNTIME_LIBRARY em todos os destinos conforme eles são criados. Ela também é propagada por chamadas para o comando try_compile no projeto de teste.",
	"assets/variables.json.CMAKE_WIN32_EXECUTABLE": "Valor padrão de WIN32_EXECUTABLE de destinos.",
	"assets/variables.json.CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS": "Valor padrão da propriedade de destino WINDOWS_EXPORT_ALL_SYMBOLS. Esta variável é usada para inicializar a propriedade em cada destino assim que ela é criada.",
	"assets/variables.json.CMAKE_XCODE_ATTRIBUTE_an-attribute": "Definir os atributos de destino do Xcode diretamente.",
	"assets/variables.json.CMAKE_XCODE_BUILD_SYSTEM": "Seleção do sistema de build do Xcode.",
	"assets/variables.json.CMAKE_XCODE_GENERATE_SCHEME": "Se habilitado, o gerador do Xcode gerará arquivos de esquema. Essas opções são úteis para invocar as ações analisar, arquivar, compilar para testar e testar da linha de comando.",
	"assets/variables.json.CMAKE_XCODE_GENERATE_TOP_LEVEL_PROJECT_ONLY": "Se habilitado, o gerador do Xcode gerará somente um único arquivo de projeto do Xcode para o comando project() na extremidade superior em vez de gerar um para cada comando project().",
	"assets/variables.json.CMAKE_XCODE_LINK_BUILD_PHASE_MODE": "Esta variável é usada para inicializar a propriedade XCODE_LINK_BUILD_PHASE_MODE em destinos. Ela afeta os métodos que o gerador do Xcode usa para vincular diferentes tipos de bibliotecas. O valor padrão é NONE.",
	"assets/variables.json.CMAKE_XCODE_PLATFORM_TOOLSET": "Seleção de compilador do Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER": "Se deseja habilitar o Address Sanitizer na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN": "Se deseja habilitar a opção Detectar uso de pilha após o retorno, na seção Diagnóstico do esquema, do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING": "Se deseja habilitar Permitir depuração ao usar o Navegador de Versões do documento na seção Opções do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER": "Se deseja desabilitar o Main Thread Checker na seção Diagnostics do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS": "Se deseja habilitar os Carregamentos de Biblioteca Dinâmica na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE": "Se deseja habilitar o uso da API do Vinculador Dinâmico na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENABLE_GPU_API_VALIDATION": "Valor da propriedade Metal: validação de API na seção Opções do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE": "Valor da propriedade para Captura de Quadro da GPU na seção Opções do esquema Xcode gerado. Os valores de Exemplo são Metal e Desabilitado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION": "Valor da propriedade Metal: validação do Sombreador na seção Opções do esquema Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENVIRONMENT": "Especificar as variáveis de ambiente que devem ser adicionadas à seção Argumentos do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_GUARD_MALLOC": "Se deseja habilitar o Guard Malloc na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_LAUNCH_CONFIGURATION": "Defina a configuração de compilação para executar o destino.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_LAUNCH_MODE": "Valor da propriedade para Iniciar na seção Informações do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP": "Se deseja habilitar a opção Pause em problemas do Main Thread Checker na seção Diagnostics do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MALLOC_GUARD_EDGES": "Se deseja habilitar o Guard Malloc Edges na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MALLOC_SCRIBBLE": "Se deseja habilitar o Malloc Scribble na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MALLOC_STACK": "Se deseja habilitar o Malloc Stack na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_THREAD_SANITIZER": "Se deseja habilitar o Thread Sanitizer na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_THREAD_SANITIZER_STOP": "Se deseja habilitar o Thread Sanitizer – Pause em problemas na seção Diagnostics do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER": "Se deseja habilitar o Undefined Behavior Sanitizer na seção Diagnostics do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP": "Se deseja habilitar a opção Pause em problemas do Undefined Behavior Sanitizer na seção Diagnostics do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_WORKING_DIRECTORY": "Especifique o Diretório de Trabalho das ações Executar e Perfil no esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ZOMBIE_OBJECTS": "Se deseja habilitar Objetos Zumbi na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.CMAKE_XCODE_XCCONFIG": "Se definido, o gerador Xcode registrará o arquivo especificado como um arquivo XCConfig global. Para arquivos XCConfig no nível de destino, consulte a propriedade de destino XCODE_XCCONFIG.",
	"assets/variables.json.CPACK_ABSOLUTE_DESTINATION_FILES": "Lista de arquivos que foram instalados usando um caminho de DESTINO ABSOLUTO.",
	"assets/variables.json.CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY": "Alternância booliana para incluir/excluir o diretório de nível superior (em caso de componente).",
	"assets/variables.json.CPACK_CUSTOM_INSTALL_VARIABLES": "As variáveis CPack (definidas por exemplo, cpack -D, CPackConfig.cmake ou scripts CPACK_PROJECT_CONFIG_FILE) não são visíveis diretamente nos scripts de instalação. Em vez disso, é possível passar uma lista de pares varName=value na variável CPACK_CUSTOM_INSTALL_VARIABLES. No momento da instalação, cada item de lista resultará na definição de uma variável do nome especificado (varName) como o valor fornecido. O = pode ser omitido para um valor vazio.",
	"assets/variables.json.CPACK_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION": "Solicite que o CPack emita um erro assim que um arquivo com o DESTINO DE INSTALAÇÃO absoluto for encontrado.",
	"assets/variables.json.CPACK_INCLUDE_TOPLEVEL_DIRECTORY": "Alternância booliana do diretório de inclusão/exclusão de nível superior.",
	"assets/variables.json.CPACK_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS": "Permissões padrão para os diretórios criados implicitamente durante o empacotamento.",
	"assets/variables.json.CPACK_PACKAGING_INSTALL_PREFIX": "O prefixo usado no pacote compilado.",
	"assets/variables.json.CPACK_SET_DESTDIR": "Alternância booliana para fazer com que o CPack use o mecanismo DESTDIR durante o empacotamento.",
	"assets/variables.json.CPACK_WARN_ON_ABSOLUTE_INSTALL_DESTINATION": "Solicite que o CPack emita um aviso sempre que um arquivo com o DESTINO DE INSTALAÇÃO absoluto for encontrado.",
	"assets/variables.json.CTEST_BINARY_DIRECTORY": "Especificar a configuração de BuildDirectory do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_BUILD_COMMAND": "Especificar a configuração de MakeCommand do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_BUILD_NAME": "Especificar a configuração de BuildName do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_BZR_COMMAND": "Especificar a configuração de BZRCommand do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_BZR_UPDATE_OPTIONS": "Especificar a configuração de BZRUpdateOptions do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_CHANGE_ID": "Especificar a configuração de ChangeId do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_CHECKOUT_COMMAND": "Informar ao comando ctest_start como fazer check-out do diretório de origem ou inicializá-lo em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_CONFIGURATION_TYPE": "Especificar a configuração de DefaultCTestConfigurationType do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_CONFIGURE_COMMAND": "Especificar a configuração de ConfigureCommand do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_COVERAGE_COMMAND": "Especificar a configuração de CoverageCommand do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_COVERAGE_EXTRA_FLAGS": "Especificar a configuração de CoverageExtraFlags do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_CURL_OPTIONS": "Especificar a configuração de CurlOptions do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_CUSTOM_COVERAGE_EXCLUDE": "Uma lista de expressões regulares que serão usadas para excluir arquivos, pelo caminho deles, da saída da cobertura pelo comando ctest_coverage.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_EXCEPTION": "Uma lista de expressões regulares que serão usadas para excluir as mensagens de erro detectadas nas saídas de build pelo comando ctest_build.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_MATCH": "Uma lista de expressões regulares que serão usadas para detectar mensagens de erro nas saídas de build pelo comando ctest_build.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_POST_CONTEXT": "O número de linhas a serem incluídas como o contexto que segue uma mensagem de erro do comando ctest_build. O padrão é 10.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_PRE_CONTEXT": "O número de linhas a serem incluídas como o contexto que precede uma mensagem de erro do comando ctest_build. O padrão é 10.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE": "Quando uma saída do teste com falha for salva, esse será o tamanho máximo, em bytes, que será coletado pelo comando ctest_test. O padrão é 307200 (300 KiB).Consulte CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION para possíveis modos de truncamento.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_NUMBER_OF_ERRORS": "O número máximo de erros em uma única etapa de build que serão detectados. Após esse número, o comando ctest_test truncará a saída. O padrão é 50.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_NUMBER_OF_WARNINGS": "O número máximo de aviso em uma única etapa de build que serão detectados. Após esse número, o comando ctest_test truncará a saída. O padrão é 50.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE": "Ao salvar a saída de um teste de passagem, esse é o tamanho máximo, em bytes, que será coletado pelo comando ctest_test. O padrão é 1024 (1 KiB). Consulte CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION para possíveis modos de truncamento.",
	"assets/variables.json.CTEST_CUSTOM_MEMCHECK_IGNORE": "Uma lista de expressões regulares a serem usadas para excluir testes durante o comando ctest_memcheck.",
	"assets/variables.json.CTEST_CUSTOM_POST_MEMCHECK": "Uma lista de comandos a serem executados no final do comando ctest_memcheck.",
	"assets/variables.json.CTEST_CUSTOM_POST_TEST": "Uma lista de comandos a serem executados no final do comando ctest_test.",
	"assets/variables.json.CTEST_CUSTOM_PRE_MEMCHECK": "Uma lista de comandos a serem executados no início do comando ctest_memcheck.",
	"assets/variables.json.CTEST_CUSTOM_PRE_TEST": "Uma lista de comandos a serem executados no início do comando ctest_test.",
	"assets/variables.json.CTEST_CUSTOM_TESTS_IGNORE": "Uma lista de nomes de testes a serem excluídos do conjunto de testes executados pelo comando ctest_test.",
	"assets/variables.json.CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION": "Defina o modo de truncamento de saída de teste caso um tamanho máximo seja configurado por meio das variáveis CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE ou CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE. Por padrão, a parte final da saída será truncada. Outros valores possíveis são middle e head.",
	"assets/variables.json.CTEST_CUSTOM_WARNING_EXCEPTION": "Uma lista de expressões regulares que serão usadas para excluir as mensagens de aviso detectadas nas saídas de build pelo comando ctest_test.",
	"assets/variables.json.CTEST_CUSTOM_WARNING_MATCH": "Uma lista de expressões regulares que serão usadas para detectar mensagens de aviso nas saídas de build pelo comando ctest_test.",
	"assets/variables.json.CTEST_CVS_CHECKOUT": "Preterido. Use CTEST_CHECKOUT_COMMAND.",
	"assets/variables.json.CTEST_CVS_COMMAND": "Especificar a configuração de CVSCommand do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_CVS_UPDATE_OPTIONS": "Especificar a configuração de CVSUpdateOptions do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_DROP_LOCATION": "Especificar a configuração de DropLocation do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_DROP_METHOD": "Especificar a configuração de DropMethod do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_DROP_SITE": "Especificar a configuração de DropSite do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_DROP_SITE_CDASH": "Especificar a configuração de IsCDash do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_DROP_SITE_PASSWORD": "Especificar a configuração de DropSitePassword do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_DROP_SITE_USER": "Especificar a configuração de DropSiteUser do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_EXTRA_COVERAGE_GLOB": "Uma lista de expressões regulares que serão usadas para localizar os arquivos que devem ser cobertos pelo comando ctest_coverage.",
	"assets/variables.json.CTEST_GIT_COMMAND": "Especificar a configuração de GITCommand do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_GIT_INIT_SUBMODULES": "Especificar a configuração de GITInitSubmodules do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_GIT_UPDATE_CUSTOM": "Especificar a configuração de GITUpdateCustom do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_GIT_UPDATE_OPTIONS": "Especificar a configuração de GITUpdateOptions do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_HG_COMMAND": "Especificar a configuração de HGCommand do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_HG_UPDATE_OPTIONS": "Especificar a configuração de HGUpdateOptions do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_LABELS_FOR_SUBPROJECTS": "Especificar a configuração de LabelsForSubprojects do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_COMMAND": "Especificar a configuração de MemoryCheckCommand do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_COMMAND_OPTIONS": "Especificar a configuração de MemoryCheckCommandOptions do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_SANITIZER_OPTIONS": "Especificar a configuração de MemoryCheckSanitizerOptions do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_SUPPRESSIONS_FILE": "Especificar a configuração de MemoryCheckSuppressionFile do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_TYPE": "Especifique a configuração de MemoryCheckType do CTest em um script de cliente do painel do ctest. Os valores válidos são Valgrind, Purify, BoundsChecker, DrMemory, CudaSanitizer, ThreadSanitizer, AddressSanitizer, LeakSanitizer, MemorySanitizer e UndefinedBehaviorSanitizer.",
	"assets/variables.json.CTEST_NIGHTLY_START_TIME": "Especificar a configuração de NightlyStartTime do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_P4_CLIENT": "Especificar a configuração de P4Client do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_P4_COMMAND": "Especificar a configuração de P4Command do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_P4_OPTIONS": "Especificar a configuração de P4Options do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_P4_UPDATE_OPTIONS": "Especificar a configuração de P4UpdateOptions do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_RESOURCE_SPEC_FILE": "Especificar a configuração de ResourceSpecFile do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_RUN_CURRENT_SCRIPT": "A configuração desse valor como 0 impede que o ctest seja executado novamente depois de atingir o final de um script executado chamando ctest -S.",
	"assets/variables.json.CTEST_SCP_COMMAND": "Opção herdada. Não usado.",
	"assets/variables.json.CTEST_SCRIPT_DIRECTORY": "O diretório que contém o script CTest de nível superior. O conceito é semelhante ao CMAKE_SOURCE_DIR.",
	"assets/variables.json.CTEST_SITE": "Especificar a configuração de Site do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_SOURCE_DIRECTORY": "Especificar a configuração de SourceDirectory do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_SUBMIT_INACTIVITY_TIMEOUT": "Especifique a configuração CTest SubmitInactivityTimeout em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_SUBMIT_URL": "Especificar a configuração de SubmitURL do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_SVN_COMMAND": "Especificar a configuração de SVNCommand do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_SVN_OPTIONS": "Especificar a configuração de SVNOptions do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_SVN_UPDATE_OPTIONS": "Especificar a configuração de SVNUpdateOptions do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_TEST_LOAD": "Especificar a configuração de TestLoad na Etapa de Teste do CTest de um script de cliente do painel do ctest. Essa opção define o valor padrão da opção TEST_LOAD do comando ctest_test.",
	"assets/variables.json.CTEST_TEST_TIMEOUT": "Especificar a configuração de TimeOut do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_TLS_VERIFY": "Especifique a configuração CTest TLSVerify em um Script de cliente do Painel ctest ou no código CMakeLists.txt do projeto antes de incluir o módulo CTest. O valor é um booliano que indica se deve verificar o certificado do servidor ao enviar para um painel via URLs https://.",
	"assets/variables.json.CTEST_TLS_VERSION": "Especifique a configuração TLSVersion do CTest em um Script de cliente do Painel do ctest ou no código do CMakeLists.txt do projeto antes de incluir o módulo CTest. O valor é uma versão mínima do TLS permitida ao enviar para um painel via URLs https://.",
	"assets/variables.json.CTEST_TRIGGER_SITE": "Opção herdada. Não usado.",
	"assets/variables.json.CTEST_UPDATE_COMMAND": "Especificar a configuração de UpdateCommand do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_UPDATE_OPTIONS": "Especificar a configuração de UpdateOptions do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_UPDATE_VERSION_ONLY": "Especificar a configuração de UpdateVersionOnly do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_UPDATE_VERSION_OVERRIDE": "Especificar a configuração de UpdateVersionOverride do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CTEST_USE_LAUNCHERS": "Especificar a configuração de UseLaunchers do CTest em um script de cliente do painel do ctest.",
	"assets/variables.json.CYGWIN": "True para Cygwin.",
	"assets/variables.json.ENV": "Operador para ler variáveis de ambiente.",
	"assets/variables.json.EXECUTABLE_OUTPUT_PATH": "Variável do local antigo do executável.",
	"assets/variables.json.GHSMULTI": "1 ao usar o gerador Green Hills MULTI.",
	"assets/variables.json.IOS": "Definido como 1 quando o sistema de destino (CMAKE_SYSTEM_NAME) é o iOS.",
	"assets/variables.json.LIBRARY_OUTPUT_PATH": "Variável do local antigo da biblioteca.",
	"assets/variables.json.LINUX": "Definir como verdadeiro quando o sistema de destino for Linux.",
	"assets/variables.json.MINGW": "Definido como um valor verdadeiro quando pelo menos uma linguagem estiver ativada com um compilador que tem como destino o GNU ABI no Windows (MinGW).",
	"assets/variables.json.MSVC": "Definir como true quando o compilador for de alguma versão do Microsoft Visual C++ ou outro compilador que simule a sintaxe da linha de comando cl do Visual C++.",
	"assets/variables.json.MSVC10": "Não recomendado. Use a variável MSVC_VERSION.",
	"assets/variables.json.MSVC11": "Não recomendado. Use a variável MSVC_VERSION.",
	"assets/variables.json.MSVC12": "Não recomendado. Use a variável MSVC_VERSION.",
	"assets/variables.json.MSVC14": "Não recomendado. Use a variável MSVC_VERSION.",
	"assets/variables.json.MSVC60": "Não recomendado. Use a variável MSVC_VERSION.",
	"assets/variables.json.MSVC70": "Não recomendado. Use a variável MSVC_VERSION.",
	"assets/variables.json.MSVC71": "Não recomendado. Use a variável MSVC_VERSION.",
	"assets/variables.json.MSVC80": "Não recomendado. Use a variável MSVC_VERSION.",
	"assets/variables.json.MSVC90": "Não recomendado. Use a variável MSVC_VERSION.",
	"assets/variables.json.MSVC_IDE": "True ao usar o IDE do Microsoft Visual C++.",
	"assets/variables.json.MSVC_TOOLSET_VERSION": "A versão do conjunto de ferramentas do Microsoft Visual C/C++ usado, se houver algum. Se estiver sendo usado algum semelhante ao MSVC, essa variável será definida com base na versão do compilador fornecida pela variável MSVC_VERSION.",
	"assets/variables.json.MSVC_VERSION": "A versão do Microsoft Visual C/C++ usado, se houver algum. Se estiver sendo usado um compilador que simule o Visual C++, essa variável será definida como a versão do conjunto de ferramentas simulado indicada pela definição do pré-processador _MSC_VER.",
	"assets/variables.json.MSYS": "True ao usar o gerador de Makefiles do MSYS.",
	"assets/variables.json.PackageName_ROOT": "As chamadas para find_package(<PackageName>) pesquisarão os prefixos especificados pela variável <PackageName>_ROOT do CMake, em que <PackageName> é o nome dado à chamada de find_package e _ROOT é um literal. Por exemplo, find_package(Foo) pesquisará os prefixos especificados na variável Foo_ROOT do CMake (caso ela esteja definida). Consulte a política CMP0074.",
	"assets/variables.json.PROJECT-NAME_BINARY_DIR": "Diretório de binário de nível superior do projeto nomeado.",
	"assets/variables.json.PROJECT-NAME_DESCRIPTION": "O valor fornecido para a opção DESCRIPTION da chamada mais recente para o comando do projeto com o nome de projeto <PROJECT-NAME>, se houver algum.",
	"assets/variables.json.PROJECT-NAME_HOMEPAGE_URL": "O valor fornecido para a opção HOMEPAGE_URL da chamada mais recente para o comando do projeto com o nome de projeto <PROJECT-NAME>, se houver algum.",
	"assets/variables.json.PROJECT-NAME_IS_TOP_LEVEL": "Uma variável booliana que indica se o projeto nomeado foi chamado em um arquivo CMakeLists.txt de nível superior.",
	"assets/variables.json.PROJECT-NAME_SOURCE_DIR": "Diretório de origem de nível superior do projeto nomeado.",
	"assets/variables.json.PROJECT-NAME_VERSION": "O valor fornecido para a opção VERSION da chamada mais recente para o comando do projeto com o nome de projeto <PROJECT-NAME>, se houver algum.",
	"assets/variables.json.PROJECT-NAME_VERSION_MAJOR": "O primeiro componente de número de versão da variável <PROJECT-NAME>_VERSION definido pelo comando do projeto.",
	"assets/variables.json.PROJECT-NAME_VERSION_MINOR": "O segundo componente do número de versão da variável <PROJECT-NAME>_VERSION, conforme a definição do comando do projeto.",
	"assets/variables.json.PROJECT-NAME_VERSION_PATCH": "O terceiro componente de número de versão da variável <PROJECT-NAME>_VERSION, conforme a definição do comando do projeto.",
	"assets/variables.json.PROJECT-NAME_VERSION_TWEAK": "O quarto componente de número de versão da variável <PROJECT-NAME>_VERSION definido pelo comando do projeto.",
	"assets/variables.json.PROJECT_BINARY_DIR": "O caminho completo para o diretório de build do projeto.",
	"assets/variables.json.PROJECT_DESCRIPTION": "Descrição curta do projeto fornecida para o comando do projeto.",
	"assets/variables.json.PROJECT_HOMEPAGE_URL": "A URL da home page do projeto.",
	"assets/variables.json.PROJECT_IS_TOP_LEVEL": "Uma variável booliana que indica se o comando de projeto chamado mais recentemente no escopo atual ou acima estava no arquivo CMakeLists.txt de nível superior.",
	"assets/variables.json.PROJECT_NAME": "Nome do projeto fornecido ao comando do projeto.",
	"assets/variables.json.PROJECT_SOURCE_DIR": "Este é o diretório de origem da última chamada para o comando de projeto criado no escopo do diretório atual ou em um de seus pais. Observe que não é afetado pelas chamadas ao projeto feitas dentro de um escopo de diretório filho (ou seja, de dentro de uma chamada para add_subdirectory do escopo atual).",
	"assets/variables.json.PROJECT_VERSION": "O valor fornecido para a opção VERSION da chamada mais recente para o comando do projeto, se houver algum.",
	"assets/variables.json.PROJECT_VERSION_MAJOR": "O primeiro componente de número de versão da variável PROJECT_VERSION definido pelo comando do projeto.",
	"assets/variables.json.PROJECT_VERSION_MINOR": "O segundo componente do número de versão da variável PROJECT_VERSION, conforme a definição do comando do projeto.",
	"assets/variables.json.PROJECT_VERSION_PATCH": "O terceiro componente de número de versão da variável PROJECT_VERSION, conforme a definição do comando do projeto.",
	"assets/variables.json.PROJECT_VERSION_TWEAK": "O quarto componente de número de versão da variável PROJECT_VERSION definido pelo comando do projeto.",
	"assets/variables.json.UNIX": "Definir como True se o sistema de destino for o UNIX ou semelhante ao UNIX (por exemplo, APPLE e CYGWIN). A variável CMAKE_SYSTEM_NAME deverá ser consultada quando uma compreensão mais específica do sistema de destino for necessária.",
	"assets/variables.json.WIN32": "Definir como True se o sistema de destino for o Windows, incluindo o Win64.",
	"assets/variables.json.WINCE": "True quando a variável CMAKE_SYSTEM_NAME está definida como WindowsCE.",
	"assets/variables.json.WINDOWS_PHONE": "True quando a variável CMAKE_SYSTEM_NAME está definida como WindowsPhone.",
	"assets/variables.json.WINDOWS_STORE": "True quando a variável CMAKE_SYSTEM_NAME está definida como WindowsStore.",
	"assets/variables.json.XCODE": "True ao usar o gerador do Xcode.",
	"assets/variables.json.XCODE_VERSION": "A versão do Xcode (somente gerador do Xcode).",
	"assets/variables.json.ADVANCED": "True se a entrada deve ser ocultada por padrão em GUIs.",
	"assets/variables.json.HELPSTRING": "A ajuda associada à entrada nas GUIs.",
	"assets/variables.json.MODIFIED": "Propriedade de gerenciamento interna. Não definir ou obter.",
	"assets/variables.json.STRINGS": "Enumerar os possíveis valores de entrada de STRING para a seleção da GUI.",
	"assets/variables.json.TYPE": "Tipo de widget para entrada em GUIs.",
	"assets/variables.json.VALUE": "O valor de uma entrada de cache.",
	"assets/variables.json.ADDITIONAL_CLEAN_FILES": "Uma lista separada por ponto e vírgula dos arquivos ou diretórios que serão removidos como parte do destino de limpeza global. É útil para especificar arquivos ou diretórios gerados que são usados por vários destinos ou pelo CMake em si ou que são gerados de maneiras que não podem ser capturados como saídas ou subprodutos de comandos personalizados.",
	"assets/variables.json.ADDITIONAL_MAKE_CLEAN_FILES": "Arquivos adicionais a serem removidos durante a fase de limpeza.",
	"assets/variables.json.BINARY_DIR": "Esta propriedade de diretório somente leitura relata um caminho absoluto para o diretório binário correspondente à origem em que é lida.",
	"assets/variables.json.BUILDSYSTEM_TARGETS": "Esta propriedade de diretório somente leitura contém uma lista separada por ponto e vírgula de destinos buildsystem adicionados no diretório pelas chamadas para os comandos add_library, add_executable e add_custom_target. A lista não inclui nenhum Destino Importado ou Destino de Alias, mas inclui Bibliotecas de Interface. Cada entrada na lista é o nome lógico do destino, adequado para passar para a opção TARGET do comando get_property.",
	"assets/variables.json.CACHE_VARIABLES": "Lista de variáveis de cache disponíveis no diretório atual.",
	"assets/variables.json.CLEAN_NO_CUSTOM": "Definir como true para informar aos Geradores de Makefile que eles não devem remover as saídas de comandos personalizados deste diretório durante a operação make clean. Essa opção será ignorada em outros geradores porque não é possível implementá-la.",
	"assets/variables.json.CMAKE_CONFIGURE_DEPENDS": "Informar o CMake sobre os arquivos de entrada adicionais para o processo de configuração. Se algum arquivo nomeado for modificado, o sistema de build executará o CMake novamente para reconfigurar o arquivo e gerar sistema de build novamente.",
	"assets/variables.json.COMPILE_DEFINITIONS": "Definições do pré-processador para compilar as origens de um destino.",
	"assets/variables.json.COMPILE_DEFINITIONS_CONFIG": "Ignorado. Consulte a Política do CMake CMP0043.",
	"assets/variables.json.COMPILE_OPTIONS": "Lista de opções a serem passadas para o compilador.",
	"assets/variables.json.DEFINITIONS": "Somente para manter a compatibilidade com o CMake 2.4. Use COMPILE_DEFINITIONS.",
	"assets/variables.json.EXCLUDE_FROM_ALL": "Defina essa propriedade de diretório como um valor true em um subdiretório para excluir seus destinos do destino \"all\" de seus ancestrais. Se excluído, a execução de, por exemplo, make no diretório pai não compilará, por padrão, o destino do subdiretório. Isso não afetará o destino \"all\" do subdiretório em si. A execução de, por exemplo, make dentro do subdiretório ainda compilará seus destinos.",
	"assets/variables.json.IMPLICIT_DEPENDS_INCLUDE_TRANSFORM": "Especificar transformações de linha #include para dependências em um diretório.",
	"assets/variables.json.IMPORTED_TARGETS": "Essa propriedade de diretório somente leitura contém uma lista separada por ponto e vírgula de Destinos Importados adicionados ao diretório por chamadas para os comandos add_library e add_executable. Cada entrada na lista é o nome lógico de um destino, adequado para passar para a opção TARGET do comando get_property quando chamado no mesmo diretório.",
	"assets/variables.json.INCLUDE_DIRECTORIES": "Lista de diretórios de pesquisa de arquivo de inclusão do pré-processador.",
	"assets/variables.json.INCLUDE_REGULAR_EXPRESSION": "Expressão regular de verificação do arquivo de inclusão.",
	"assets/variables.json.INTERPROCEDURAL_OPTIMIZATION": "Essa propriedade de diretório não existe mais.",
	"assets/variables.json.INTERPROCEDURAL_OPTIMIZATION_CONFIG": "Essa propriedade de diretório não existe mais.",
	"assets/variables.json.LABELS": "Especifique uma lista de rótulos de texto associados a um diretório e a todos os seus subdiretórios. Isso é equivalente a definir a propriedade de destino LABELS e a propriedade de teste LABELS em todos os destinos e testes no diretório e subdiretórios atuais. Observação: os iniciadores precisam estar habilitados para propagar rótulos aos destinos.",
	"assets/variables.json.LINK_DIRECTORIES": "Lista de diretórios de pesquisa do vinculador.",
	"assets/variables.json.LINK_OPTIONS": "Lista de opções a serem usadas para a etapa de link da biblioteca compartilhada, de módulo e de destinos executáveis, bem como a etapa de link de dispositivo.",
	"assets/variables.json.LISTFILE_STACK": "A pilha de listfiles atual que está sendo processada.",
	"assets/variables.json.MACROS": "Lista de comandos de macro disponíveis no diretório atual.",
	"assets/variables.json.PARENT_DIRECTORY": "Diretório de origem que adicionou o subdiretório atual.",
	"assets/variables.json.RULE_LAUNCH_COMPILE": "Especificar um inicializador de regras de compilação.",
	"assets/variables.json.RULE_LAUNCH_CUSTOM": "Especificar um inicializador de regras personalizadas.",
	"assets/variables.json.RULE_LAUNCH_LINK": "Especificar um inicializador de regras de link.",
	"assets/variables.json.SOURCE_DIR": "Esta propriedade de diretório somente leitura relata um caminho absoluto para o diretório de origem no qual ele é lido.",
	"assets/variables.json.SUBDIRECTORIES": "Esta propriedade de diretório somente leitura contém uma lista separada por ponto e vírgula de subdiretórios processados até o momento pelos comandos add_subdirectory ou subdirs. Cada entrada é o caminho absoluto para o diretório de origem (que contém o arquivo CMakeLists.txt). Ela é adequada para ser passada para a opção DIRECTORY do comando get_property.",
	"assets/variables.json.SYSTEM": "Essa propriedade de diretório é usada para inicializar a propriedade do destino SYSTEM para destinos não importados criados nesse diretório. É definida como verdadeiro por add_subdirectory e FetchContent_Declare quando a opção SYSTEM for fornecida como um argumento para esses comandos.",
	"assets/variables.json.TESTS": "Lista de testes.",
	"assets/variables.json.TEST_INCLUDE_FILE": "Preterido. Use TEST_INCLUDE_FILES.",
	"assets/variables.json.TEST_INCLUDE_FILES": "Uma lista de arquivos do Cmake que serão incluídos quando o ctest for executado.",
	"assets/variables.json.VARIABLES": "Lista de variáveis definidas no diretório atual.",
	"assets/variables.json.VS_GLOBAL_SECTION_POST_section": "Especificar uma seção global de postSolution no Visual Studio.",
	"assets/variables.json.VS_GLOBAL_SECTION_PRE_section": "Especificar uma seção global de preSolution no Visual Studio.",
	"assets/variables.json.VS_STARTUP_PROJECT": "Especificar o projeto de inicialização padrão em uma solução do Visual Studio.",
	"assets/variables.json.ALLOW_DUPLICATE_CUSTOM_TARGETS": "Permitir que destinos personalizados duplicados sejam criados.",
	"assets/variables.json.AUTOGEN_SOURCE_GROUP": "Nome do source_group dos arquivos AUTOMOC e AUTORCC gerados.",
	"assets/variables.json.AUTOGEN_TARGETS_FOLDER": "O nome da PASTA para destinos *_autogen que são adicionados automaticamente pelo CMake e para os quais a opção AUTOMOC está habilitada.",
	"assets/variables.json.AUTOMOC_SOURCE_GROUP": "Nome do source_group dos arquivos AUTOMOC gerados.",
	"assets/variables.json.AUTOMOC_TARGETS_FOLDER": "O nome da PASTA para destinos *_autogen que são adicionados automaticamente pelo CMake e para os quais a opção AUTOMOC está habilitada.",
	"assets/variables.json.AUTORCC_SOURCE_GROUP": "Nome do source_group dos arquivos AUTORCC gerados.",
	"assets/variables.json.AUTOUIC_SOURCE_GROUP": "Nome do source_group dos arquivos AUTOMOC gerados.",
	"assets/variables.json.CMAKE_CUDA_KNOWN_FEATURES": "Lista de recursos CUDA conhecidos por esta versão do CMake.",
	"assets/variables.json.CMAKE_CXX_KNOWN_FEATURES": "Lista de recursos C++ conhecidos por esta versão do CMake.",
	"assets/variables.json.CMAKE_C_KNOWN_FEATURES": "Lista de recursos C conhecidos por esta versão do CMake.",
	"assets/variables.json.CMAKE_HIP_KNOWN_FEATURES": "Lista de recursos HIP conhecidos por esta versão do CMake.",
	"assets/variables.json.CMAKE_ROLE": "Informa em qual modo o script atual em execução está. Pode ser um dos vários valores:",
	"assets/variables.json.DEBUG_CONFIGURATIONS": "Especificar quais configurações são para depuração.",
	"assets/variables.json.DISABLED_FEATURES": "Lista de recursos desabilitados durante a execução do CMake.",
	"assets/variables.json.ECLIPSE_EXTRA_CPROJECT_CONTENTS": "Conteúdo adicional a ser inserido no arquivo cproject do Eclipse gerado.",
	"assets/variables.json.ECLIPSE_EXTRA_NATURES": "Lista de natures a serem adicionados ao arquivo de projeto do Eclipse gerado.",
	"assets/variables.json.ENABLED_FEATURES": "Lista de recursos habilitados durante a execução do CMake.",
	"assets/variables.json.ENABLED_LANGUAGES": "Propriedade somente leitura que contém a lista de linguagens habilitadas no momento",
	"assets/variables.json.FIND_LIBRARY_USE_LIB32_PATHS": "Se o comando find_library deve pesquisar diretórios lib32 automaticamente.",
	"assets/variables.json.FIND_LIBRARY_USE_LIB64_PATHS": "Se find_library deve pesquisar diretórios lib64 automaticamente.",
	"assets/variables.json.FIND_LIBRARY_USE_LIBX32_PATHS": "Se o comando find_library deve pesquisar diretórios libx32 automaticamente.",
	"assets/variables.json.FIND_LIBRARY_USE_OPENBSD_VERSIONING": "Se find_library deve localizar bibliotecas compartilhadas do estilo OpenBSD.",
	"assets/variables.json.GENERATOR_IS_MULTI_CONFIG": "Propriedade somente leitura que é true em geradores de várias configurações.",
	"assets/variables.json.GLOBAL_DEPENDS_DEBUG_MODE": "Habilitar o modo de depuração do grafo de dependência de destino global.",
	"assets/variables.json.GLOBAL_DEPENDS_NO_CYCLES": "Não permitir os ciclos do grafo de dependência de destino global.",
	"assets/variables.json.INSTALL_PARALLEL": "Habilita a opção de instalação paralela para o gerador Ninja.",
	"assets/variables.json.IN_TRY_COMPILE": "Propriedade somente leitura que é true durante a configuração de try-compile.",
	"assets/variables.json.JOB_POOLS": "Somente Ninja: a lista de pools disponíveis.",
	"assets/variables.json.PACKAGES_FOUND": "Lista de pacotes que foram encontrados durante a execução do CMake.",
	"assets/variables.json.PACKAGES_NOT_FOUND": "Lista de pacotes que não foram encontrados durante a execução do CMake.",
	"assets/variables.json.PREDEFINED_TARGETS_FOLDER": "Nome da PASTA de destinos que são adicionados automaticamente pelo CMake.",
	"assets/variables.json.PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE": "Quando esta propriedade global está definida como verdadeiro, a variável CMAKE_PROJECT_TOP_LEVEL_INCLUDES é propagada para chamadas try_compile que usam a assinatura de projeto inteiro. As chamadas para a assinatura de arquivo de origem não são afetadas por esta propriedade. PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE está removido por padrão.",
	"assets/variables.json.REPORT_UNDEFINED_PROPERTIES": "Se definido, relatará neste arquivo todas as propriedades indefinidas.",
	"assets/variables.json.RULE_MESSAGES": "Especificar se deseja relatar uma mensagem para cada regra do make.",
	"assets/variables.json.TARGET_ARCHIVES_MAY_BE_SHARED_LIBS": "Definir se as bibliotecas compartilhadas podem ser nomeadas como arquivos mortos.",
	"assets/variables.json.TARGET_MESSAGES": "Especificar se deseja relatar a conclusão de cada destino.",
	"assets/variables.json.TARGET_SUPPORTS_SHARED_LIBS": "A plataforma de destino é compatível com bibliotecas compartilhadas.",
	"assets/variables.json.USE_FOLDERS": "Controla se a propriedade de destino FOLDER deve ser usada para organizar destinos em pastas. O valor de USE_FOLDERS no final do arquivo CMakeLists.txt de nível superior é o que determina o comportamento.",
	"assets/variables.json.XCODE_EMIT_EFFECTIVE_PLATFORM_NAME": "Controlar a emissão de EFFECTIVE_PLATFORM_NAME pelo gerador do Xcode.",
	"assets/variables.json.CPACK_DESKTOP_SHORTCUTS": "Especifica uma lista de nomes de atalho que devem ser criados na Área de Trabalho para este arquivo.",
	"assets/variables.json.CPACK_NEVER_OVERWRITE": "Solicitar que este arquivo não seja substituído na instalação ou na reinstalação.",
	"assets/variables.json.CPACK_PERMANENT": "Solicitar que este arquivo não seja removido na desinstalação.",
	"assets/variables.json.CPACK_STARTUP_SHORTCUTS": "Especifica uma lista de nomes de atalho que devem ser criados na pasta de Inicialização para este arquivo.",
	"assets/variables.json.CPACK_START_MENU_SHORTCUTS": "Especifica uma lista de nomes de atalho que devem ser criados no Menu Iniciar para este arquivo.",
	"assets/variables.json.CPACK_WIX_ACL": "Especifica as permissões de acesso para os arquivos ou diretórios instalados por um instalador WiX.",
	"assets/variables.json.ABSTRACT": "Este arquivo de origem é uma classe abstrata.",
	"assets/variables.json.AUTORCC_OPTIONS": "Opções adicionais para o rcc ao usar o AUTORCC",
	"assets/variables.json.AUTOUIC_OPTIONS": "Opções adicionais para o uic ao usar o AUTOUIC",
	"assets/variables.json.COMPILE_FLAGS": "Sinalizadores adicionais a serem incluídos ao compilar este arquivo de origem.",
	"assets/variables.json.CXX_SCAN_FOR_MODULES": "CXX_SCAN_FOR_MODULES é um booliano que especifica se o CMake examinará a origem em busca de dependências do módulo C++. Consulte também o CXX_SCAN_FOR_MODULES para configurações de todo o destino.",
	"assets/variables.json.EXTERNAL_OBJECT": "Se definido como true, será um arquivo de objeto.",
	"assets/variables.json.Fortran_FORMAT": "Definido como FIXO ou LIVRE para indicar o layout da fonte Fortran.",
	"assets/variables.json.Fortran_PREPROCESS": "Controle se o arquivo de origem Fortran deve ser incondicionalmente pré-processado.",
	"assets/variables.json.GENERATED": "Este arquivo de origem é gerado como parte do build ou do processo do CMake.",
	"assets/variables.json.HEADER_FILE_ONLY": "Este arquivo de origem é apenas um arquivo de cabeçalho.",
	"assets/variables.json.KEEP_EXTENSION": "Fazer com que o arquivo de saída tenha a mesma extensão que o arquivo de origem.",
	"assets/variables.json.LANGUAGE": "Especifique a linguagem de programação na qual um arquivo de origem é gravado.",
	"assets/variables.json.LOCATION": "O caminho completo para um arquivo de origem.",
	"assets/variables.json.MACOSX_PACKAGE_LOCATION": "Inserir um arquivo de origem dentro de um Lote de Aplicativo (MACOSX_BUNDLE), de um Pacote do Core Foundation (BUNDLE) ou de um Pacote de Estrutura (FRAMEWORK). Essa opção é aplicável ao macOS e ao iOS.",
	"assets/variables.json.OBJECT_DEPENDS": "Arquivos adicionais dos quais o arquivo de objeto compilado depende.",
	"assets/variables.json.OBJECT_OUTPUTS": "Saídas adicionais para uma regra de geradores de Ninja ou Makefile.",
	"assets/variables.json.SKIP_AUTOGEN": "Excluir o arquivo de origem do processamento do AUTOMOC, do AUTOUIC e do AUTORCC (para projetos do Qt).",
	"assets/variables.json.SKIP_AUTOMOC": "Excluir o arquivo de origem do processamento do AUTOMOC (para projetos do Qt).",
	"assets/variables.json.SKIP_AUTORCC": "Excluir o arquivo de origem do processamento do AUTORCC (para projetos do Qt).",
	"assets/variables.json.SKIP_AUTOUIC": "Excluir o arquivo de origem do processamento do AUTOUIC (para projetos do Qt).",
	"assets/variables.json.SKIP_LINTING": "Essa propriedade permite que você exclua um arquivo de origem específico do processo de lint. O processo de lint envolve a execução de ferramentas como <LANG>_CPPLINT, <LANG>_CLANG_TIDY, <LANG>_CPPCHECK e <LANG>_INCLUDE_WHAT_YOU_USE nos arquivos de origem, bem como a compilação de arquivos de cabeçalho como parte de VERIFY_INTERFACE_HEADER_SETS. Ao definir SKIP_LINTING em um arquivo de origem, as ferramentas de lint mencionadas não serão executadas nesse arquivo específico.",
	"assets/variables.json.SKIP_PRECOMPILE_HEADERS": "Este arquivo de origem foi ignorado pelo recurso PRECOMPILE_HEADERS.",
	"assets/variables.json.SKIP_UNITY_BUILD_INCLUSION": "Definir essa propriedade como true garante que o arquivo de origem será ignorado por builds de Unity quando seu destino associado tiver sua propriedade UNITY_BUILD definida como true. O arquivo de origem será compilado em seu próprio da mesma forma que faria com builds do Unity desabilitadas.",
	"assets/variables.json.Swift_DEPENDENCIES_FILE": "Esta propriedade define o caminho para o arquivo de dependência Swift (swiftdeps) para a origem. Se nenhum for especificado, o padrão será <OBJECT>.swiftdeps.",
	"assets/variables.json.Swift_DIAGNOSTICS_FILE": "Esta propriedade controla o local em que os diagnósticos Swift são serializados.",
	"assets/variables.json.SYMBOLIC": "Este é apenas um nome de uma regra.",
	"assets/variables.json.UNITY_GROUP": "Essa propriedade controla qual bucket a origem fará parte quando o UNITY_BUILD_MODE estiver definido como GROUP.",
	"assets/variables.json.VS_COPY_TO_OUT_DIR": "Define a marca <CopyToOutputDirectory> de um arquivo de origem em um arquivo de projeto do Visual Studio. Os valores válidos são Never, Always e PreserveNewest.",
	"assets/variables.json.VS_CSHARP_tagname": "Configuração específica do arquivo de origem do Visual Studio e do CSharp.",
	"assets/variables.json.VS_DEPLOYMENT_CONTENT": "Marque um arquivo de origem como conteúdo para implantação com um aplicativo do Windows Phone ou da Microsoft Store quando compilado com um gerador do Visual Studio <cmake-generators(7)>. O valor precisa ser avaliado como 1 ou 0 e pode usar as expressões de gerador <cmake-generator-expressions(7)> para fazer a escolha com base na configuração de build. A entrada do arquivo .vcxproj para o arquivo de origem será marcada como DeploymentContent ou ExcludedFromBuild para os valores 1 e 0, respectivamente.",
	"assets/variables.json.VS_DEPLOYMENT_LOCATION": "Especifica o local de implantação de um arquivo de origem de conteúdo com um aplicativo do Windows Phone ou da Microsoft Store quando compilado com um gerador <cmake-generators(7)> do Visual Studio. Essa propriedade é aplicável somente quando a VS_DEPLOYMENT_CONTENT é usada. O valor representa o caminho relativo para o pacote do aplicativo e aplica-se a todas as configurações.",
	"assets/variables.json.VS_INCLUDE_IN_VSIX": "Propriedade booliana para especificar se o arquivo deve ser incluído em um pacote de extensão do VSIX (Extensão de Integração do Visual Studio). Ela é necessária para o desenvolvimento de extensões do Visual Studio.",
	"assets/variables.json.VS_RESOURCE_GENERATOR": "Esta propriedade permite especificar o gerador de recurso a ser usado neste arquivo. O padrão será PublicResXFileCodeGenerator, se ela não estiver definida.",
	"assets/variables.json.VS_SETTINGS": "Defina os metadados de qualquer item em um arquivo.",
	"assets/variables.json.VS_SHADER_DISABLE_OPTIMIZATIONS": "Desabilitar as otimizações do compilador para um arquivo de origem .hlsl. Essa opção adiciona o sinalizador -Od à linha de comando da ferramenta FxCompiler. Especifique o valor true para essa propriedade para desabilitar as otimizações do compilador.",
	"assets/variables.json.VS_SHADER_ENABLE_DEBUG": "Habilitar informações de depuração para um arquivo de origem .hlsl. Essa opção adiciona o sinalizador -Zi à linha de comando da ferramenta FxCompiler. Especifique o valor true para gerar informações de depuração para o sombreador compilado.",
	"assets/variables.json.VS_SHADER_ENTRYPOINT": "Especifica o nome do ponto de entrada do sombreador de um arquivo de origem .hlsl.",
	"assets/variables.json.VS_SHADER_FLAGS": "Definir sinalizadores de sombreador do Visual Studio adicionais de um arquivo de origem .hlsl.",
	"assets/variables.json.VS_SHADER_MODEL": "Especifica o modelo de sombreador de um arquivo de origem .hlsl. Alguns tipos de sombreadores podem ser usados somente com modelos de sombreadores recentes",
	"assets/variables.json.VS_SHADER_OBJECT_FILE_NAME": "Especifica um nome de arquivo para o arquivo de objeto do sombreador compilado para um arquivo de origem .hlsl. Essa opção adiciona o sinalizador -Fo à linha de comando da ferramenta FxCompiler.",
	"assets/variables.json.VS_SHADER_OUTPUT_HEADER_FILE": "Definir o nome do arquivo de cabeçalho de saída que contém o código de objeto de um arquivo de origem .hlsl.",
	"assets/variables.json.VS_SHADER_TYPE": "Definir o tipo de sombreador do Visual Studio de um arquivo de origem .hlsl.",
	"assets/variables.json.VS_SHADER_VARIABLE_NAME": "Definir o nome da variável no arquivo de cabeçalho que contém o código de objeto de um arquivo de origem .hlsl.",
	"assets/variables.json.VS_TOOL_OVERRIDE": "Substituir a ferramenta do Visual Studio padrão que será aplicada ao arquivo de origem com uma nova ferramenta que não se baseia na extensão do arquivo.",
	"assets/variables.json.VS_XAML_TYPE": "Marcar um arquivo de origem de linguagem XAML como um tipo diferente da Página padrão. O uso mais comum seria definir o arquivo App.xaml padrão como ApplicationDefinition.",
	"assets/variables.json.WRAP_EXCLUDE": "Excluir este arquivo de origem de todas as técnicas de encapsulamento de código.",
	"assets/variables.json.XCODE_EXPLICIT_FILE_TYPE": "Defina o atributo explicitFileType do Xcode na referência dele a um arquivo de origem. O CMake computa um padrão com base na extensão do arquivo, mas pode ser informado explicitamente com essa propriedade.",
	"assets/variables.json.XCODE_FILE_ATTRIBUTES": "Adicione valores para a configuração de ATRIBUTOS do Xcode na referência deles a um arquivo de origem. Entre outras coisas, isso pode ser usado para definir a função em um arquivo .mig:",
	"assets/variables.json.XCODE_LAST_KNOWN_FILE_TYPE": "Definir o atributo lastKnownFileType do Xcode na referência dele a um arquivo de origem. O CMake computa um padrão com base na extensão do arquivo, mas pode ser informado explicitamente com essa propriedade.",
	"assets/variables.json.ATTACHED_FILES": "Anexar uma lista de arquivos ao envio de um painel.",
	"assets/variables.json.ATTACHED_FILES_ON_FAIL": "Anexe uma lista de arquivos ao envio de um painel se o teste falhar.",
	"assets/variables.json.COST": "Esta propriedade descreve o custo de um teste. Quando o teste paralelo está habilitado, os testes no conjunto de testes são executados em ordem decrescente de custo. Projetos podem definir explicitamente o custo de um teste definindo essa propriedade como um valor de ponto flutuante.",
	"assets/variables.json.DEPENDS": "Especifica que este teste deve ser executado somente após a lista de testes especificada.",
	"assets/variables.json.DISABLED": "Se definido como True, o teste será ignorado e seu status será 'Não Executado'. Um teste DISABLED não será contado no número total de testes e seu status de conclusão será relatado ao CDash como Desabilitado.",
	"assets/variables.json.ENVIRONMENT": "Especificar as variáveis de ambiente que devem ser definidas para executar um teste.",
	"assets/variables.json.ENVIRONMENT_MODIFICATION": "Especifique as variáveis de ambiente que devem ser modificadas para executar um teste. Observe que as operações realizadas por esta propriedade são executadas após a propriedade ENVIRONMENT já ter sido aplicada.",
	"assets/variables.json.FAIL_REGULAR_EXPRESSION": "Se a saída de teste (stdout ou stderr) corresponder a esta expressão regular, o teste falhará, independentemente do código de saída do processo. Os testes que excedem o tempo limite especificado por TIMEOUT falham independentemente de FAIL_REGULAR_EXPRESSION. Qualquer código de retorno diferente de zero ou falhas de teste no nível do sistema, incluindo falhas de segmentação, anulação de sinal ou erros de heap, falhará no teste mesmo que a expressão regular não corresponda.",
	"assets/variables.json.FIXTURES_CLEANUP": "Especifica uma lista de acessórios para os quais o teste deverá ser tratado como um teste de limpeza. Esses nomes de acessórios são diferentes dos nomes de caso de teste e não precisam ter nenhuma semelhança com os nomes de testes associados a eles.",
	"assets/variables.json.FIXTURES_REQUIRED": "Especifica uma lista de acessórios que o teste requer. Os nomes de acessório diferenciam maiúsculas de minúsculas e não precisam ter nenhuma semelhança com os nomes de testes.",
	"assets/variables.json.FIXTURES_SETUP": "Especifica uma lista de acessórios para os quais o teste deverá ser tratado como um teste de configuração. Esses nomes de acessórios são diferentes dos nomes de caso de teste e não precisam ter nenhuma semelhança com os nomes de testes associados a eles.",
	"assets/variables.json.GENERATED_RESOURCE_SPEC_FILE": "Caminho para o arquivo de especificação de recurso gerado dinamicamente <ctest-resource-dynamically-generated-spec-file> gerado por esse teste.",
	"assets/variables.json.MEASUREMENT": "Especificar uma medida e um valor de CDASH a serem relatados para um teste.",
	"assets/variables.json.PASS_REGULAR_EXPRESSION": "A saída de teste (stdout ou stderr) deve corresponder a esta expressão regular para que o teste seja aprovado. O código de saída do processo é ignorado. Os testes que excedem o tempo limite especificado por TIMEOUT ainda falham, independentemente de PASS_REGULAR_EXPRESSION. Falhas de teste no nível do sistema, incluindo falhas de segmentação, anulação de sinal ou erros de heap, podem falhar no teste mesmo se PASS_REGULAR_EXPRESSION for correspondido.",
	"assets/variables.json.PROCESSORS": "Definir para especificar quantos slots de processo este teste requer. Se essa opção não estiver definida, o padrão será 1 processador.",
	"assets/variables.json.PROCESSOR_AFFINITY": "Definir como um valor true para solicitar que o CTest inicie o processo de teste com afinidade de CPU para um conjunto fixo de processadores. Se essa opção estiver habilitada e for compatível com a plataforma atual, o CTest escolherá um conjunto de processadores a serem colocados na máscara de afinidade de CPU ao iniciar o processo de teste. O número de processadores no conjunto é determinado pela propriedade de teste PROCESSADORES ou pelo número de processadores disponíveis para o CTest, qual for menor. O conjunto de processadores escolhido não será contíguo em relação aos processadores atribuídos a outros testes em execução simultaneamente que também tenham a propriedade PROCESSOR_AFFINITY habilitada.",
	"assets/variables.json.REQUIRED_FILES": "Lista de arquivos necessários para executar o teste. Os nomes de arquivo são relativos ao WORKING_DIRECTORY de teste, a menos que um caminho absoluto seja especificado.",
	"assets/variables.json.RESOURCE_GROUPS": "Especifique os recursos exigidos por um teste, agrupados de uma forma que seja significativa para o teste. Confira a alocação de recurso <ctest-resource-allocation> para obter mais informações sobre como essa propriedade se integra ao recurso de alocação de recurso CTest.",
	"assets/variables.json.RESOURCE_LOCK": "Especificar uma lista de recursos que estão bloqueados por este teste.",
	"assets/variables.json.RUN_SERIAL": "Não executar este teste em paralelo com qualquer outro teste.",
	"assets/variables.json.SKIP_REGULAR_EXPRESSION": "Se a saída de teste (stderr ou stdout) corresponder a esta expressão regular, o teste será marcado como ignorado, independentemente do código de saída do processo. Os testes que excedem o tempo limite especificado por TIMEOUT ainda falham, independentemente de SKIP_REGULAR_EXPRESSION. Falhas de teste no nível do sistema, incluindo falhas de segmentação, anulação de sinal ou erros de heap podem falhar no teste, mesmo que a expressão regular corresponda.",
	"assets/variables.json.SKIP_RETURN_CODE": "Retornar um código para marcar um teste como ignorado.",
	"assets/variables.json.TIMEOUT": "O número de segundos permitidos para este teste.",
	"assets/variables.json.TIMEOUT_AFTER_MATCH": "Alterar a duração do tempo limite de um teste depois que uma linha correspondente for encontrada na saída.",
	"assets/variables.json.TIMEOUT_SIGNAL_GRACE_PERIOD": "Se a propriedade de teste TIMEOUT_SIGNAL_NAME estiver definida, essa propriedade especificará o número de segundos a serem aguardados para que um processo de teste seja encerrado após o envio do sinal personalizado. Caso contrário, essa propriedade não terá significado.",
	"assets/variables.json.TIMEOUT_SIGNAL_NAME": "Especifique um sinal personalizado a ser enviado a um processo de teste quando o tempo limite for atingido. Isso está disponível somente em plataformas que com suporte para sinais POSIX. Não está disponível no Windows.",
	"assets/variables.json.WILL_FAIL": "Se verdadeiro, inverte os critérios de teste de aprovação/falha. Os testes para os quais WILL_FAIL é verdadeiro falham com o código de retorno 0 e passam com código de retorno diferente de zero. Os testes que excedem o tempo limite especificado por TIMEOUT ainda falham, independentemente de WILL_FAIL. Falhas de teste no nível do sistema, incluindo falhas de segmentação, anulação de sinal ou erros de heap, podem ocasionar a falha no teste mesmo se WILL_FAIL for verdadeiro.",
	"assets/variables.json.WORKING_DIRECTORY": "O diretório do qual o executável de teste será chamado.",
	"assets/variables.json.AIX_EXPORT_ALL_SYMBOLS": "No AIX, o CMake exporta automaticamente todos os símbolos de bibliotecas compartilhadas e de executáveis com a propriedade de destino ENABLE_EXPORTS definida. Desabilite explicitamente esta propriedade booliana para suprimir o comportamento e não exportar nenhum símbolo por padrão. Nesse caso, é esperado que o projeto use outros meios para exportar alguns símbolos.",
	"assets/variables.json.ALIASED_TARGET": "Nome do destino com alias aplicado por este destino.",
	"assets/variables.json.ALIAS_GLOBAL": "Propriedade somente leitura que indica se um destino do ALIAS é visível globalmente.",
	"assets/variables.json.ANDROID_ANT_ADDITIONAL_OPTIONS": "Defina as opções adicionais para o sistema de build Ant Android. Esse é um valor de cadeia de caracteres que contém todas as opções de linha de comando do build Ant. Essa propriedade será inicializada pelo valor da variável CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS se ela estiver definida quando o destino for criado.",
	"assets/variables.json.ANDROID_API": "No caso de Compilação Cruzada para Android com o NVIDIA Nsight Tegra Visual Studio Edition, essa propriedade define a versão da API de destino do Android (por exemplo, 15). O número de versão precisa ser um inteiro decimal positivo. Essa propriedade é inicializada pelo valor da variável CMAKE_ANDROID_API quando ela está definida durante a criação de um destino.",
	"assets/variables.json.ANDROID_API_MIN": "Definir a versão de API do Android MIN (por exemplo, 9). O número de versão precisa ser um inteiro decimal positivo. Essa propriedade será inicializada pelo valor da variável CMAKE_ANDROID_API_MIN se ela estiver definida quando o destino for criado. O código nativo é compilado usando essa versão de API.",
	"assets/variables.json.ANDROID_ARCH": "No caso de Compilação Cruzada para Android com o NVIDIA Nsight Tegra Visual Studio Edition, essa propriedade define a arquitetura de destino do Android.",
	"assets/variables.json.ANDROID_ASSETS_DIRECTORIES": "Definir os diretórios de ativos do Android a serem copiados na pasta principal de ativos antes do build. Essa é uma propriedade de cadeia de caracteres que contém os caminhos de diretório separados por ponto e vírgula. Essa propriedade será inicializada pelo valor da variável CMAKE_ANDROID_ASSETS_DIRECTORIES se ela estiver definida quando o destino for criado.",
	"assets/variables.json.ANDROID_GUI": "No caso de Compilação Cruzada para Android com o NVIDIA Nsight Tegra Visual Studio Edition, essa propriedade especifica se um executável deve ser compilado como um pacote de aplicativos no Android.",
	"assets/variables.json.ANDROID_JAR_DEPENDENCIES": "Definir a propriedade do Android que especifica as dependências de JAR. Essa é uma propriedade de cadeia de caracteres. Essa propriedade será inicializada pelo valor da variável CMAKE_ANDROID_JAR_DEPENDENCIES se ela estiver definida quando um destino for criado.",
	"assets/variables.json.ANDROID_JAR_DIRECTORIES": "Definir a propriedade do Android que especifica os diretórios nos quais as bibliotecas JAR devem ser pesquisadas.",
	"assets/variables.json.ANDROID_JAVA_SOURCE_DIR": "Definir a propriedade do Android que define os diretórios raiz do código-fonte Java. Essa é uma propriedade de cadeia de caracteres que contém os caminhos de diretório separados por ponto e vírgula. Essa propriedade será inicializada pelo valor da variável CMAKE_ANDROID_JAVA_SOURCE_DIR se ela estiver definida quando um destino for criado.",
	"assets/variables.json.ANDROID_NATIVE_LIB_DEPENDENCIES": "Definir a propriedade do Android que especifica as dependências de .so. Essa é uma propriedade de cadeia de caracteres.",
	"assets/variables.json.ANDROID_NATIVE_LIB_DIRECTORIES": "Definir a propriedade do Android que especifica os diretórios nos quais as bibliotecas .so devem ser pesquisadas.",
	"assets/variables.json.ANDROID_PROCESS_MAX": "Definir a propriedade do Android que define o número máximo de processos paralelos de um compilador Android NDK (por exemplo, 4). Essa propriedade será inicializada pelo valor da variável CMAKE_ANDROID_PROCESS_MAX se ela estiver definida quando um destino for criado.",
	"assets/variables.json.ANDROID_PROGUARD": "Quando essa propriedade estiver definida como true que habilita a ferramenta ProGuard a reduzir, otimizar e ocultar o código removendo código não usado e renomeando as classes, os campos e os métodos com nomes semanticamente obscuros. Essa propriedade será inicializada pelo valor da variável CMAKE_ANDROID_PROGUARD se ela estiver definida quando um destino for criado.",
	"assets/variables.json.ANDROID_PROGUARD_CONFIG_PATH": "Definir a propriedade do Android que especifica o local do arquivo de configuração ProGuard. Deixe em branco para usar o padrão. Essa é uma propriedade de cadeia de caracteres que contém o caminho para o arquivo de configuração ProGuard. Essa propriedade será inicializada pelo valor da variável CMAKE_ANDROID_PROGUARD_CONFIG_PATH se ela estiver definida quando um destino for criado.",
	"assets/variables.json.ANDROID_SECURE_PROPS_PATH": "Definir a propriedade do Android que indica o local do arquivo propriedades seguro. Essa é uma propriedade de cadeia de caracteres que contém o caminho do arquivo. Essa propriedade será inicializada pelo valor da variável CMAKE_ANDROID_SECURE_PROPS_PATH se ela estiver definida quando um destino for criado.",
	"assets/variables.json.ANDROID_SKIP_ANT_STEP": "Definir a propriedade do Android que define se a etapa de build Ant deve ser ignorada ou não. Essa é uma propriedade booliana que será inicializada pelo valor da variável CMAKE_ANDROID_SKIP_ANT_STEP se ela estiver definida quando um destino for criado.",
	"assets/variables.json.ANDROID_STL_TYPE": "No caso de Compilação Cruzada para Android com o NVIDIA Nsight Tegra Visual Studio Edition, essa propriedade especifica o tipo de suporte STL para o projeto. Essa é uma propriedade de cadeia de caracteres que pode ser definida como um dos valores a seguir:",
	"assets/variables.json.ARCHIVE_OUTPUT_DIRECTORY": "Diretório de saída no qual os arquivos de destino XXX serão compilados.",
	"assets/variables.json.ARCHIVE_OUTPUT_DIRECTORY_CONFIG": "Diretório de saída de arquivos de destino de ARQUIVO MORTO, por configuração.",
	"assets/variables.json.ARCHIVE_OUTPUT_NAME": "Nome da saída dos arquivos de destino XXX.",
	"assets/variables.json.ARCHIVE_OUTPUT_NAME_CONFIG": "Nome de saída de arquivos de destino de ARQUIVO MORTO, por configuração.",
	"assets/variables.json.AUTOGEN_BETTER_GRAPH_MULTI_CONFIG": "AUTOGEN_BETTER_GRAPH_MULTI_CONFIG é uma propriedade booliana que pode ser definida em um destino para ter um grafo de dependência melhor para geradores de várias configurações. Quando esta propriedade estiver habilitada, o CMake gerará mais destinos por configuração. Assim, o grafo de dependência será mais preciso para geradores de várias configurações e algumas recompilações serão evitadas.",
	"assets/variables.json.AUTOGEN_BUILD_DIR": "O diretório em que o AUTOMOC, o AUTOUIC e o AUTORCC geram arquivos para o destino.",
	"assets/variables.json.AUTOGEN_COMMAND_LINE_LENGTH_MAX": "Limite de comprimento de linha de comando para destinos autogen, ou seja, moc ou uic, que dispara o uso de arquivos de resposta no Windows em vez de passar todos os argumentos para a linha de comando.",
	"assets/variables.json.AUTOGEN_ORIGIN_DEPENDS": "Alterne para o encaminhamento de dependências de destino de origem para o destino <ORIGIN>_autogen correspondente.",
	"assets/variables.json.AUTOGEN_PARALLEL": "Número de processos moc ou uic paralelos a serem iniciados ao usar AUTOMOC e AUTOUIC.",
	"assets/variables.json.AUTOGEN_TARGET_DEPENDS": "Dependências de destino adicionais do destino <ORIGIN >_autogen correspondente.",
	"assets/variables.json.AUTOGEN_USE_SYSTEM_INCLUDE": "AUTOGEN_USE_SYSTEM_INCLUDE é uma propriedade booleana que pode ser definida em um alvo para indicar se o diretório de inclusão de destino autogerado deve ser adicionado como um diretório de inclusão do sistema ou um diretório de inclusão normal para o destino.",
	"assets/variables.json.AUTOMOC": "Se o destino deve ser processado com auto-moc (para projetos Qt).",
	"assets/variables.json.AUTOMOC_COMPILER_PREDEFINES": "Valor booliano usado pelo AUTOMOC para determinar se o arquivo de predefinições do compilador moc_predefs.h deve ser gerado.",
	"assets/variables.json.AUTOMOC_DEPEND_FILTERS": "Filtre as definições usadas pelo AUTOMOC para extrair os nomes de arquivo de um arquivo de origem que estejam registradas como dependências adicionais para o arquivo moc do arquivo de origem.",
	"assets/variables.json.AUTOMOC_EXECUTABLE": "AUTOMOC_EXECUTABLE é o caminho do arquivo que aponta para o executável do moc a ser usado para os arquivos AUTOMOC habilitados. Definir essa propriedade fará o CMake ignorar a detecção automática do binário do moc, bem como os testes de sanidade são normalmente executados para garantir que o binário esteja disponível e funcionando conforme o esperado.",
	"assets/variables.json.AUTOMOC_MACRO_NAMES": "Uma lista separada por ponto e vírgula de nomes de macro usados pelo AUTOMOC para determinar se um arquivo C++ precisa ser processado pelo moc.",
	"assets/variables.json.AUTOMOC_MOC_OPTIONS": "Opções adicionais para o moc ao usar o AUTOMOC",
	"assets/variables.json.AUTOMOC_PATH_PREFIX": "Quando esta propriedade está ATIVADA, o CMake gerará a opção de prefixo de caminho -p para o MOC em destinos de Qt habilitados para AUTOMOC.",
	"assets/variables.json.AUTORCC": "Se o destino deve ser processado com auto-rcc (para projetos Qt).",
	"assets/variables.json.AUTORCC_EXECUTABLE": "AUTORCC_EXECUTABLE é o caminho do arquivo que aponta para o executável de RCC a ser usado para arquivos habilitados para AUTORCC. Definir essa propriedade fará o CMake ignorar a detecção automática do binário RCC, bem como os testes de sanidade normalmente são executados para garantir que o binário esteja disponível e funcionando conforme o esperado.",
	"assets/variables.json.AUTOUIC": "O destino precisa ser processado com auto-uic (para projetos Qt)?",
	"assets/variables.json.AUTOUIC_EXECUTABLE": "AUTOUIC_EXECUTABLE é o caminho do arquivo que aponta para o executável UIC a ser usado para os arquivos habilitados para AUTOUIC. Definir essa propriedade fará o CMake ignorar a detecção automática do binário UIC, bem como os testes de sanidade normalmente são executados para garantir que o binário esteja disponível e funcionando conforme o esperado.",
	"assets/variables.json.AUTOUIC_SEARCH_PATHS": "Lista de caminhos de pesquisa usada pelo AUTOUIC para localizar os arquivos .ui incluídos.",
	"assets/variables.json.BUILD_RPATH": "Uma lista separada por ponto e vírgula especificando entradas de RPATH (caminho de runtime) a serem adicionadas aos binários vinculados na árvore de build (para plataformas que dão suporte a ele). Por padrão, o CMake define o caminho de runtime de binários na árvore de build para conter caminhos de pesquisa que ele sabe que são necessários para localizar as bibliotecas compartilhadas que vinculam. Os projetos podem definir BUILD_RPATH para especificar caminhos de pesquisa adicionais.",
	"assets/variables.json.BUILD_RPATH_USE_ORIGIN": "Se deseja usar caminhos relativos para o RPATH de build.",
	"assets/variables.json.BUILD_WITH_INSTALL_NAME_DIR": "BUILD_WITH_INSTALL_NAME_DIR é um booliano que especifica se o install_name do macOS de um destino na árvore de build usa o diretório fornecido pelo INSTALL_NAME_DIR. Essa configuração aplica-se somente a destinos no macOS.",
	"assets/variables.json.BUILD_WITH_INSTALL_RPATH": "BUILD_WITH_INSTALL_RPATH é um booliano que especifica se o destino na árvore de build deve ser vinculado a INSTALL_RPATH. Essa opção prevalece sobre a SKIP_BUILD_RPATH e evita a necessidade de vincular novamente antes da instalação.",
	"assets/variables.json.BUNDLE": "Este destino é um CFBundle no macOS.",
	"assets/variables.json.BUNDLE_EXTENSION": "A extensão de arquivo usada para nomear um destino de BUNDLE, de FRAMEWORK ou de MACOSX_BUNDLE no macOS e no iOS.",
	"assets/variables.json.COMMON_LANGUAGE_RUNTIME": "Com a definição dessa propriedade de destino, o destino será configurado para compilar com o suporte de C++/CLI.",
	"assets/variables.json.COMPATIBLE_INTERFACE_BOOL": "Propriedades que precisam ser compatíveis com suas interfaces de link",
	"assets/variables.json.COMPATIBLE_INTERFACE_NUMBER_MAX": "Propriedades cujo valor máximo da interface de link será usado.",
	"assets/variables.json.COMPATIBLE_INTERFACE_NUMBER_MIN": "Propriedades cujo valor mínimo da interface de vínculo será usado.",
	"assets/variables.json.COMPATIBLE_INTERFACE_STRING": "Propriedades que precisam ser compatíveis com suas interfaces de link em relação às cadeias de caracteres",
	"assets/variables.json.COMPILE_FEATURES": "Recursos do compilador habilitados para este destino.",
	"assets/variables.json.COMPILE_PDB_NAME": "Nome de saída do arquivo .pdb de símbolo de depuração da MS gerado pelo compilador durante a compilação de arquivos de origem.",
	"assets/variables.json.COMPILE_PDB_NAME_CONFIG": "Nome de saída do arquivo .pdb de símbolo de depuração da MS gerado pelo compilador durante a compilação de arquivos de origem, por configuração.",
	"assets/variables.json.COMPILE_PDB_OUTPUT_DIRECTORY": "Diretório de saída do arquivo .pdb de símbolo de depuração da MS gerado pelo compilador durante a compilação de arquivos de origem.",
	"assets/variables.json.COMPILE_PDB_OUTPUT_DIRECTORY_CONFIG": "Diretório de saída do arquivo .pdb de símbolo de depuração da MS gerado pelo compilador durante a compilação de arquivos de origem, por configuração.",
	"assets/variables.json.COMPILE_WARNING_AS_ERROR": "Especifique se os avisos devem ser tratados na compilação como erros. Se habilitado, adiciona um sinalizador para tratar avisos na compilação como erros. Se a opção cmake --compile-no-warning-as-error for fornecida na linha de comando do cmake, essa propriedade será ignorada.",
	"assets/variables.json.CONFIG_OUTPUT_NAME": "Nome base antigo do arquivo de destino por configuração. Use OUTPUT_NAME_.",
	"assets/variables.json.CONFIG_POSTFIX": "Sufixo a ser acrescentado ao nome do arquivo de destino da configuração <CONFIG>.",
	"assets/variables.json.CROSSCOMPILING_EMULATOR": "Usar o emulador fornecido para executar os executáveis criados durante a compilação cruzada. Esse comando será adicionado como um prefixo aos comandos add_test, add_custom_command e add_custom_target para executáveis do sistema de destino compilados.",
	"assets/variables.json.CUDA_ARCHITECTURES": "Lista de arquiteturas para as quais gerar código de dispositivo.",
	"assets/variables.json.CUDA_CUBIN_COMPILATION": "Compilar fontes CUDA para arquivos .cubin em vez de arquivos .obj dentro de Bibliotecas de Objetos.",
	"assets/variables.json.CUDA_EXTENSIONS": "Booliano especificando se são solicitadas extensões específicas do compilador.",
	"assets/variables.json.CUDA_FATBIN_COMPILATION": "Compilar fontes CUDA para arquivos .fatbin em vez de arquivos .obj dentro de Bibliotecas de Objetos.",
	"assets/variables.json.CUDA_OPTIX_COMPILATION": "Compilar fontes CUDA para arquivos .optixir em vez de arquivos .obj dentro de Bibliotecas de Objetos.",
	"assets/variables.json.CUDA_PTX_COMPILATION": "Compilar as origens do CUDA para arquivos .ptx em vez de arquivos .obj nas Bibliotecas de Objetos.",
	"assets/variables.json.CUDA_RESOLVE_DEVICE_SYMBOLS": "Somente CUDA: habilita a vinculação de dispositivo para o destino da biblioteca específico onde necessário.",
	"assets/variables.json.CUDA_RUNTIME_LIBRARY": "Selecione a biblioteca de runtime CUDA a ser usada pelos compiladores cujo destino é a linguagem CUDA.",
	"assets/variables.json.CUDA_SEPARABLE_COMPILATION": "Somente CUDA: habilita a compilação separada de código do dispositivo",
	"assets/variables.json.CUDA_STANDARD": "O padrão CUDA/C++ cujos recursos são solicitados para compilar esse destino.",
	"assets/variables.json.CUDA_STANDARD_REQUIRED": "Booliano que descreve se o valor de CUDA_STANDARD é um requisito.",
	"assets/variables.json.CXX_EXTENSIONS": "Booliano especificando se são solicitadas extensões específicas do compilador.",
	"assets/variables.json.CXX_MODULE_DIRS": "Lista separada por ponto e vírgula de diretórios base do conjunto de módulos C++ padrão do destino (ou seja, o conjunto de arquivos com nome e tipo CXX_MODULES). A propriedade dá suporte a expressões de gerador <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_DIRS_NAME": "Lista separada por ponto e vírgula dos diretórios base do conjunto de módulos <NAME> C++ do destino, que tem o tipo definido CXX_MODULES. A propriedade dá suporte a expressões de gerador <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_SET": "Lista de arquivos separados por ponto e vírgula no conjunto de módulos C++ padrão do destino (ou seja, o conjunto de arquivos com nome e tipo CXX_MODULES). Se qualquer um dos caminhos for relativo, eles serão computados em relação ao diretório de origem do destino. A propriedade dá suporte a expressões de gerador <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_SETS": "Lista somente leitura dos conjuntos de módulos PRIVATE e PUBLIC C++ do destino (ou seja, todos os conjuntos de arquivos com o tipo CXX_MODULES). Os arquivos listados nesses conjuntos de arquivos são tratados como arquivos de origem para fins de integração do IDE.",
	"assets/variables.json.CXX_MODULE_SET_NAME": "Lista de arquivos separados por ponto e vírgula no conjunto de módulos <NAME> C++ do destino, que tem o tipo definido CXX_MODULES. Se qualquer um dos caminhos for relativo, eles serão computados em relação ao diretório de origem do destino. A propriedade dá suporte a expressões de gerador <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_STD": "CXX_MODULE_STD é um booliano que especifica se o destino pode usar import std; suas fontes C++ ou não.",
	"assets/variables.json.CXX_STANDARD": "O padrão C++ cujos recursos são solicitados para compilar esse destino.",
	"assets/variables.json.CXX_STANDARD_REQUIRED": "Booliano que descreve se o valor de CXX_STANDARD é um requisito.",
	"assets/variables.json.C_EXTENSIONS": "Booliano especificando se são solicitadas extensões específicas do compilador.",
	"assets/variables.json.C_STANDARD": "O padrão C cujos recursos são solicitados para compilar este destino.",
	"assets/variables.json.C_STANDARD_REQUIRED": "Booliano que descreve se o valor de C_STANDARD é um requisito.",
	"assets/variables.json.DEBUG_POSTFIX": "Consulte a propriedade de destino <CONFIG>_POSTFIX.",
	"assets/variables.json.DEFINE_SYMBOL": "Definir um símbolo ao compilar as origens deste destino.",
	"assets/variables.json.DEPLOYMENT_ADDITIONAL_FILES": "Defina o projeto WinCE AdditionalFiles na DeploymentTool nos arquivos .vcproj gerados pelos Geradores do Visual Studio. Isso é útil quando você deseja depurar no dispositivo WinCE remoto. Especifique os arquivos adicionais que serão copiados para o dispositivo. Por exemplo:",
	"assets/variables.json.DEPLOYMENT_REMOTE_DIRECTORY": "Defina o RemoteDirectory do projeto WinCE na DeploymentTool e o RemoteExecutable na DebuggerTool nos arquivos .vcproj gerados pelos Geradores do Visual Studio . Isso é útil quando você deseja depurar no dispositivo WinCE remoto. Por exemplo:",
	"assets/variables.json.DEPRECATION": "Mensagem de substituição do desenvolvedor de destino importado.",
	"assets/variables.json.DISABLE_PRECOMPILE_HEADERS": "Desabilita a pré-compilação de arquivos de cabeçalho especificados pela propriedade PRECOMPILE_HEADERS.",
	"assets/variables.json.DLL_NAME_WITH_SOVERSION": "Essa propriedade controla se a propriedade de destino SOVERSION é adicionada ao nome de arquivo dos nomes de arquivo DLL gerados para a plataforma Windows, que é selecionada quando a variável WIN32 é definida.",
	"assets/variables.json.DOTNET_SDK": "Especifique o SDK .NET para projetos C#. Por exemplo: Microsoft.NET.Sdk.",
	"assets/variables.json.DOTNET_TARGET_FRAMEWORK": "Especificar a estrutura de destino do .NET.",
	"assets/variables.json.DOTNET_TARGET_FRAMEWORK_VERSION": "Especificar a versão da estrutura de destino do .NET.",
	"assets/variables.json.EchoString": "Uma mensagem a ser exibida quando o destino for criado.",
	"assets/variables.json.ENABLE_EXPORTS": "Especifique se um executável ou uma biblioteca compartilhada exporta símbolos.",
	"assets/variables.json.EXCLUDE_FROM_DEFAULT_BUILD": "Exclua o destino da Solução de Build.",
	"assets/variables.json.EXCLUDE_FROM_DEFAULT_BUILD_CONFIG": "Versão da exclusão de destino da Solução de Build, por configuração.",
	"assets/variables.json.EXPORT_COMPILE_COMMANDS": "Habilitar/Desabilitar a saída de comandos de compilação durante a geração para um destino.",
	"assets/variables.json.EXPORT_FIND_PACKAGE_NAME": "Controle o nome do pacote associado a um destino de dependência ao exportar uma chamada find_dependency na instalação ou exportação. Isto pode ser usado para atribuir um nome de pacote a um pacote criado pelo CMake e exportado ou para substituir o pacote na chamada find_package que criou o destino.",
	"assets/variables.json.EXPORT_NAME": "Nome exportado dos arquivos de destino.",
	"assets/variables.json.EXPORT_NO_SYSTEM": "Essa propriedade afeta o comportamento dos comandos de instalação e exportação quando eles instalam ou exportam o destino, respectivamente. Quando EXPORT_NO_SYSTEM é definido como verdadeiro, esses comandos geram um destino importado com a propriedade SYSTEM definida como falso.",
	"assets/variables.json.EXPORT_PROPERTIES": "Listar as propriedades adicionais a serem exportadas para um destino.",
	"assets/variables.json.FOLDER": "Para IDEs que apresentam destinos usando uma hierarquia de pastas, essa propriedade especifica o nome da pasta na qual se coloca o destino. Para aninhar pastas, use valores FOLDER, como GUI/Dialogs com caracteres / separando os níveis de pasta. Destinos sem nenhuma propriedade FOLDER aparecerão como entidades de nível superior. Destinos com o mesmo valor da propriedade FOLDER aparecerão na mesma pasta que irmãos.",
	"assets/variables.json.Fortran_BUILDING_INSTRINSIC_MODULES": "Instrui o pré-processador CMake Fortran que o destino está criando intrínsecos Fortran para construir um compilador Fortran.",
	"assets/variables.json.Fortran_MODULE_DIRECTORY": "Especificar o diretório de saída dos módulos do Fortran fornecidos pelo destino.",
	"assets/variables.json.FRAMEWORK": "Compilar a biblioteca COMPARTILHADA ou ESTÁTICA como um Pacote de Estrutura no macOS e no iOS.",
	"assets/variables.json.FRAMEWORK_MULTI_CONFIG_POSTFIX_CONFIG": "Sufixo a ser acrescentado ao nome do arquivo de estrutura para a configuração <CONFIG> ao usar um gerador de várias configurações (como Xcode e Ninja Multi-Config).",
	"assets/variables.json.FRAMEWORK_VERSION": "A versão de uma estrutura criada usando a propriedade de destino de ESTRUTURA (por exemplo, A).",
	"assets/variables.json.GENERATOR_FILE_NAME": "Arquivo do gerador para este destino.",
	"assets/variables.json.GHS_INTEGRITY_APP": "Booliano ATIVADO/DESATIVADO para determinar se um destino executável deve ser tratado como um Aplicativo de Integridade.",
	"assets/variables.json.GHS_NO_SOURCE_GROUP_FILE": "Booliano ATIVADO/DESATIVADO para controlar se o arquivo de projeto de um destino deve ser um único arquivo ou vários arquivos.",
	"assets/variables.json.GNUtoMS": "Converter a biblioteca de importação GNU (.dll.a) para o formato MS (.lib).",
	"assets/variables.json.HAS_CXX": "Vincular o destino usando a ferramenta de vinculador C++ (obsoleta).",
	"assets/variables.json.HEADER_DIRS": "Lista separada por ponto e vírgula de diretórios base do conjunto de cabeçalhos padrão do destino (ou seja, o conjunto de arquivos com nome e tipo HEADERS). A propriedade suporta expressões do gerador<cmake-generator-expressions(7)>.",
	"assets/variables.json.HEADER_DIRS_NAME": "Lista separada por ponto e vírgula de diretórios base do conjunto de cabeçalhos <NAME> de destino, que tem o tipo definido HEADERS. A propriedade suporta expressões do gerador<cmake-generator-expressions(7)>.",
	"assets/variables.json.HEADER_SET": "Lista de arquivos separados por ponto e vírgula no conjunto de cabeçalhos padrão do destino (ou seja, o conjunto de arquivos com nome e tipo HEADERS). Se algum dos caminhos for relativo, eles serão computados em relação ao diretório de origem do destino. A propriedade suporta expressões do gerador<cmake-generator-expressions(7)>.",
	"assets/variables.json.HEADER_SETS": "Lista somente leitura dos conjuntos de cabeçalhos PRIVADOS e PÚBLICOS de destino (ou seja, todos os conjuntos de arquivos com o tipo HEADERS). Os arquivos listados nesses conjuntos de arquivos são tratados como arquivos de origem para fins de integração com o IDE. Os arquivos também têm sua propriedade HEADER_FILE_ONLY definida como TRUE.",
	"assets/variables.json.HEADER_SET_NAME": "Lista separada por ponto e vírgula de arquivos no conjunto de cabeçalhos <NAME> de destino, que tem o tipo definido HEADERS. Se algum dos caminhos for relativo, eles serão computados em relação ao diretório de origem do destino. A propriedade suporta expressões de gerador<cmake-generator-expressions(7)>.",
	"assets/variables.json.HIP_ARCHITECTURES": "Lista de arquiteturas de GPU para as quais gerar o código da dispositivo. Os nomes de arquitetura são interpretados com base em CMAKE_HIP_PLATFORM.",
	"assets/variables.json.HIP_EXTENSIONS": "Booliano especificando se são solicitadas extensões específicas do compilador.",
	"assets/variables.json.HIP_STANDARD": "O padrão HIP/C++ solicitado para compilar esse destino.",
	"assets/variables.json.HIP_STANDARD_REQUIRED": "Booleano que descreve se o valor de HIP_STANDARD é um requisito.",
	"assets/variables.json.IMPORTED": "Indicação somente leitura que mostra se um destino é IMPORTED.",
	"assets/variables.json.IMPORTED_COMMON_LANGUAGE_RUNTIME": "Propriedade a serem definidas quando o destino usa C++/CLI.",
	"assets/variables.json.IMPORTED_CONFIGURATIONS": "Configurações fornecidas para um destino importado.",
	"assets/variables.json.IMPORTED_CXX_MODULES_COMPILE_DEFINITIONS": "Definições do pré-processador para compilar os códigos-fonte do módulo C++ de um destino IMPORTADO.",
	"assets/variables.json.IMPORTED_CXX_MODULES_COMPILE_FEATURES": "Recursos do compilador habilitados para os módulos C++ desse destino IMPORTADO.",
	"assets/variables.json.IMPORTED_CXX_MODULES_COMPILE_OPTIONS": "Lista de opções a serem passadas para o compilador para os módulos C++ desse destino IMPORTADO.",
	"assets/variables.json.IMPORTED_CXX_MODULES_INCLUDE_DIRECTORIES": "Lista de diretórios de pesquisa de arquivos de inclusão de pré-processador ao compilar módulos C++ para destinos IMPORTADOS.",
	"assets/variables.json.IMPORTED_CXX_MODULES_LINK_LIBRARIES": "Lista de dependências diretas a serem usadas para requisitos de uso de módulos C++ nos módulos C++ do destino.",
	"assets/variables.json.IMPORTED_GLOBAL": "Indicação se um destino IMPORTED é visível globalmente.",
	"assets/variables.json.IMPORTED_IMPLIB": "Caminho completo para a biblioteca de importação de um destino IMPORTED.",
	"assets/variables.json.IMPORTED_IMPLIB_CONFIG": "Versão específica da <CONFIG> da propriedade IMPORTED_IMPLIB.",
	"assets/variables.json.IMPORTED_LIBNAME": "Especificar o nome da biblioteca de link para uma Biblioteca de Interface importada.",
	"assets/variables.json.IMPORTED_LIBNAME_CONFIG": "Versão específica da <CONFIG> da propriedade IMPORTED_LIBNAME.",
	"assets/variables.json.IMPORTED_LINK_DEPENDENT_LIBRARIES": "As bibliotecas compartilhadas dependentes de uma biblioteca compartilhada importada.",
	"assets/variables.json.IMPORTED_LINK_DEPENDENT_LIBRARIES_CONFIG": "Versão específica da <CONFIG> de IMPORTED_LINK_DEPENDENT_LIBRARIES.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LANGUAGES": "As linguagens compiladas em uma biblioteca estática IMPORTED.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LANGUAGES_CONFIG": "Versão específica da <CONFIG> de IMPORTED_LINK_INTERFACE_LANGUAGES.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LIBRARIES": "Interface de link transitiva de um destino IMPORTED.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LIBRARIES_CONFIG": "Versão específica da <CONFIG> de IMPORTED_LINK_INTERFACE_LIBRARIES.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_MULTIPLICITY": "Contagem de repetição de ciclos de bibliotecas estáticas IMPORTED.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_MULTIPLICITY_CONFIG": "Versão específica da <CONFIG> de IMPORTED_LINK_INTERFACE_MULTIPLICITY.",
	"assets/variables.json.IMPORTED_LOCATION": "Caminho completo para o arquivo principal no disco de um destino IMPORTED.",
	"assets/variables.json.IMPORTED_LOCATION_CONFIG": "Versão específica da <CONFIG> da propriedade IMPORTED_LOCATION.",
	"assets/variables.json.IMPORTED_NO_SONAME": "Especifica que um destino de biblioteca compartilhada IMPORTED não tem nenhum soname.",
	"assets/variables.json.IMPORTED_NO_SONAME_CONFIG": "Versão específica da <CONFIG> da propriedade IMPORTED_NO_SONAME.",
	"assets/variables.json.IMPORTED_NO_SYSTEM": "Definir IMPORTED_NO_SYSTEM como verdadeiro em um destino importado especifica que ele não é um destino do sistema. Isso tem os seguintes efeitos:",
	"assets/variables.json.IMPORTED_OBJECTS": "Lista separada por ponto e vírgula de caminhos absolutos para os arquivos de objeto no disco para uma biblioteca de objetos importados.",
	"assets/variables.json.IMPORTED_OBJECTS_CONFIG": "Versão específica da <CONFIG> da propriedade IMPORTED_OBJECTS.",
	"assets/variables.json.IMPORTED_SONAME": "O soname de um destino IMPORTED do tipo de biblioteca compartilhada.",
	"assets/variables.json.IMPORTED_SONAME_CONFIG": "Versão específica da <CONFIG> da propriedade IMPORTED_SONAME.",
	"assets/variables.json.IMPORT_PREFIX": "O que vem antes do nome da biblioteca de importação.",
	"assets/variables.json.IMPORT_SUFFIX": "O que vem depois do nome da biblioteca de importação.",
	"assets/variables.json.INSTALL_NAME_DIR": "Nome do diretório para destinos instalados em plataformas da Apple.",
	"assets/variables.json.INSTALL_REMOVE_ENVIRONMENT_RPATH": "Controla se os rpaths definidos pela cadeia ferramentas devem ser removidos durante a instalação.",
	"assets/variables.json.INSTALL_RPATH": "O rpath a ser usado para os destinos instalados.",
	"assets/variables.json.INSTALL_RPATH_USE_LINK_PATH": "Adicionar caminhos para a pesquisa de vinculador e o rpath instalado.",
	"assets/variables.json.INTERFACE_AUTOMOC_MACRO_NAMES": "Uma lista separada por ponto e vírgula de nomes de macro para AUTOMOC a ser propagada para os consumidores.",
	"assets/variables.json.INTERFACE_AUTOUIC_OPTIONS": "Lista de opções de interface a serem passadas para o uic.",
	"assets/variables.json.INTERFACE_COMPILE_DEFINITIONS": "Lista de requisitos de property_name público para uma biblioteca.",
	"assets/variables.json.INTERFACE_COMPILE_FEATURES": "Lista de requisitos de property_name público para uma biblioteca.",
	"assets/variables.json.INTERFACE_COMPILE_OPTIONS": "Lista de requisitos de property_name público para uma biblioteca.",
	"assets/variables.json.INTERFACE_CXX_MODULE_SETS": "Lista somente leitura dos conjuntos de módulos PUBLIC C++ do destino (ou seja, todos os conjuntos de arquivos com o tipo CXX_MODULES). Os arquivos listados nesses conjuntos de módulos do C++ poderão ser instalados com instalação e exportados com instalação e exportação.",
	"assets/variables.json.INTERFACE_HEADER_SETS": "Lista somente leitura dos conjuntos de cabeçalho INTERFACE e PUBLIC de destino (ou seja, todos os conjuntos de arquivos com o tipo CABEÇALHOS). Os arquivos listados nesses conjuntos de cabeçalhos podem ser instalados com install e exportados com install e export.",
	"assets/variables.json.INTERFACE_HEADER_SETS_TO_VERIFY": "Usado para especificar quais conjuntos de cabeçalhos PUBLIC e INTERFACE de um destino devem ser verificados.",
	"assets/variables.json.INTERFACE_INCLUDE_DIRECTORIES": "Lista de requisitos de property_name público para uma biblioteca.",
	"assets/variables.json.INTERFACE_LINK_DEPENDS": "Arquivos adicionais da interface pública dos quais um binário de destino depende para a vinculação.",
	"assets/variables.json.INTERFACE_LINK_DIRECTORIES": "Lista de requisitos de property_name público para uma biblioteca.",
	"assets/variables.json.INTERFACE_LINK_LIBRARIES": "Lista de bibliotecas de interface pública de uma biblioteca.",
	"assets/variables.json.INTERFACE_LINK_LIBRARIES_DIRECT": "Lista de bibliotecas que os consumidores dessa biblioteca devem tratar como dependências de link direto.",
	"assets/variables.json.INTERFACE_LINK_LIBRARIES_DIRECT_EXCLUDE": "Lista de bibliotecas que os consumidores dessa biblioteca não devem tratar como dependências de link direto.",
	"assets/variables.json.INTERFACE_LINK_OPTIONS": "Lista de requisitos de property_name público para uma biblioteca.",
	"assets/variables.json.INTERFACE_POSITION_INDEPENDENT_CODE": "Se o consumidor precisa criar um destino independente da posição",
	"assets/variables.json.INTERFACE_PRECOMPILE_HEADERS": "Lista de arquivos de cabeçalho de interface para pré-compilar em destinos de consumo.",
	"assets/variables.json.INTERFACE_SOURCES": "Lista de origens de interface a serem compiladas em destinos de consumo.",
	"assets/variables.json.INTERFACE_SYSTEM_INCLUDE_DIRECTORIES": "Lista de diretórios de inclusão do sistema público de uma biblioteca.",
	"assets/variables.json.IOS_INSTALL_COMBINED": "Criar um destino combinado (dispositivo e simulador) durante a instalação.",
	"assets/variables.json.ISPC_HEADER_DIRECTORY": "Especifique o diretório de saída relativo para cabeçalhos do ISPC fornecidos pelo destino.",
	"assets/variables.json.ISPC_HEADER_SUFFIX": "Especifique o sufixo de saída a ser usado para os cabeçalhos gerados pelo ISPC fornecidos pelo destino.",
	"assets/variables.json.ISPC_INSTRUCTION_SETS": "Lista de arquiteturas do conjunto de instruções para as quais gerar o código de dispositivo.",
	"assets/variables.json.JOB_POOL_COMPILE": "Somente Ninja: o pool usado para compilar.",
	"assets/variables.json.JOB_POOL_LINK": "Somente Ninja: o pool usado para vinculação.",
	"assets/variables.json.JOB_POOL_PRECOMPILE_HEADER": "Somente Ninja: pool usado para gerar cabeçalhos pré-compilados.",
	"assets/variables.json.LANG_CLANG_TIDY": "Esta propriedade é implementada somente quando <LANG> é C, CXX, OBJC ou OBJCXX.",
	"assets/variables.json.LANG_CLANG_TIDY_EXPORT_FIXES_DIR": "Essa propriedade é implementada somente quando <LANG> é C, CXX, OBJC ou OBJCXX e só tem um efeito quando <LANG>_CLANG_TIDY está definido.",
	"assets/variables.json.LANG_COMPILER_LAUNCHER": "Esta propriedade é implementada somente quando <LANG> é C, CXX, Fortran, ISPC, OBJC, OBJCXX ou CUDA.",
	"assets/variables.json.LANG_CPPCHECK": "Há suporte para esta propriedade somente quando <LANG> é C ou CXX.",
	"assets/variables.json.LANG_CPPLINT": "Há suporte para esta propriedade somente quando <LANG> é C ou CXX.",
	"assets/variables.json.LANG_EXTENSIONS": "As variações são:",
	"assets/variables.json.LANG_INCLUDE_WHAT_YOU_USE": "Esta propriedade é implementada somente quando <LANG> é C ou CXX.",
	"assets/variables.json.LANG_LINKER_LAUNCHER": "Esta propriedade é implementada somente quando <LANG> é C, CXX, OBJC ou OBJCXX.",
	"assets/variables.json.LANG_STANDARD": "As variações são:",
	"assets/variables.json.LANG_STANDARD_REQUIRED": "As variações são:",
	"assets/variables.json.LANG_VISIBILITY_PRESET": "Valor dos sinalizadores de compilação de visibilidade de símbolo",
	"assets/variables.json.LIBRARY_OUTPUT_DIRECTORY": "Diretório de saída no qual os arquivos de destino XXX serão compilados.",
	"assets/variables.json.LIBRARY_OUTPUT_DIRECTORY_CONFIG": "Diretório de saída de arquivos de destino de BIBLIOTECA, por configuração.",
	"assets/variables.json.LIBRARY_OUTPUT_NAME": "Nome da saída dos arquivos de destino XXX.",
	"assets/variables.json.LIBRARY_OUTPUT_NAME_CONFIG": "Nome de saída de arquivos de destino de BIBLIOTECA, por configuração.",
	"assets/variables.json.LINKER_LANGUAGE": "Especifica a linguagem cujo compilador invocará o vinculador.",
	"assets/variables.json.LINKER_TYPE": "Especifique qual vinculador será usado para a etapa de vínculo. O valor da propriedade pode usar expressões de gerador <cmake-generator-expressions(7)>.",
	"assets/variables.json.LINK_DEPENDS": "Arquivos adicionais dos quais um binário de destino depende para a vinculação.",
	"assets/variables.json.LINK_DEPENDS_NO_SHARED": "Não depender de arquivos vinculados de biblioteca compartilhada.",
	"assets/variables.json.LINK_FLAGS": "Sinalizadores adicionais a serem usados ao vincular este destino se ele for uma biblioteca compartilhada, uma biblioteca de módulo ou um executável. As bibliotecas estáticas precisam usar as propriedades STATIC_LIBRARY_OPTIONS ou STATIC_LIBRARY_FLAGS.",
	"assets/variables.json.LINK_FLAGS_CONFIG": "Os sinalizadores de vinculador de um destino de biblioteca SHARED, MODULE ou EXECUTABLE, por configuração.",
	"assets/variables.json.LINK_INTERFACE_LIBRARIES": "Lista de bibliotecas de interface pública de uma biblioteca compartilhada ou de um executável.",
	"assets/variables.json.LINK_INTERFACE_LIBRARIES_CONFIG": "Lista de bibliotecas de interface pública de um destino, por configuração.",
	"assets/variables.json.LINK_INTERFACE_MULTIPLICITY": "Contagem de repetição de bibliotecas ESTÁTICAS com dependências cíclicas.",
	"assets/variables.json.LINK_INTERFACE_MULTIPLICITY_CONFIG": "Contagem de repetição de ciclos de bibliotecas ESTÁTICAS, por configuração.",
	"assets/variables.json.LINK_LIBRARIES": "Lista de dependências de link direto.",
	"assets/variables.json.LINK_LIBRARIES_ONLY_TARGETS": "Imponha que os itens de link que podem ser nomes de destino sejam, na verdade, alvos existentes.",
	"assets/variables.json.LINK_LIBRARY_OVERRIDE": "Substitua os recursos de biblioteca associados a bibliotecas de expressões de gerador LINK_LIBRARY. Isso pode ser usado para resolver recursos de biblioteca incompatíveis resultantes da especificação de diferentes recursos para a mesma biblioteca em diferentes expressões de gerador LINK_LIBRARY.",
	"assets/variables.json.LINK_LIBRARY_OVERRIDE_LIBRARY": "Substitua os recursos de biblioteca associados a <LIBRARY> de expressões de gerador LINK_LIBRARY. Isso pode ser usado para resolver recursos de biblioteca incompatíveis resultantes da especificação de diferentes recursos para a mesma <LIBRARY> em diferentes expressões de gerador LINK_LIBRARY.",
	"assets/variables.json.LINK_SEARCH_END_STATIC": "Terminar uma linha de link de modo que as bibliotecas estáticas do sistema sejam usadas.",
	"assets/variables.json.LINK_SEARCH_START_STATIC": "Considerar que o vinculador procura bibliotecas estáticas por padrão.",
	"assets/variables.json.LINK_WHAT_YOU_USE": "Esta é uma opção booleana que, quando definida como TRUE, executará automaticamente o conteúdo da variável CMAKE_LINK_WHAT_YOU_USE_CHECK no destino após ser vinculada. Além disso, o sinalizador do vinculador especificado pela variável CMAKE_<LANG>_LINK_WHAT_YOU_USE_FLAG será passado para o destino com o comando do link para que todas as bibliotecas especificadas na linha de comando sejam vinculadas ao destino. Isso fará com que o link produza uma lista de bibliotecas que não fornecem símbolos usados por esse destino, mas estão sendo vinculadas a ele.",
	"assets/variables.json.LOCATION_CONFIG": "Propriedade somente leitura que fornece o local de um destino no disco.",
	"assets/variables.json.MACHO_COMPATIBILITY_VERSION": "Qual número de versão de compatibilidade é este destino para os binários Mach-O.",
	"assets/variables.json.MACHO_CURRENT_VERSION": "Qual é o número de versão atual deste destino para os binários Mach-O.",
	"assets/variables.json.MACOSX_BUNDLE": "Criar um executável como um Lote de Aplicativo no macOS ou no iOS.",
	"assets/variables.json.MACOSX_BUNDLE_INFO_PLIST": "Especificar um modelo de Info.plist personalizado para um Lote de Aplicativo do macOS e do iOS.",
	"assets/variables.json.MACOSX_FRAMEWORK_INFO_PLIST": "Especificar um modelo de Info.plist personalizado para uma Estrutura do macOS e do iOS.",
	"assets/variables.json.MACOSX_RPATH": "Se este destino no macOS ou no iOS está localizado no tempo de execução usando rpaths.",
	"assets/variables.json.MANUALLY_ADDED_DEPENDENCIES": "Obter as dependências adicionadas manualmente em outros destinos de nível superior.",
	"assets/variables.json.MAP_IMPORTED_CONFIG_CONFIG": "Mapear da configuração do projeto para a configuração do destino importado.",
	"assets/variables.json.MSVC_DEBUG_INFORMATION_FORMAT": "Selecione o formato das informações de depuração ao ter como alvo a ABI do MSVC.",
	"assets/variables.json.MSVC_RUNTIME_LIBRARY": "Selecione a biblioteca de runtime MSVC a ser usada pelos compiladores cujo destino é o ABI do MSVC.",
	"assets/variables.json.NAME": "Nome lógico do destino.",
	"assets/variables.json.NO_SONAME": "Se deseja definir o soname ao vincular uma biblioteca compartilhada.",
	"assets/variables.json.NO_SYSTEM_FROM_IMPORTED": "Não tratar os diretórios de inclusão das interfaces de destinos importados consumidos como diretórios do sistema.",
	"assets/variables.json.OBJCXX_EXTENSIONS": "Booliano especificando se são solicitadas extensões específicas do compilador.",
	"assets/variables.json.OBJCXX_STANDARD": "O padrão ObjC++ cujos recursos são solicitados a compilar este destino.",
	"assets/variables.json.OBJCXX_STANDARD_REQUIRED": "Booliano que descreve se o valor de OBJCXX_STANDARD é um requisito.",
	"assets/variables.json.OBJC_EXTENSIONS": "Booliano especificando se são solicitadas extensões específicas do compilador.",
	"assets/variables.json.OBJC_STANDARD": "O padrão OBJC cujos recursos são solicitados a compilar este destino.",
	"assets/variables.json.OBJC_STANDARD_REQUIRED": "Booliano que descreve se o valor de OBJC_STANDARD é um requisito.",
	"assets/variables.json.OPTIMIZE_DEPENDENCIES": "Ativa a otimização de dependência de bibliotecas de objetos e estáticas.",
	"assets/variables.json.OSX_ARCHITECTURES": "Direcionar a arquiteturas específicas para o macOS.",
	"assets/variables.json.OSX_ARCHITECTURES_CONFIG": "Arquiteturas binárias do macOS e do iOS de um destino, por configuração.",
	"assets/variables.json.OUTPUT_NAME": "Nome de saída dos arquivos de destino.",
	"assets/variables.json.OUTPUT_NAME_CONFIG": "Nome base do arquivo de destino, por configuração.",
	"assets/variables.json.PCH_INSTANTIATE_TEMPLATES": "Quando essa propriedade for definida como true, as opções do compilador de cabeçalho pré-compilado conterá um sinalizador para criar uma instância de modelos durante a geração de PCH, se houver suporte. Isso pode aprimorar significativamente o tempo de compilação. Com suporte no Clang desde a versão 11.",
	"assets/variables.json.PCH_WARN_INVALID": "Quando essa propriedade é definida como true, as opções do compilador de cabeçalho de pré-compilação conterão um sinalizador de compilador que deve avisar sobre cabeçalhos pré-compilados inválidos, por exemplo Winvalid-pch para o compilador GNU.",
	"assets/variables.json.PDB_NAME": "Nome de saída para arquivo .pdb de símbolo de depuração da MS gerado pelo vinculador para destinos de biblioteca compartilhada e de executável.",
	"assets/variables.json.PDB_NAME_CONFIG": "Nome de saída do arquivo .pdb de símbolo de depuração da MS gerado pelo vinculador para destinos de biblioteca compartilhada e de executável, por configuração.",
	"assets/variables.json.PDB_OUTPUT_DIRECTORY": "Diretório de saída do arquivo .pdb de símbolos de depuração da MS gerado pelo vinculador para destinos de biblioteca compartilhada e de executável.",
	"assets/variables.json.PDB_OUTPUT_DIRECTORY_CONFIG": "Diretório de saída do arquivo .pdb de símbolo de depuração da MS gerado pelo vinculador para destinos de biblioteca compartilhada e de executável, por configuração.",
	"assets/variables.json.POSITION_INDEPENDENT_CODE": "Se deseja criar um destino independente da posição",
	"assets/variables.json.POST_INSTALL_SCRIPT": "Suporte de instalação preterido.",
	"assets/variables.json.PRECOMPILE_HEADERS": "Lista de arquivos de cabeçalho para pré-compilar.",
	"assets/variables.json.PRECOMPILE_HEADERS_REUSE_FROM": "Destino do qual reutilizar o artefato de compilação dos cabeçalhos pré-compilados.",
	"assets/variables.json.PREFIX": "O que vem antes do nome da biblioteca.",
	"assets/variables.json.PRE_INSTALL_SCRIPT": "Suporte de instalação preterido.",
	"assets/variables.json.PRIVATE_HEADER": "Especificar os arquivos de cabeçalho privado em um destino de biblioteca compartilhada da ESTRUTURA.",
	"assets/variables.json.PROJECT_LABEL": "Alterar o nome de um destino em um IDE.",
	"assets/variables.json.PUBLIC_HEADER": "Especificar os arquivos de cabeçalho público em um destino de biblioteca compartilhada da ESTRUTURA.",
	"assets/variables.json.RESOURCE": "Especificar os arquivos de recurso em uma ESTRUTURA ou em um PACOTE.",
	"assets/variables.json.RUNTIME_OUTPUT_DIRECTORY": "Diretório de saída no qual os arquivos de destino XXX serão compilados.",
	"assets/variables.json.RUNTIME_OUTPUT_DIRECTORY_CONFIG": "Diretório de saída de arquivos de destino de TEMPO DE EXECUÇÃO, por configuração.",
	"assets/variables.json.RUNTIME_OUTPUT_NAME": "Nome da saída dos arquivos de destino XXX.",
	"assets/variables.json.RUNTIME_OUTPUT_NAME_CONFIG": "Nome de saída de arquivos de destino de TEMPO DE EXECUÇÃO, por configuração.",
	"assets/variables.json.SKIP_BUILD_RPATH": "Se os rpaths devem ser usados para a árvore de build.",
	"assets/variables.json.SOURCES": "Isso especifica a lista de caminhos para arquivos de origem para o destino. Todos os seguintes comandos definem ou adicionam à propriedade de destino SOURCES e são a maneira usual de manipulá-la:",
	"assets/variables.json.SOVERSION": "Número de versão da ABI de um destino de biblioteca compartilhada.",
	"assets/variables.json.STATIC_LIBRARY_FLAGS": "Sinalizadores de arquivador (ou bibliotecário do MSVC) para um destino de biblioteca estática. Os destinos que são bibliotecas compartilhadas, módulos ou executáveis precisam usar as propriedades de destino LINK_OPTIONS ou LINK_FLAGS.",
	"assets/variables.json.STATIC_LIBRARY_FLAGS_CONFIG": "Os sinalizadores de arquivador (ou de bibliotecário do MSVC) de um destino de biblioteca estática, por configuração.",
	"assets/variables.json.STATIC_LIBRARY_OPTIONS": "Sinalizadores de arquivador (ou bibliotecário do MSVC) para um destino de biblioteca estática. Os destinos que são bibliotecas compartilhadas, módulos ou executáveis precisam usar a propriedade de destino LINK_OPTIONS.",
	"assets/variables.json.SUFFIX": "O que vem após o nome de destino.",
	"assets/variables.json.Swift_COMPILATION_MODE": "Especifique como o Swift compila um destino.",
	"assets/variables.json.Swift_LANGUAGE_VERSION": "Esta propriedade define a versão do idioma para as origens Swift no destino. Se não for especificado, o padrão será CMAKE_Swift_LANGUAGE_VERSION, se especificado; caso contrário, será a versão mais recente com suporte pelo compilador.",
	"assets/variables.json.Swift_MODULE_DIRECTORY": "Especificar o diretório de saída dos módulos do Swift fornecidos pelo destino.",
	"assets/variables.json.Swift_MODULE_NAME": "Esta propriedade especifica o nome do módulo Swift. O padrão é o nome do destino.",
	"assets/variables.json.TEST_LAUNCHER": "Use o inicializador fornecido para executar executáveis. Este comando será adicionado como um prefixo a comandos add_test para executáveis do sistema de destino de build, e deve ser executado no computador host.",
	"assets/variables.json.TRANSITIVE_COMPILE_PROPERTIES": "Propriedades que a expressão de gerador TARGET_PROPERTY, no destino e seus dependentes, avalia como a união dos valores coletados do fechamento transitivo das dependências de link, excluindo entradas protegidas por LINK_ONLY.",
	"assets/variables.json.TRANSITIVE_LINK_PROPERTIES": "Propriedades que a expressão de gerador TARGET_PROPERTY, no destino e seus dependentes, avalia como a união de valores coletados do fechamento transitivo de dependências de link, incluindo entradas protegidas por LINK_ONLY.",
	"assets/variables.json.UNITY_BUILD": "Quando esta propriedade for definida como true, os arquivos de origem de destino serão combinados em lotes para compilação mais rápida. Isso é feito criando um (conjunto de) origens do Unity que #include origens originais e, em seguida, compilando essas origens do Unity em vez dos originais. Isso é conhecido como um build do Unity ou de Jumbo.",
	"assets/variables.json.UNITY_BUILD_BATCH_SIZE": "Especifica o número máximo de arquivos de origem que podem ser combinados em qualquer arquivo de origem do Unity quando os builds do Unity são habilitados pela propriedade de destino UNITY_BUILD. Os arquivos de origem originais serão distribuídos entre quantos arquivos de origem do Unity forem necessários para honrar esse limite.",
	"assets/variables.json.UNITY_BUILD_CODE_AFTER_INCLUDE": "Snippet de código que é incluído literalmente pelo recurso de UNITY_BUILD apenas após cada instrução #include nos arquivos de origem de Unity gerados. Por exemplo:",
	"assets/variables.json.UNITY_BUILD_CODE_BEFORE_INCLUDE": "Snippet de código que é incluído literalmente pelo recurso de UNITY_BUILD de pouco antes de cada instrução #include nos arquivos de origem de Unity gerados. Por exemplo:",
	"assets/variables.json.UNITY_BUILD_MODE": "O CMake fornece diferentes algoritmos para selecionar quais origens são agrupadas em um bucket. A seleção é decidida por essa propriedade, que tem os seguintes valores aceitáveis:",
	"assets/variables.json.UNITY_BUILD_UNIQUE_ID": "O nome de um identificador C válido que é definido para um valor exclusivo por arquivo durante os builds do Unity.",
	"assets/variables.json.VERIFY_INTERFACE_HEADER_SETS": "Usado para verificar se todos os cabeçalhos nos conjuntos de cabeçalhos PUBLIC e INTERFACE de um destino podem ser incluídos por conta própria.",
	"assets/variables.json.VERSION": "Número de versão de um destino de biblioteca compartilhada.",
	"assets/variables.json.VISIBILITY_INLINES_HIDDEN": "Se deseja adicionar um sinalizador de compilação para ocultar os símbolos de funções embutidas",
	"assets/variables.json.VS_CONFIGURATION_TYPE": "Tipo de configuração do projeto do Visual Studio.",
	"assets/variables.json.VS_DEBUGGER_COMMAND": "Define o comando do depurador local para destinos do Visual Studio C++. O valor da propriedade pode usar expressões de gerador <cmake-generator-expressions(7)>. Isso é definido em <LocalDebuggerCommand> no arquivo de projeto do Visual Studio. Essa propriedade é inicializada pelo valor da variável CMAKE_VS_DEBUGGER_COMMAND se ela estiver definida quando um destino for criado.",
	"assets/variables.json.VS_DEBUGGER_COMMAND_ARGUMENTS": "Define os argumentos da linha de comando do depurador local para destinos do Visual Studio C++. O valor da propriedade pode usar expressões de gerador <cmake-generator-expressions(7)>. Isso está definido em <LocalDebuggerCommandArguments> no arquivo de projeto do Visual Studio. Esta propriedade é inicializada pelo valor da variável CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS se ela estiver definida quando um destino for criado.",
	"assets/variables.json.VS_DEBUGGER_ENVIRONMENT": "Define o ambiente do depurador local para destinos do Visual Studio C++. O valor da propriedade pode usar expressões de gerador <cmake-generator-expressions(7)>. Isso é definido em <LocalDebuggerEnvironment> no arquivo de projeto do Visual Studio. Essa propriedade é inicializada pelo valor da variável CMAKE_VS_DEBUGGER_ENVIRONMENT se ela estiver definida quando um destino for criado.",
	"assets/variables.json.VS_DEBUGGER_WORKING_DIRECTORY": "Define o diretório de trabalho do depurador local para destinos do Visual Studio C++. O valor da propriedade pode usar expressões de gerador <cmake-generator-expressions(7)>. Isso está definido em <LocalDebuggerWorkingDirectory> no arquivo de projeto do Visual Studio. Essa propriedade é inicializada pelo valor da variável CMAKE_VS_DEBUGGER_WORKING_DIRECTORY se ela estiver definida quando um destino for criado.",
	"assets/variables.json.VS_DESKTOP_EXTENSIONS_VERSION": "Versão de Extensões do Windows 10 Desktop do Visual Studio",
	"assets/variables.json.VS_DOTNET_DOCUMENTATION_FILE": "Saída da documentação do projeto .NET gerenciado pelo Visual Studio",
	"assets/variables.json.VS_DOTNET_REFERENCEPROP_refname_TAG_tagname": "Define uma propriedade XML <tagname> para a referência <refname> do .NET.",
	"assets/variables.json.VS_DOTNET_REFERENCES": "Referências do .NET do projeto gerenciado pelo Visual Studio",
	"assets/variables.json.VS_DOTNET_REFERENCES_COPY_LOCAL": "Define a propriedade Local da Cópia para todas as referências de dica do .NET no destino",
	"assets/variables.json.VS_DOTNET_REFERENCE_refname": "Referência do .NET do projeto gerenciado pelo Visual Studio com o nome <refname> e o caminho de dica.",
	"assets/variables.json.VS_DOTNET_STARTUP_OBJECT": "Define a propriedade do objeto de inicialização nos destinos do Visual Studio .NET. O valor da propriedade define um nome de classe qualificado completo (incluindo o nome do pacote), por exemplo: MyCompany.Package.MyStarterClass.",
	"assets/variables.json.VS_DOTNET_TARGET_FRAMEWORK_VERSION": "Especificar a versão da estrutura de destino do .NET.",
	"assets/variables.json.VS_DPI_AWARE": "Defina a Ferramenta de Manifesto -> Entrada e Saída -> Reconhecimento de DPI nas propriedades do projeto de destino do Visual Studio.",
	"assets/variables.json.VS_FILTER_PROPS": "Define o arquivo de propriedades do filtro a ser incluído no arquivo de filtro do projeto C++ do visual studio.",
	"assets/variables.json.VS_GLOBAL_KEYWORD": "Palavra-chave do projeto do Visual Studio.",
	"assets/variables.json.VS_GLOBAL_PROJECT_TYPES": "Tipos de projeto do Visual Studio.",
	"assets/variables.json.VS_GLOBAL_ROOTNAMESPACE": "Namespace da raiz do projeto do Visual Studio.",
	"assets/variables.json.VS_GLOBAL_variable": "Variável global específica do projeto Visual Studio.",
	"assets/variables.json.VS_IOT_EXTENSIONS_VERSION": "Versão de Extensões do Windows 10 IoT do Visual Studio",
	"assets/variables.json.VS_IOT_STARTUP_TASK": "Tarefa em Segundo Plano Contínua do Windows 10 IoT do Visual Studio",
	"assets/variables.json.VS_JUST_MY_CODE_DEBUGGING": "Habilitar Apenas Meu Código com o depurador do Visual Studio.",
	"assets/variables.json.VS_KEYWORD": "Removido. Isso especificava a palavra-chave do projeto do Visual Studio para o gerador Visual Studio 9 2008 e mais antigos, mas todos esses geradores foram removidos.",
	"assets/variables.json.VS_MOBILE_EXTENSIONS_VERSION": "Versão das Extensões Móveis do Windows 10 no Visual Studio",
	"assets/variables.json.VS_NO_COMPILE_BATCHING": "Desative o envio em lote de compilação para o destino. Normalmente, o MSBuild chama o compilador com vários arquivos c/cpp e o compilador inicia subprocessos para cada arquivo para tornar a compilação paralela. Se você quiser que o compilador seja invocado com um arquivo de cada vez, configure VS_NO_COMPILE_BATCHING como ON. Se esse sinalizador for definido, o MSBuild chamará o compilador com um arquivo c/cpp por vez. Isso é útil quando você deseja usar a ferramenta que substitui o compilador, por exemplo, alguma ferramenta de cache de compilação.",
	"assets/variables.json.VS_NO_SOLUTION_DEPLOY": "Especifique que o destino não deve ser marcado para implantação em um dispositivo Windows CE ou Windows Phone na solução do Visual Studio gerada.",
	"assets/variables.json.VS_PACKAGE_REFERENCES": "Referências de pacote do Visual Studio para nuget.",
	"assets/variables.json.VS_PLATFORM_TOOLSET": "Substitui o conjunto de ferramentas da plataforma usado para compilar um destino.",
	"assets/variables.json.VS_PROJECT_IMPORT": "Importações do projeto gerenciado pelo Visual Studio",
	"assets/variables.json.VS_SCC_AUXPATH": "Caminho do Auxiliar de Controle do Código-Fonte do Visual Studio.",
	"assets/variables.json.VS_SCC_LOCALPATH": "Caminho do Local de Controle do Código-Fonte do Visual Studio.",
	"assets/variables.json.VS_SCC_PROJECTNAME": "Projeto de Controle do Código-Fonte do Visual Studio.",
	"assets/variables.json.VS_SCC_PROVIDER": "Provedor de Controle do Código-Fonte do Visual Studio.",
	"assets/variables.json.VS_SDK_REFERENCES": "Referências do SDK do projeto do Visual Studio. Especifique uma lista separada por ponto e vírgula de referências do SDK a serem adicionadas a um projeto gerado pelo Visual Studio, por exemplo, Microsoft.AdMediatorWindows81, Versão=1.0.",
	"assets/variables.json.VS_SOLUTION_DEPLOY": "Especifique que o destino deve ser marcado para implantação quando o destino não for um aplicativo do Windows CE, do Windows Phone ou da Microsoft Store.",
	"assets/variables.json.VS_SOURCE_SETTINGS_tool": "Defina todos os metadados de item em todos os arquivos não compilados que usam <tool>.",
	"assets/variables.json.VS_USER_PROPS": "Define o arquivo de propriedades do usuário a ser incluído no arquivo de projeto do Visual Studio C++. O caminho padrão é $(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props, que, na maioria dos casos, é o mesmo que %LOCALAPPDATA%\\\\Microsoft\\\\MSBuild\\\\v4.0\\\\Microsoft.Cpp.Win32.user.props ou %LOCALAPPDATA%\\\\Microsoft\\\\MSBuild\\\\v4.0\\\\Microsoft.Cpp.x64.user.props.",
	"assets/variables.json.VS_USE_DEBUG_LIBRARIES": "Indique aos Geradores do Visual Studio quais configurações são consideradas configurações de depuração. Isso controla a configuração UseDebugLibraries em cada configuração de um arquivo .vcxproj.",
	"assets/variables.json.VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION": "Versão Mínima da Plataforma de Destino Windows do Visual Studio",
	"assets/variables.json.VS_WINRT_COMPONENT": "Marcar um destino como um componente do Windows Runtime do gerador do Visual Studio. Compilar o destino com as extensões de linguagem C++/CX para o Windows Runtime. Para bibliotecas COMPARTILHADAS e de MÓDULO, essa opção também define a macro do pré-processador _WINRT_DLL.",
	"assets/variables.json.VS_WINRT_EXTENSIONS": "Preterido. Use VS_WINRT_COMPONENT. Essa propriedade foi uma implementação parcial experimental daquela.",
	"assets/variables.json.VS_WINRT_REFERENCES": "Referências de Metadados do Windows Runtime do projeto do Visual Studio",
	"assets/variables.json.WATCOM_RUNTIME_LIBRARY": "Selecione a biblioteca de runtime do Watcom para uso por compiladores direcionados à ABI do Watcom.",
	"assets/variables.json.WIN32_EXECUTABLE": "Criar um executável com um ponto de entrada WinMain no Windows.",
	"assets/variables.json.WINDOWS_EXPORT_ALL_SYMBOLS": "Essa propriedade é implementada somente para as ferramentas compatíveis com a MS no Windows.",
	"assets/variables.json.XCODE_ATTRIBUTE_an-attribute": "Definir os atributos de destino do Xcode diretamente.",
	"assets/variables.json.XCODE_EMBED_FRAMEWORKS_CODE_SIGN_ON_COPY": "Peça que o gerador do Xcode execute a assinatura de código para todas as estruturas e bibliotecas inseridas usando a propriedade XCODE_EMBED_FRAMEWORKS <XCODE_EMBED_<type>>.",
	"assets/variables.json.XCODE_EMBED_FRAMEWORKS_REMOVE_HEADERS_ON_COPY": "Peça que o gerador do Xcode remova cabeçalhos de todas as estruturas inseridas usando a propriedade XCODE_EMBED_FRAMEWORKS <XCODE_EMBED_<type>>.",
	"assets/variables.json.XCODE_EMBED_type": "Diga ao gerador do Xcode para inserir a lista de itens especificada no pacote de destino. <type> especifica a fase de build de inserção a ser usada. Consulte a documentação do Xcode para obter o local base de cada <type>.",
	"assets/variables.json.XCODE_EMBED_type_CODE_SIGN_ON_COPY": "Propriedade booliana usada somente pelo gerador Xcode. Ela especifica se a assinatura de código deve ser executada para os itens inseridos usando a propriedade XCODE_EMBED_.",
	"assets/variables.json.XCODE_EMBED_type_PATH": "Essa propriedade é usada somente pelo gerador Xcode. Quando definido, ele especifica o caminho relativo a ser usado ao inserir os itens especificados por XCODE_EMBED_. O caminho é relativo ao local base da fase de build Inserir XXX associada a <type>. Consulte a documentação do Xcode para obter o local base de cada <type>.",
	"assets/variables.json.XCODE_EMBED_type_REMOVE_HEADERS_ON_COPY": "Propriedade booliana usada somente pelo gerador Xcode. Ele especifica se os cabeçalhos devem ser removidos de todas as estruturas inseridas usando a propriedade XCODE_EMBED_.",
	"assets/variables.json.XCODE_GENERATE_SCHEME": "Se habilitado, o gerador do Xcode gerará arquivos de esquema. Essas opções são úteis para invocar as ações analisar, arquivar, compilar para testar e testar da linha de comando.",
	"assets/variables.json.XCODE_LINK_BUILD_PHASE_MODE": "Quando for usado o gerador do Xcode, as bibliotecas a serem vinculadas serão especificadas no arquivo de projeto Xcode usando a fase de build \"Vincular Binário com Bibliotecas\" ou diretamente como sinalizadores do vinculador. O primeiro permite que o Xcode gerencie os caminhos do build, o que pode ser necessário quando se compilam arquivos do Xcode porque ele pode usar caminhos de build diferentes para um build regular.",
	"assets/variables.json.XCODE_PRODUCT_TYPE": "Definir o atributo productType do Xcode na referência dele a um destino. O CMake computa um padrão com base no tipo de destino, mas pode ser informado explicitamente com essa propriedade.",
	"assets/variables.json.XCODE_SCHEME_ADDRESS_SANITIZER": "Se deseja habilitar o Address Sanitizer na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN": "Se deseja habilitar a opção Detectar uso de pilha após o retorno, na seção Diagnóstico do esquema, do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_ARGUMENTS": "Especificar os argumentos de linha de comando que devem ser adicionados à seção Argumentos do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_DEBUG_AS_ROOT": "Se o destino deve ser depurado como 'root'.",
	"assets/variables.json.XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING": "Se deseja habilitar Permitir depuração ao usar o Navegador de Versões do documento na seção Opções do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER": "Se deseja desabilitar o Main Thread Checker na seção Diagnostics do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS": "Se deseja habilitar os Carregamentos de Biblioteca Dinâmica na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE": "Se deseja habilitar o uso da API do Vinculador Dinâmico na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_ENABLE_GPU_API_VALIDATION": "Valor da propriedade Metal: validação de API na seção Opções do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE": "Valor da propriedade para Captura de Quadro da GPU na seção Opções do esquema Xcode gerado. Os valores de Exemplo são Metal e Desabilitado.",
	"assets/variables.json.XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION": "Valor da propriedade Metal: validação do Sombreador na seção Opções do esquema Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_ENVIRONMENT": "Especificar as variáveis de ambiente que devem ser adicionadas à seção Argumentos do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_EXECUTABLE": "Especificar o caminho para o executável na seção Informações do esquema do Xcode gerado. Se essa opção não for definida, o gerador de esquema selecionará o destino atual, se ele realmente for um executável.",
	"assets/variables.json.XCODE_SCHEME_GUARD_MALLOC": "Se deseja habilitar o Guard Malloc na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_LAUNCH_CONFIGURATION": "Defina a configuração de compilação para executar o destino.",
	"assets/variables.json.XCODE_SCHEME_LAUNCH_MODE": "Valor da propriedade para Iniciar na seção Informações do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP": "Se deseja habilitar a opção Pause em problemas do Main Thread Checker na seção Diagnostics do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_MALLOC_GUARD_EDGES": "Se deseja habilitar o Guard Malloc Edges na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_MALLOC_SCRIBBLE": "Se deseja habilitar o Malloc Scribble na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_MALLOC_STACK": "Se deseja habilitar o Malloc Stack na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_THREAD_SANITIZER": "Se deseja habilitar o Thread Sanitizer na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_THREAD_SANITIZER_STOP": "Se deseja habilitar o Thread Sanitizer – Pause em problemas na seção Diagnostics do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER": "Se deseja habilitar o Undefined Behavior Sanitizer na seção Diagnostics do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP": "Se deseja habilitar a opção Pause em problemas do Undefined Behavior Sanitizer na seção Diagnostics do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_SCHEME_WORKING_DIRECTORY": "Especifique o Diretório de Trabalho das ações Executar e Perfil no esquema do Xcode gerado. Caso o valor contenha expressões de gerador, elas serão avaliadas.",
	"assets/variables.json.XCODE_SCHEME_ZOMBIE_OBJECTS": "Se deseja habilitar Objetos Zumbi na seção Diagnóstico do esquema do Xcode gerado.",
	"assets/variables.json.XCODE_XCCONFIG": "Se definido, o gerador Xcode registrará o arquivo especificado como um arquivo XCConfig no nível de destino. Para arquivos XCConfig globais, consulte a variável CMAKE_XCODE_XCCONFIG.",
	"assets/variables.json.XCTEST": "Este destino é um XCTest CFBundle no Mac."
}
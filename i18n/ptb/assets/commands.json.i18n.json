/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"assets/commands.json.add_compile_definitions": "Adicione definições de pré-processador à compilação de arquivos de origem.",
	"assets/commands.json.add_compile_options": "Adicione opções à compilação de arquivos de origem.",
	"assets/commands.json.add_custom_command": "Adicionar uma regra de build personalizada ao sistema de build gerado.",
	"assets/commands.json.add_custom_target": "Adicionar um destino sem nenhuma saída para que ele seja sempre compilado.",
	"assets/commands.json.add_definitions": "Adicione sinalizadores de definição -D à compilação de arquivos de origem.",
	"assets/commands.json.add_dependencies": "Adicionar uma dependência entre destinos de nível superior.",
	"assets/commands.json.add_executable": "Adicionar um executável ao projeto usando os arquivos de origem especificados.",
	"assets/commands.json.add_library": "Adicionar uma biblioteca ao projeto usando os arquivos de origem especificados.",
	"assets/commands.json.add_link_options": "Adicione opções à etapa de link para os destinos do arquivo executável, biblioteca compartilhada ou biblioteca de módulos no diretório atual e abaixo que são adicionados após este comando ser chamado.",
	"assets/commands.json.add_subdirectory": "Adicionar um subdiretório ao build.",
	"assets/commands.json.add_test": "Adicionar um teste ao projeto a ser executado pelo ctest.",
	"assets/commands.json.aux_source_directory": "Localizar todos os arquivos de origem em um diretório.",
	"assets/commands.json.block": "Avalie um grupo de comandos com uma variável dedicada e/ou escopo de política.",
	"assets/commands.json.break": "Interrupção por meio um delimitador foreach ou de um loop while.",
	"assets/commands.json.build_command": "Obter uma linha de comando para compilar o projeto atual. Essa opção destina-se principalmente a uso interno pelo módulo do CTest.",
	"assets/commands.json.build_name": "Não permitido desde a versão 3.0. Confira a Política CMP0036 do CMake.",
	"assets/commands.json.cmake_file_api": "Habilita a interação com a API de arquivo CMake <cmake-file-api(7)>.",
	"assets/commands.json.cmake_host_system_information": "Consulte várias informações do sistema host.",
	"assets/commands.json.cmake_language": "Chame meta-operações em comandos do CMake.",
	"assets/commands.json.cmake_minimum_required": "Requer uma versão mínima do cmake.",
	"assets/commands.json.cmake_parse_arguments": "Analisar argumentos de função ou macro.",
	"assets/commands.json.cmake_path": "Este comando é para a manipulação de caminhos. Somente aspectos sintáticos de caminhos são processados, não há interação de nenhum tipo com qualquer sistema de arquivos subjacente. O caminho pode representar um caminho não existente ou mesmo um que não tenha permissão para existir no sistema de arquivos ou na plataforma atual. Para operações que interagem com o sistema de arquivos, confira o comando do arquivo.",
	"assets/commands.json.cmake_policy": "Gerenciar as configurações de Política do CMake. Consulte o manual cmake-policies para obter as políticas definidas.",
	"assets/commands.json.configure_file": "Copiar um arquivo em outro local e modificar o conteúdo.",
	"assets/commands.json.continue": "Continuar na parte superior do delimitador foreach ou do loop while.",
	"assets/commands.json.create_test_sourcelist": "Crie um programa de driver de teste que vincula muitos testes pequenos em um único executável. Isto é útil ao criar executáveis estáticos com bibliotecas grandes para reduzir o tamanho total necessário.",
	"assets/commands.json.ctest_build": "Executar a Etapa de Build do CTest como um Cliente do Painel.",
	"assets/commands.json.ctest_configure": "Executar a Etapa de Configuração do CTest como um Cliente do Painel.",
	"assets/commands.json.ctest_coverage": "Executar a Etapa de Cobertura do CTest como um Cliente do Painel.",
	"assets/commands.json.ctest_empty_binary_directory": "esvazia o diretório de binário",
	"assets/commands.json.ctest_memcheck": "Executar a Etapa de MemCheck do CTest como um Cliente do Painel.",
	"assets/commands.json.ctest_read_custom_files": "leitura de arquivos CTestCustom.",
	"assets/commands.json.ctest_run_script": "executar um script ctest -S",
	"assets/commands.json.ctest_sleep": "fica em suspensão por um determinado período de tempo",
	"assets/commands.json.ctest_start": "Inicia o teste de um determinado modelo",
	"assets/commands.json.ctest_submit": "Executar a Etapa de Envio do CTest como um Cliente do Painel.",
	"assets/commands.json.ctest_test": "Executar a Etapa de Teste do CTest como um Cliente do Painel.",
	"assets/commands.json.ctest_update": "Executar a Etapa de Atualização do CTest como um Cliente do Painel.",
	"assets/commands.json.ctest_upload": "Carregar arquivos em um servidor de painel como um Cliente do Painel.",
	"assets/commands.json.define_property": "Definir e documentar propriedades personalizadas.",
	"assets/commands.json.else": "Inicia a parte else de um bloco if.",
	"assets/commands.json.elseif": "Inicia a parte elseif de um bloco if.",
	"assets/commands.json.enable_language": "Habilitar linguagens (CXX/C/OBJC/OBJCXX/Fortran/etc.)",
	"assets/commands.json.enable_testing": "Habilitar o teste para o diretório atual e abaixo.",
	"assets/commands.json.endblock": "Termina uma lista de comandos em um bloco e remove os escopos criados pelo comando de bloco.",
	"assets/commands.json.endforeach": "Termina a uma lista de comandos em um bloco foreach.",
	"assets/commands.json.endfunction": "Termina a uma lista de comandos em um bloco de função.",
	"assets/commands.json.endif": "Termina a uma lista de comandos em um bloco if.",
	"assets/commands.json.endmacro": "Termina a uma lista de comandos em um bloco de macro.",
	"assets/commands.json.endwhile": "Termina a uma lista de comandos em um bloco while.",
	"assets/commands.json.execute_process": "Execute um ou mais processos filho.",
	"assets/commands.json.exec_program": "Execute um programa executável durante o processamento do arquivo CMakeList.txt.",
	"assets/commands.json.export": "Exporte destinos ou pacotes para projetos externos para usá-los diretamente na árvore de compilações do projeto atual, sem instalação.",
	"assets/commands.json.export_library_dependencies": "Não permitido desde a versão 3.0. Confira a Política CMP0033 do CMake.",
	"assets/commands.json.file": "Comando de manipulação de arquivo.",
	"assets/commands.json.find_file": "Este comando é usado para localizar um caminho completo para o arquivo nomeado.",
	"assets/commands.json.find_library": "Este comando é usado para localizar uma biblioteca.",
	"assets/commands.json.find_package": "Localize um pacote (geralmente fornecido por algo externo ao projeto) e carregue seus detalhes específicos do pacote. Chamadas para esse comando também podem ser interceptadas por provedores de dependência.",
	"assets/commands.json.find_path": "Este comando é usado para localizar um diretório que contém o arquivo nomeado.",
	"assets/commands.json.find_program": "Este comando é usado para localizar um programa.",
	"assets/commands.json.fltk_wrap_ui": "Criar Wrappers de interfaces do usuário do FLTK.",
	"assets/commands.json.foreach": "Avaliar a um grupo de comandos para cada valor em uma lista.",
	"assets/commands.json.function": "Iniciar a gravação de uma função para invocação posterior como um comando.",
	"assets/commands.json.get_cmake_property": "Obter uma propriedade global da instância do CMake.",
	"assets/commands.json.get_directory_property": "Obter uma propriedade do escopo do DIRECTORY.",
	"assets/commands.json.get_filename_component": "Obter um componente específico de um nome de arquivo completo.",
	"assets/commands.json.get_property": "Obtenha uma propriedade.",
	"assets/commands.json.get_source_file_property": "Obter uma propriedade para um arquivo de origem.",
	"assets/commands.json.get_target_property": "Obter uma propriedade de um destino.",
	"assets/commands.json.get_test_property": "Obter uma propriedade do teste.",
	"assets/commands.json.if": "Executar um grupo de comandos condicionalmente.",
	"assets/commands.json.include": "Carregar e executar o código do CMake de um arquivo ou módulo.",
	"assets/commands.json.include_directories": "Adicione diretórios de inclusão à compilação.",
	"assets/commands.json.include_external_msproject": "Incluir um arquivo de projeto da Microsoft externo em um workspace.",
	"assets/commands.json.include_guard": "Fornece uma proteção de inclusão para o arquivo que está sendo processado pelo CMake no momento.",
	"assets/commands.json.include_regular_expression": "Defina a expressão regular usada para verificação de dependência.",
	"assets/commands.json.install": "Especificar as regras a serem executadas no momento da instalação.",
	"assets/commands.json.install_files": "Este comando foi substituído pelo comando install. Ele é fornecido para compatibilidade com o código do CMake mais antigo. O formulário FILES é substituído diretamente pelo formulário FILES do comando install. O formulário regexp pode ser expresso com mais clareza usando o formulário GLOB do comando file.",
	"assets/commands.json.install_programs": "Este comando foi substituído pelo comando install. Ele é fornecido para compatibilidade com o código do CMake mais antigo. O formulário FILES é substituído diretamente pelo formulário PROGRAMS do comando install. O formulário regexp pode ser expresso com mais clareza usando o formulário GLOB do comando file.",
	"assets/commands.json.install_targets": "Este comando foi substituído pelo comando install. Ele é fornecido para compatibilidade com o código do CMake mais antigo.",
	"assets/commands.json.link_directories": "Adicione diretórios nos quais o vinculador procurará bibliotecas.",
	"assets/commands.json.link_libraries": "Vincular bibliotecas a todos os destinos adicionados mais tarde.",
	"assets/commands.json.list": "Operações em listas separadas por ponto e vírgula .",
	"assets/commands.json.load_cache": "Carregar os valores do cache do CMake de outro projeto.",
	"assets/commands.json.load_command": "Não permitido desde a versão 3.0. Confira a Política CMP0031 do CMake.",
	"assets/commands.json.macro": "Iniciar a gravação de uma macro para invocação posterior como um comando",
	"assets/commands.json.make_directory": "Cria o diretório especificado. Os caminhos completos devem ser fornecidos. Todos os diretórios pai que não existirem também serão criados. Use com cuidado.",
	"assets/commands.json.mark_as_advanced": "Marcar as variáveis armazenadas em cache do cmake como avançadas.",
	"assets/commands.json.math": "Avaliar uma expressão matemática.",
	"assets/commands.json.message": "Registre uma mensagem.",
	"assets/commands.json.option": "Forneça uma opção booliana que o usuário pode selecionar opcionalmente.",
	"assets/commands.json.output_required_files": "Não permitido desde a versão 3.0. Confira a Política CMP0032 do CMake.",
	"assets/commands.json.project": "Defina o nome do projeto.",
	"assets/commands.json.qt_wrap_cpp": "Criar manualmente Wrappers de Qt.",
	"assets/commands.json.qt_wrap_ui": "Criar manualmente Wrapper de interfaces do usuário de Qt.",
	"assets/commands.json.remove": "Remove o valor da variável VAR. Isso é normalmente usado para remover entradas de um vetor (por exemplo, lista separada por ponto e vírgula). O valor é expandido.",
	"assets/commands.json.remove_definitions": "Remove os sinalizadores de definição -D adicionados por add_definitions.",
	"assets/commands.json.return": "Retornar de um arquivo, de um diretório ou de uma função.",
	"assets/commands.json.separate_arguments": "Analisar os argumentos da linha de comando em uma lista separada por ponto e vírgula.",
	"assets/commands.json.set": "Definir uma variável normal, de cache ou de ambiente para um determinado valor. Consulte a documentação de variáveis cmake-language(7) para obter os escopos e a interação das variáveis normais e as entradas do cache.",
	"assets/commands.json.set_directory_properties": "Definir as propriedades do diretório e dos subdiretórios atuais.",
	"assets/commands.json.set_property": "Definir uma propriedade nomeada em um determinado escopo.",
	"assets/commands.json.set_source_files_properties": "Os arquivos de origem podem conter propriedades que afetam como eles são compilados.",
	"assets/commands.json.set_target_properties": "Os destinos podem ter propriedades que afetam como eles são compilados.",
	"assets/commands.json.set_tests_properties": "Definir uma propriedade dos testes.",
	"assets/commands.json.site_name": "Definir a variável fornecida como o nome do computador.",
	"assets/commands.json.source_group": "Definir um agrupamento para arquivos de origem na geração de projeto do IDE. Há duas assinaturas diferentes para criar grupos de origem.",
	"assets/commands.json.string": "Operações de cadeia de caracteres.",
	"assets/commands.json.subdirs": "Adicione uma lista de subdiretórios ao build.",
	"assets/commands.json.subdir_depends": "Não permitido desde a versão 3.0. Confira a Política CMP0029 do CMake.",
	"assets/commands.json.target_compile_definitions": "Adicionar definições de compilação a um destino.",
	"assets/commands.json.target_compile_features": "Adicionar os recursos do compilador esperados para um destino.",
	"assets/commands.json.target_compile_options": "Adicionar opções de compilação a um destino.",
	"assets/commands.json.target_include_directories": "Adicionar diretórios de inclusão a um destino.",
	"assets/commands.json.target_link_directories": "Adicionar diretórios de link a um destino.",
	"assets/commands.json.target_link_libraries": "Especificar as bibliotecas ou os sinalizadores a serem usados durante a vinculação de um determinado destino e/ou de seus dependentes. Os requisitos de uso dos destinos de biblioteca vinculados serão propagados. Os requisitos de uso das dependências de um destino afetam a compilação de suas próprias origens.",
	"assets/commands.json.target_link_options": "Adicione opções à etapa de link para um destino executável, biblioteca compartilhada ou biblioteca de módulos.",
	"assets/commands.json.target_precompile_headers": "Adicione uma lista de arquivos de cabeçalho para pré-compilar.",
	"assets/commands.json.target_sources": "Adicionar fontes a um destino.",
	"assets/commands.json.try_compile": "Tente compilar um código.",
	"assets/commands.json.try_run": "Tente compilar e executar um código.",
	"assets/commands.json.unset": "Remover a definição de uma variável, de uma variável de cache ou de uma variável de ambiente.",
	"assets/commands.json.use_mangled_mesa": "Não permitido desde a versão 3.0. Confira a Política CMP0030 do CMake.",
	"assets/commands.json.utility_source": "Não permitido desde a versão 3.0. Confira a Política CMP0034 do CMake.",
	"assets/commands.json.variable_requires": "Não permitido desde a versão 3.0. Confira a Política CMP0035 do CMake.",
	"assets/commands.json.variable_watch": "Observar se há alteração na variável do CMake.",
	"assets/commands.json.while": "Avaliar um grupo de comandos enquanto uma condição for true",
	"assets/commands.json.write_file": "O primeiro argumento é o nome do arquivo, o restante dos argumentos são mensagens a serem gravadas. Se o argumento APPEND for especificado, a mensagem será acrescentada."
}
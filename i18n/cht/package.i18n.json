/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"cmake-tools.command.cmake.openCMakePresets.title": "開啟 CMakePresets.json",
	"cmake-tools.command.cmake.addConfigurePreset.title": "新增設定預設",
	"cmake-tools.command.cmake.addBuildPreset.title": "新增建置預設",
	"cmake-tools.command.cmake.addTestPreset.title": "新增測試預設",
	"cmake-tools.command.cmake.addPackagePreset.title": "新增封裝預設",
	"cmake-tools.command.cmake.addWorkflowPreset.title": "新增工作流程預設",
	"cmake-tools.command.cmake.selectConfigurePreset.title": "選取設定預設",
	"cmake-tools.command.cmake.viewConfigureSettings.title": "檢視可覆寫您設定預設的設定",
	"cmake-tools.command.cmake.selectBuildPreset.title": "選取建置預設",
	"cmake-tools.command.cmake.viewBuildSettings.title": "檢視可覆寫您組建預設的設定",
	"cmake-tools.command.cmake.selectTestPreset.title": "選取測試預設",
	"cmake-tools.command.cmake.viewTestSettings.title": "檢視可覆寫您測試預設的設定",
	"cmake-tools.command.cmake.viewPackageSettings.title": "檢視覆寫您封裝預設的設定",
	"cmake-tools.command.cmake.selectPackagePreset.title": "選取封裝預設",
	"cmake-tools.command.cmake.selectWorkflowPreset.title": "選取工作流程預設",
	"cmake-tools.command.cmake.viewLog.title": "開啟 CMake 工具記錄檔",
	"cmake-tools.command.cmake.logDiagnostics.title": "記錄診斷",
	"cmake-tools.command.cmake.editKits.title": "編輯使用者本機 CMake 套件",
	"cmake-tools.command.cmake.scanForKits.title": "掃描套件",
	"cmake-tools.command.cmake.scanForCompilers.title": "掃描編譯器",
	"cmake-tools.command.cmake.selectKit.title": "選取套件",
	"cmake-tools.command.cmake.setVariant.title": "選取 Variant",
	"cmake-tools.command.cmake.setVariantAll.title": "選取所有專案的變化",
	"cmake-tools.command.cmake.configure.title": "設定",
	"cmake-tools.command.cmake.configureWithDebugger.title": "使用 CMake 偵錯工具設定",
	"cmake-tools.command.cmake.configureAll.title": "設定所有專案",
	"cmake-tools.command.cmake.configureAllWithDebugger.title": "使用 CMake 偵錯工具設定所有專案",
	"cmake-tools.command.cmake.showConfigureCommand.title": "顯示設定命令",
	"cmake-tools.command.cmake.build.title": "建置",
	"cmake-tools.command.cmake.buildAll.title": "建置所有專案",
	"cmake-tools.command.cmake.showBuildCommand.title": "顯示組建命令",
	"cmake-tools.command.cmake.compileFile.title": "編譯使用中的檔案",
	"cmake-tools.command.cmake.outline.compileFile.title": "編譯檔案",
	"cmake-tools.command.cmake.install.title": "安裝",
	"cmake-tools.command.cmake.installAll.title": "安裝所有專案",
	"cmake-tools.command.cmake.buildWithTarget.title": "建置目標",
	"cmake-tools.command.cmake.setDefaultTarget.title": "設定建置目標",
	"cmake-tools.command.cmake.cleanConfigure.title": "刪除快取並重新設定",
	"cmake-tools.command.cmake.cleanConfigureWithDebugger.title": "使用 CMake 偵錯工具刪除快取並重新設定",
	"cmake-tools.command.cmake.cleanConfigureAll.title": "刪除快取並重新設定所有專案",
	"cmake-tools.command.cmake.cleanConfigureAllWithDebugger.title": "刪除快取並使用 CMake 偵錯工具重新設定所有專案",
	"cmake-tools.command.cmake.editCacheUI.title": "編輯 CMake 快取 (UI)",
	"cmake-tools.command.cmake.outline.cleanConfigure.title": "清除重新設定",
	"cmake-tools.command.cmake.outline.cleanConfigureWithDebugger.title": "使用 CMake 偵錯工具進行清除重新設定",
	"cmake-tools.command.cmake.outline.cleanConfigureAll.title": "清除 [重新設定所有專案]",
	"cmake-tools.command.cmake.outline.cleanConfigureAllWithDebugger.title": "使用 CMake 偵錯工具清除重新設定所有專案",
	"cmake-tools.command.cmake.clean.title": "清除",
	"cmake-tools.command.cmake.cleanAll.title": "清除所有專案",
	"cmake-tools.command.cmake.cleanRebuild.title": "清除重建",
	"cmake-tools.command.cmake.cleanRebuildAll.title": "清除 [重建所有專案]",
	"cmake-tools.command.cmake.ctest.title": "執行測試",
	"cmake-tools.command.cmake.ctestAll.title": "執行所有專案的測試",
	"cmake-tools.command.cmake.cpack.title": "執行 CPack",
	"cmake-tools.command.cmake.cpackAll.title": "為所有專案執行 CPack",
	"cmake-tools.command.cmake.workflow.title": "執行工作流程",
	"cmake-tools.command.cmake.workflowAll.title": "為所有專案執行工作流程",
	"cmake-tools.command.cmake.revealTestExplorer.title": "顯露測試總管",
	"cmake-tools.command.cmake.refreshTests.title": "重新整理測試",
	"cmake-tools.command.cmake.refreshTestsAll.title": "重新整理所有專案的測試",
	"cmake-tools.command.cmake.editCache.title": "編輯 CMake 快取",
	"cmake-tools.command.cmake.quickStart.title": "快速入門",
	"cmake-tools.command.cmake.debugTarget.title": "偵錯",
	"cmake-tools.command.cmake.debugTargetAll.title": "偵錯所有專案",
	"cmake-tools.command.cmake.launchTarget.title": "執行但不進行偵錯",
	"cmake-tools.command.cmake.launchTargetAll.title": "執行所有專案但不進行偵錯",
	"cmake-tools.command.cmake.selectLaunchTarget.title": "設定偵錯目標",
	"cmake-tools.command.cmake.stop.title": "取消建置",
	"cmake-tools.command.cmake.stopAll.title": "取消所有專案的組建",
	"cmake-tools.command.cmake.resetState.title": "重設 CMake 工具延伸模組狀態 (進行疑難排解)",
	"cmake-tools.command.cmake.openSettings.title": "開啟 CMake 工具延伸模組設定",
	"cmake-tools.command.cmake.selectActiveFolder.title": "選取作用中的資料夾",
	"cmake-tools.command.cmake.outline.runUtilityTarget.title": "執行公用程式",
	"cmake-tools.command.cmake.outline.debugTarget.title": "偵錯",
	"cmake-tools.command.cmake.outline.launchTarget.title": "在終端機中執行",
	"cmake-tools.command.cmake.outline.setDefaultTarget.title": "設定為建置目標",
	"cmake-tools.command.cmake.outline.setLaunchTarget.title": "設定為啟動/偵錯目標",
	"cmake-tools.command.cmake.outline.revealInCMakeLists.title": "開啟 CMakeLists.txt",
	"cmake-tools.command.cmake.folders.setActiveFolder.title": "設定作用中的資料夾",
	"cmake-tools.configuration.title": "CMake 工具組態",
	"cmake-tools.configuration.cmake.cmakePath.description": "要使用的 CMake 可執行檔名稱/路徑。",
	"cmake-tools.configuration.cmake.buildDirectory.description": "接收 CMake 建置檔案的目錄。",
	"cmake-tools.configuration.cmake.installPrefix.description": "接收 CMake 已安裝檔案的目錄。",
	"cmake-tools.configuration.cmake.sourceDirectory.description": "一或多個 CMakeLists.txt 根目錄的路徑或路徑陣列。",
	"cmake-tools.configuration.cmake.saveBeforeBuild.description": "先儲存開啟的檔案，然後再建置。",
	"cmake-tools.configuration.cmake.buildBeforeRun.description": "先建置目標再予以執行。",
	"cmake-tools.configuration.cmake.clearOutputBeforeBuild.description": "每次建置前先清除建置輸出。",
	"cmake-tools.configuration.cmake.configureSettings.description": "要在命令列上設定的 CMake 變數。此設定專用於套件，不會用於 CMake 預設。",
	"cmake-tools.configuration.cmake.cacheInit.string.description": "初始化快取 CMake 檔案的路徑。",
	"cmake-tools.configuration.cmake.cacheInit.array.description": "快取初始設定式檔案的清單。",
	"cmake-tools.configuration.cmake.cacheInit.array.string.description": "初始化 CMake 檔案的快取。",
	"cmake-tools.configuration.cmake.cacheInit.overall.description": "提供以快取初始化的 CMake 檔案。",
	"cmake-tools.configuration.cmake.preferredGenerators.description": "進行組態時要使用的慣用 CMake 產生器 (以清單順序嘗試)。",
	"cmake-tools.configuration.cmake.generator.description": "要使用的 CMake 產生器。",
	"cmake-tools.configuration.cmake.toolset.description": "進行組態時要使用的 CMake 工具組。",
	"cmake-tools.configuration.cmake.platform.description": "進行組態時要使用的 CMake 平台。",
	"cmake-tools.configuration.cmake.configureArgs.description": "進行組態時會傳遞到 CMake 的其他引數。使用 CMake 預設時，這些引數會臨時附加至使用中設定預設所提供的引數。",
	"cmake-tools.configuration.cmake.buildArgs.description": "建置時會傳遞到 CMake 的其他引數。使用 CMake 預設時，這些引數會臨時附加至使用中組建預設所提供的引數。",
	"cmake-tools.configuration.cmake.buildToolArgs.description": "建置時會傳遞到基礎建置工具的其他引數。使用 CMake 預設時，這些引數會臨時附加至使用中組建預設所提供的引數，以叫用組建工具。",
	"cmake-tools.configuration.cmake.parallelJobs.description": "平行建置工作數目。使用零以自動偵測 CPU 數目。將此值設定為 1 會從基礎建置命令省略平行處理原則旗標 (-j)，其對建置平行處理原則有產生器相依的效果。",
	"cmake-tools.configuration.cmake.ctestPath.description": "CTest 可執行檔的路徑。若為 null，將會從 cmake.cmakePath 推斷 (建議保留 null)。",
	"cmake-tools.configuration.cmake.cpackPath.description": "CPack 可執行檔的路徑。如果為 null，將從 cmake.cmakePath 推斷 (建議保留 null)。當使用套件而不是預設時，將被略過。",
	"cmake-tools.configuration.cmake.ctest.parallelJobs.markdownDescription": "平行測試工作的數量。使用零以使用 `#cmake.parallelJobs#` 的值。這僅適用於 `#cmake.ctest.allowParallelJobs#` 設定為 `true` 的情况。",
	"cmake-tools.configuration.cmake.ctest.allowParallelJobs.description": "允許 ctest 平行執行，但結果輸出可能因此而出現亂碼，且測試總管可能無法精確反映測試進度。",
	"cmake-tools.configuration.cmake.ctest.testExplorerIntegrationEnabled.description": "是否已啟用與測試總管的整合。如果您偏好使用不同的延伸模組進行測試整合，這有助於停用。",
	"cmake-tools.configuration.cmake.parseBuildDiagnostics.description": "剖析警告與錯誤的編譯器輸出。",
	"cmake-tools.configuration.cmake.enabledOutputParsers.description": "要使用的輸出剖析器。支援的剖析器為 `cmake`、`gcc`、`gnuld` (若為 GNULD 樣式的連結器輸出)、`msvc` (若為 Microsoft Visual C++)、`ghs` (若為具有 --no_wrap_diagnostics --brief_diagnostics 的 Green Hills 編譯器) 及 `diab` (若為 Wind River Diab 編譯器)。",
	"cmake-tools.configuration.cmake.debugConfig.description": "偵錯目標時，要使用的偵錯組態。",
	"cmake-tools.configuration.cmake.debugConfig.symbolSearchPath.description": "Visual Studio 偵錯工具符號搜尋路徑。",
	"cmake-tools.configuration.cmake.debugConfig.additionalSOLibSearchPath.description": "要搜尋是否有 .so 檔案的 GDB 或 LLDB 路徑。",
	"cmake-tools.configuration.cmake.debugConfig.externalConsole.description": "為程式啟動外部主控台。",
	"cmake-tools.configuration.cmake.debugConfig.console.description": "要在何處啟動偵錯目標。如果未定義，則預設為 `internalConsole`。",
	"cmake-tools.configuration.cmake.debugConfig.console.internalConsole.description": "輸出到 VS Code 偵錯主控台。這不支援讀取主控台輸入 (例如: `std::cin` 或 `scanf`)。",
	"cmake-tools.configuration.cmake.debugConfig.console.integratedTerminal.description": "VS Code 的整合式終端機。",
	"cmake-tools.configuration.cmake.debugConfig.console.externalTerminal.description": "主控台應用程式將會在外部終端視窗中啟動。此視窗將在重新啟動情節中重複使用，且在應用程式結束時不會自動消失。",
	"cmake-tools.configuration.cmake.debugConfig.console.newExternalWindow.description": "主控台應用程式將會在其本身的外部主控台視窗中啟動，該視窗會在應用程式停止時結束。非主控台應用程式將在沒有終端的情況下執行，而且將忽略 stdout/stderr。",
	"cmake-tools.configuration.cmake.debugConfig.logging.description": "判斷應記錄到主控台的訊息類型。",
	"cmake-tools.configuration.cmake.debugConfig.visualizerFile.description": "偵錯時要使用的 .natvis 檔案。",
	"cmake-tools.configuration.cmake.debugConfig.args.description": "傳遞到程式命令列的引數。",
	"cmake-tools.configuration.cmake.debugConfig.cwd.description": "設定程式的工作目錄。",
	"cmake-tools.configuration.cmake.debugConfig.environment.name.description": "環境變數的名稱。",
	"cmake-tools.configuration.cmake.debugConfig.environment.value.description": "環境變數的值。",
	"cmake-tools.configuration.cmake.debugConfig.miDebuggerPath.description": "gdb 或 lldb 偵錯工具的路徑。",
	"cmake-tools.configuration.cmake.debugConfig.stopAtEntry.description": "在目標的進入點停止。",
	"cmake-tools.configuration.cmake.debugConfig.setupCommands.description": "用於設定 gdb 或 lldb 的命令。",
	"cmake-tools.configuration.cmake.debugConfig.setupCommands.text.description": "要執行的命令。",
	"cmake-tools.configuration.cmake.debugConfig.setupCommands.description.description": "命令的描述。",
	"cmake-tools.configuration.cmake.defaultVariants.overall.description": "設定預設變數設定。",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.description": "組建類型。",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.debug.long": "停用最佳化 - 包含偵錯資訊。",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.release.long": "最佳化速度 - 排除偵錯資訊。",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.minsize.long": "為了讓二進位檔大小最小而最佳化 - 排除偵錯資訊。",
	"cmake-tools.configuration.cmake.defaultVariants.buildType.reldeb.long": "最佳化速度 - 包含偵錯資訊。",
	"cmake-tools.configuration.cmake.ctestArgs.description": "傳遞至 CTest 的其他引數。使用 CMake 預設時，這些引數會臨時新增至使用中測試預設所提供的引數。",
	"cmake-tools.configuration.cmake.ctestDefaultArgs.description": "預設傳遞給 CTest 的引數。",
	"cmake-tools.configuration.cmake.environment.description": "執行 CMake 命令時，要設定的環境變數。使用 CMake 預置時，這些會暫時新增至用於 CMake 命令的環境。",
	"cmake-tools.configuration.cmake.environment.additionalProperties.description": "環境變數的值。",
	"cmake-tools.configuration.cmake.configureEnvironment.description": "進行組態期間會傳遞到 CMake 的環境變數。使用 CMake 預設時，這些會暫時新增至使用中設定預設所提供的環境。",
	"cmake-tools.configuration.cmake.buildEnvironment.description": "建置期間會傳遞到 CMake 的環境變數。使用 CMake 預設時，這些會暫時新增至使用中組建預設所提供的環境。",
	"cmake-tools.configuration.cmake.testEnvironment.description": "會傳遞到 CTest 的環境變數。使用 CMake 預設時，這些會暫時新增至使用中測試預設所提供的環境。",
	"cmake-tools.configuration.cmake.cpackArgs.description": "要傳遞給 CPack 的其他引數 (僅當使用預設時，套件不支援)。這些引數會臨時新增至使用中封裝預設提供的引數中。",
	"cmake-tools.configuration.cmake.cpackEnvironment.description": "使用 CPack 進行封裝時要設定的環境變數 (僅當使用預設時，套件不支援)。這些臨時新增至用於 CPack 執行的環境中。",
	"cmake-tools.configuration.cmake.mingwSearchDirs.description": "安裝 MinGW 的目錄。",
	"cmake-tools.configuration.cmake.additionalCompilerSearchDirs.description": "要搜尋編譯器的其他目錄。",
	"cmake-tools.configuration.cmake.searchDirs.items.description": "目錄路徑。",
	"cmake-tools.configuration.cmake.emscriptenSearchDirs.description": "安裝 Emscripten 的目錄。",
	"cmake-tools.configuration.cmake.mergedCompileCommands.description": "遞迴收集及合併 cmake.buildDirectory 中找到的所有compile_commands.js。",
	"cmake-tools.configuration.cmake.copyCompileCommands.description": "組態成功之後，將 compile_commands.json 複製到此位置。",
	"cmake-tools.configuration.cmake.configureOnOpen.description": "開啟 CMake 專案目錄時自動進行組態。",
	"cmake-tools.configuration.cmake.configureOnEdit.description": "在儲存 cmake.sourceDirectory 或 CMakeLists.txt 內容後，自動設定 CMake 專案目錄。",
	"cmake-tools.configuration.cmake.setBuildTypeOnMultiConfig.description": "也在多個組態產生器上設定 CMAKE_BUILD_TYPE。",
	"cmake-tools.configuration.cmake.skipConfigureIfCachePresent.description": "如果有快取，則跳過設定流程。",
	"cmake-tools.configuration.cmake.cmakeCommunicationMode": "用於在延伸模組與 CMake 之間通訊的通訊協定。",
	"cmake-tools.configuration.cmake.showSystemKits.description": "在套件選取範圍中包含系統套件。",
	"cmake-tools.configuration.cmake.ignoreKitEnv.description": "執行 CMake 命令時，不使用套件環境變數。",
	"cmake-tools.configuration.cmake.buildTask.description": "使用 tasks.json 而非內部處理序的組建。",
	"cmake-tools.configuration.cmake.outputLogEncoding.description": "外部命令輸出的編譯 (例如 cmake -- build)。",
	"cmake-tools.configuration.cmake.enableTraceLogging.description": "為檔案及主控台啟用追蹤記錄 (雜訊非常多)。",
	"cmake-tools.configuration.cmake.autoSelectActiveFolder.description": "自動選取使用中的資料夾。",
	"cmake-tools.configuration.cmake.touchbar.advanced.description": "設定延伸模組在 MacBook 觸控列上顯示按鈕之進階設定的方式。",
	"cmake-tools.configuration.cmake.touchbar.visibility.description": "設定延伸模組在 MacBook 觸控列上顯示按鈕的方式。",
	"cmake-tools.configuration.cmake.touchbar.visibility.default.description": "在支援的系統上顯示觸控列按鈕。",
	"cmake-tools.configuration.cmake.touchbar.visibility.hidden.description": "不顯示觸控列按鈕。",
	"cmake-tools.configuration.cmake.showOptionsMovedNotification": "啟用有關移至 [專案狀態檢視] 之狀態列選項的通知，以在延伸模組開始時顯示。",
	"cmake-tools.configuration.cmake.showConfigureWithDebuggerNotification": "啟用會詢問使用者在設定失敗時是否要使用 CMake 偵錯工具進行設定的快顯。",
	"cmake-tools.configuration.cmake.showNotAllDocumentsSavedQuestion": "啟用詢問使用者是否要繼續建置的快顯，儘管某些檔案可能未儲存。若未啟用，將會繼續建置。",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.visible.description": "以完整大小顯示狀態列選項。",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.icon.description": "僅顯示狀態列選項的圖示。",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.compact.markdownDescription": "顯示狀態列選項，並將文字截斷為 `#cmake.status.advanced.statusBarLength#` 中指定的長度 (預設值為 20)。",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.variant.compact.description": "顯示狀態列選項，並移除狀態訊息。",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.hidden.description": "隱藏狀態列選項。",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.inherit.markdownDescription": "如果比較一般的 `#cmake.options.statusBarVisibility#` 設定已設為 `hidden`，則這會預設為在 `#cmake.options.advanced.inheritDefault#` 設定中設定的內容，否則將會繼承 `#cmake.options.statusBarVisibility#` 設定。",
	"cmake-tools.configuration.cmake.options.advanced.inheritDefault.markdownDescription": "當 `#cmake.options.statusBarVisibility#` 已設為 `hidden` 時，則會需要對 `#cmake.options.advanced.statusBarVisibility#` 設定中的 `inherit` 選項設定預設值。該設定與 `#cmake.options.advanced.statusBarVisibility#` 設定有著相同的選項，只是去掉了 `inherit` 選項。",
	"cmake-tools.configuration.cmake.options.statusBarVisibility.markdownDescription": "設定延伸模組在狀態列中顯示選項的方式。這些設定可能會由更特定的 `#cmake.options.advanced.statusBarVisibility#` 設定所覆寫。[更多資訊](https://aka.ms/cmaketoolsoptionsconfiguration)。",
	"cmake-tools.configuration.cmake.options.advanced.statusBarVisibility.markdownDescription": "設定個別狀態列選項的設定。這些設定會覆寫更一般的`#cmake.options.statusBarVisibility#` 設定。",
	"cmake-tools.configuration.cmake.options.advanced.projectStatusVisibility.visible.description": "在 [專案狀態檢視] 中顯示節點。",
	"cmake-tools.configuration.cmake.options.advanced.projectStatusVisibility.hidden.description": "在 [專案狀態檢視] 中隱藏節點及其子系。",
	"cmake-tools.configuration.cmake.options.advanced.markdownDescription": "設定個別 [專案狀態檢視] 和狀態列選項的設定。這些設定可能會覆寫更一般的 `#cmake.options.statusBarVisibility#` 設定。[更多資訊](https://aka.ms/cmaketoolsoptionsconfiguration)。",
	"cmake-tools.configuration.cmake.options.advanced.projectStatusVisibility.description": "設定延伸模組如何顯示 [專案狀態檢視] 這個選項。",
	"cmake-tools.configuration.cmake.options.advanced.ctest.color.description": "啟用根據測試結果變更此選項的色彩。",
	"cmake-tools.configuration.cmake.options.advanced.cpack.color.description": "根據 cpack 結果啟用此選項的色彩變更。",
	"cmake-tools.configuration.cmake.options.advanced.workflow.color.description": "根據工作流程執行結果，啟用此選項的色彩變更。",
	"cmake-tools.configuration.cmake.options.advanced.statusBarLength.markdownDescription": "當設為 `compact` 模式時，設定狀態列中可見文字的長度上限。",
	"cmake-tools.configuration.views.cmake.folders.description": "資料夾",
	"cmake-tools.configuration.views.cmake.projectStatus.description": "專案狀態",
	"cmake-tools.configuration.views.cmake.pinnedCommandsWelcome.description": "尚未釘選任何 CMake 命令。\n[新增命令](command:cmake.pinnedCommands.add)",
	"cmake-tools.configuration.views.cmake.outline.description": "專案大綱",
	"cmake-tools.configuration.views.cmake.pinnedCommands.description": "已釘選的命令",
	"cmake-tools.configuration.cmake.additionalKits.description": "自訂套件檔案的路徑陣列。",
	"cmake-tools.configuration.cmake.revealLog.description": "設定顯示記錄與專注於輸出通道的設定。",
	"cmake-tools.configuration.cmake.revealLog.focus.description": "記錄已顯示，且輸出通道取得游標焦點。",
	"cmake-tools.configuration.cmake.revealLog.always.description": "記錄已顯示，但輸出通道未取得游標焦點。",
	"cmake-tools.configuration.cmake.revealLog.never.description": "記錄沒有顯示，也無法取得焦點。",
	"cmake-tools.configuration.cmake.exportCompileCommandsFile.description": "啟用匯出 compile_commands.json。這僅適用於套件案例。在預設案例中，請使用 CMakePresets.json 進行設定",
	"cmake-tools.configuration.cmake.useCMakePresets.description": "使用 CMakePresets.json 來設定 CMake 設定、建置和測試的磁碟機。使用 CMakePresets.json 時，settings.json 中的套件、變體和某些設定會被忽略。",
	"cmake-tools.configuration.cmake.allowCommentsInPresetsFile.description": "允許使用 JSON 延伸模組，例如 CMakePresets.json 中的註解。請注意，如果您使用非標準的 JSON，其他 IDE 或命令列可能會將您的 CMakePresets.json 檔案視為無效。",
	"cmake-tools.configuration.cmake.allowUnsupportedPresetsVersions.description": "啟用使用來自 CMake Tools 延伸模組目前不支援之功能的預設檔案。將忽略未知的屬性和巨集。",
	"cmake-tools.configuration.cmake.ignoreCMakeListsMissing.description": "如果為 `true`，當工作區中找到某個檔案但卻不在根資料夾中時，延伸就不會要求使用者選取要設定的 CMakeLists.txt 檔案。",
	"cmake-tools.configuration.cmake.launchBehavior.description": "控制啟動終端機在您啟動目標時要執行的動作。",
	"cmake-tools.configuration.cmake.automaticReconfigure.description": "當套件或設定預設變更時，自動設定 CMake 專案目錄。",
	"cmake-tools.configuration.cmake.pinnedCommands.description": "要釘選的 CMake 命令清單。",
	"cmake-tools.configuration.cmake.enableAutomaticKitScan.description": "未選取套件時啟用套件的自動掃描。只有在未使用 CMake 預設時才會生效。",
	"cmake-tools.debugger.pipeName.description": "用於偵錯工具通訊的管道 (在 Windows 上) 或網域通訊端 (在 Unix 上) 的名稱。",
	"cmake-tools.debugger.clean.description": "在設定之前先清除。",
	"cmake-tools.debugger.configureAll.description": "設定所有專案。",
	"cmake-tools.debugger.dapLog.description": "應該記錄偵錯工具 DAP 記錄的位置。",
	"cmake-tools.debugger.scriptPath.description": "要偵錯之指令碼的路徑。",
	"cmake-tools.debugger.scriptArgs.description": "要偵錯之指令碼的引數。",
	"cmake-tools.debugger.scriptEnv.description": "要使用之指令碼的環境。",
	"cmake-tools.debugger.name": "名稱",
	"cmake-tools.debugger.value": "值",
	"cmake-tools.debugger.debugType.description": "CMake 偵錯工作階段的類型。可用的選項有: \"configure\"，\"external\"，\"script\"。",
	"cmake-tools.debugger.configure.snippet.label": "CMake: 設定",
	"cmake-tools.debugger.configure.snippet.description": "對 CMake 專案設定進行偵錯",
	"cmake-tools.debugger.configure.snippet.body.name": "CMake: 設定專案",
	"cmake-tools.debugger.script.snippet.label": "CMake: 指令碼",
	"cmake-tools.debugger.script.snippet.description": "偵錯 CMake 指令碼",
	"cmake-tools.debugger.script.snippet.body.name": "CMake: 指令碼偵錯",
	"cmake-tools.debugger.external.snippet.label": "CMake: 外部",
	"cmake-tools.debugger.external.snippet.description": "連線到外部啟動的 CMake 調用",
	"cmake-tools.debugger.external.snippet.body.name": "CMake: 已從外部啟動",
	"cmake-tools.taskDefinitions.properties.label.description": "工作的名稱",
	"cmake-tools.taskDefinitions.properties.command.description": "CMake 命令",
	"cmake-tools.taskDefinitions.properties.targets.description": "CMake 組建目標",
	"cmake-tools.taskDefinitions.properties.preset.description": "CMake 預設名稱。這是根據 CMake 命令的設定、組建或測試預設",
	"cmake-tools.taskDefinitions.properties.options.description": "其他命令選項",
	"cmake-tools.taskDefinitions.properties.options.cwd.description": "所執行程式或指令碼的目前工作目錄。如果省略，則會使用 Code 的目前工作區根目錄。",
	"cmake-tools.taskDefinitions.properties.options.environment.markdownDescription": "環境變數的格式為 \"name\": \"value\"。",
	"cmake-tools.taskDefinitions.properties.details.description": "工作的其他詳細資料",
	"cmake-tools.configuration.cmake.launchBehavior.reuseTerminal.markdownDescriptions": "已重複使用啟動終端機執行個體，當終端機閒置時，目標就會立即啟動。",
	"cmake-tools.configuration.cmake.launchBehavior.breakAndReuseTerminal.markdownDescriptions": "已重複使用啟動終端機執行個體，並在啟動目標之前傳送 `break` 命令以終止任何使用中的前景進程。",
	"cmake-tools.configuration.cmake.launchBehavior.newTerminal.markdownDescriptions": "已建立新的終端機執行個體，並在其中啟動目標。不會自動清除現有的終端機。",
	"cmake-tools.configuration.cmake.loadCompileCommands.description": "控制延伸模組是否要讀取 compile_commands.json 以啟用單一檔案編譯。",
	"cmake-tools.command.cmake.projectStatus.update.title": "重新整理專案狀態",
	"cmake-tools.command.cmake.pinnedCommands.add.title": "新增要釘選的 CMake 命令",
	"cmake-tools.command.cmake.pinnedCommands.remove.title": "取消釘選命令",
	"cmake-tools.command.cmake.pinnedCommands.run.title": "執行命令",
	"cmake-tools.command.cmake.projectStatus.cleanConfigure.title": "刪除快取並重新設定",
	"cmake-tools.command.cmake.projectStatus.selectTestPreset.title": "設定測試目標",
	"cmake-tools.command.cmake.projectStatus.openVisibilitySettings.title": "開啟可見度設定",
	"cmake-tools.debugger.label": "CMake 偵錯工具",
	"cmake-tools.command.cmake.appendBuildDirectoryToWorkspace.title": "將組建目錄附加到目前工作區",
	"cmake-tools.command.workbench.action.tasks.configureTaskRunner.title": "設定工作",
	"cmake-tools.command.workbench.action.tasks.runTask.title": "執行工作"
}
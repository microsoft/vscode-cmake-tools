/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"assets/variables.json.ANDROID": "Impostare su 1 quando il sistema di destinazione (CMAKE_SYSTEM_NAME) è Android.",
	"assets/variables.json.APPLE": "Impostare su True quando il sistema di destinazione è una piattaforma Apple (macOS, iOS, tvOS, visionOS o watchOS).",
	"assets/variables.json.BORLAND": "È true se viene usato il compilatore Borland.",
	"assets/variables.json.BSD": "Impostare su un valore stringa quando il sistema di destinazione è BSD. Questo valore può essere uno dei valori seguenti: DragonFlyBSD, FreeBSD, OpenBSD o NetBSD.",
	"assets/variables.json.BUILD_SHARED_LIBS": "Indicare a add_library di usare le librerie SHARED per impostazione predefinita, anziché le librerie STATIC, quando vengono chiamate senza tipo di libreria esplicito.",
	"assets/variables.json.CACHE": "Operatore per la lettura delle variabili della cache.",
	"assets/variables.json.CMAKE_ABSOLUTE_DESTINATION_FILES": "Elenco dei file che sono stati installati usando un percorso di ABSOLUTE_DESTINATION.",
	"assets/variables.json.CMAKE_ADD_CUSTOM_COMMAND_DEPENDS_EXPLICIT_ONLY": "Indica se abilitare l'opzione DEPENDS_EXPLICIT_ONLY per impostazione predefinita in add_custom_command.",
	"assets/variables.json.CMAKE_ADSP_ROOT": "Quando :ref:`Cross Compiling for ADSP SHARC/Blackfin`, questa variabile contiene il percorso assoluto dell'ultima installazione di CCES o VDSP++. La directory deve contenere i compilatori cc21k.exe e ccblkfn.exe. Questa variabile verrà impostata automaticamente se è disponibile un'installazione predefinita di CCES o VDSP++.",
	"assets/variables.json.CMAKE_AIX_EXPORT_ALL_SYMBOLS": "Valore predefinito per la proprietà di destinazione AIX_EXPORT_ALL_SYMBOLS. Questa variabile viene usata per inizializzare la proprietà in ogni destinazione durante la creazione.",
	"assets/variables.json.CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS": "Valore predefinito per la proprietà di destinazione ANDROID_ANT_ADDITIONAL_OPTIONS. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_API": "Quando si esegue la compilazione incrociata per Android con NVIDIA Nsight Tegra Visual Studio Edition, questa variabile può essere impostata in modo da specificare il valore predefinito per la proprietà di destinazione ANDROID_API. Per altre informazioni, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_API_MIN": "Valore predefinito per la proprietà di destinazione ANDROID_API_MIN. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_ARCH": "Quando si esegue la compilazione incrociata per Android con NVIDIA Nsight Tegra Visual Studio Edition, questa variabile può essere impostata in modo da specificare il valore predefinito per la proprietà di destinazione ANDROID_ARCH. Per altre informazioni, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_ARCH_ABI": "Quando si esegue la compilazione incrociata per Android, questa variabile specifica l'architettura di destinazione e l'ABI da usare. I valori validi sono:",
	"assets/variables.json.CMAKE_ANDROID_ARM_MODE": "Quando si esegue la compilazione incrociata per Android e CMAKE_ANDROID_ARCH_ABI è impostato su una delle architetture armeabi, impostare CMAKE_ANDROID_ARM_MODE su ON in modo da definire come destinazione i processori ARM a 32 bit (-marm). In caso contrario, l'impostazione predefinita prevede che la destinazione siano i processori Thumb a 16 bit (-mthumb).",
	"assets/variables.json.CMAKE_ANDROID_ARM_NEON": "Quando si esegue la compilazione incrociata per Android e CMAKE_ANDROID_ARCH_ABI è impostato su armeabi-v7a, impostare CMAKE_ANDROID_ARM_NEON su ON in modo da definire come destinazione i dispositivi NEON ARM.",
	"assets/variables.json.CMAKE_ANDROID_ASSETS_DIRECTORIES": "Valore predefinito per la proprietà di destinazione ANDROID_ASSETS_DIRECTORIES. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_EXCEPTIONS": "Quando si esegue la compilazione incrociata per Android con NDK, questa variabile può essere impostata in modo da specificare se le eccezioni sono abilitate.",
	"assets/variables.json.CMAKE_ANDROID_GUI": "Valore predefinito per la proprietà di destinazione ANDROID_GUI degli eseguibili. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_JAR_DEPENDENCIES": "Valore predefinito per la proprietà di destinazione ANDROID_JAR_DEPENDENCIES. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_JAR_DIRECTORIES": "Valore predefinito per la proprietà di destinazione ANDROID_JAR_DIRECTORIES. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_JAVA_SOURCE_DIR": "Valore predefinito per la proprietà di destinazione ANDROID_JAVA_SOURCE_DIR. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_NATIVE_LIB_DEPENDENCIES": "Valore predefinito per la proprietà di destinazione ANDROID_NATIVE_LIB_DEPENDENCIES. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_NATIVE_LIB_DIRECTORIES": "Valore predefinito per la proprietà di destinazione ANDROID_NATIVE_LIB_DIRECTORIES. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_NDK": "Quando si esegue la compilazione incrociata per Android con NDK, questa variabile contiene il percorso assoluto della directory radice dell'NDK. La directory deve contenere una sottodirectory platforms che contiene le directory android-<api>.",
	"assets/variables.json.CMAKE_ANDROID_NDK_DEPRECATED_HEADERS": "Quando si esegue la compilazione incrociata per Android con NDK, questa variabile può essere impostata in modo da specificare se usare le intestazioni per livello API deprecate invece di quelle unificate.",
	"assets/variables.json.CMAKE_ANDROID_NDK_TOOLCHAIN_HOST_TAG": "Quando si esegue la compilazione incrociata per Android con NDK, questa variabile fornisce l'elemento \"host tag\" dell'NDK usato per costruire il percorso delle toolchain predefinite che vengono eseguite nell'host.",
	"assets/variables.json.CMAKE_ANDROID_NDK_TOOLCHAIN_VERSION": "Quando si esegue la compilazione incrociata per Android con NDK, questa variabile può essere impostata in modo da specificare la versione della toolchain da usare come compilatore.",
	"assets/variables.json.CMAKE_ANDROID_NDK_VERSION": "Quando si esegue la compilazione incrociata per Android con NDK e si usa Android NDK 11 o versione successiva, questa variabile viene fornita da CMake in modo da restituire il numero di versione dell'NDK.",
	"assets/variables.json.CMAKE_ANDROID_PROCESS_MAX": "Valore predefinito per la proprietà di destinazione ANDROID_PROCESS_MAX. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_PROGUARD": "Valore predefinito per la proprietà di destinazione ANDROID_PROGUARD. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_PROGUARD_CONFIG_PATH": "Valore predefinito per la proprietà di destinazione ANDROID_PROGUARD_CONFIG_PATH. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_RTTI": "Quando si esegue la compilazione incrociata per Android con NDK, questa variabile può essere impostata in modo da specificare se RTTI è abilitato.",
	"assets/variables.json.CMAKE_ANDROID_SECURE_PROPS_PATH": "Valore predefinito per la proprietà di destinazione ANDROID_SECURE_PROPS_PATH. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_SKIP_ANT_STEP": "Valore predefinito per la proprietà di destinazione ANDROID_SKIP_ANT_STEP. Per informazioni aggiuntive, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_ANDROID_STANDALONE_TOOLCHAIN": "Quando si esegue la compilazione incrociata per Android con una toolchain autonoma, questa variabile contiene il percorso assoluto della directory radice della toolchain. La directory specificata deve contenere una sottodirectory sysroot.",
	"assets/variables.json.CMAKE_ANDROID_STL_TYPE": "Quando si esegue la compilazione incrociata per Android con NVIDIA Nsight Tegra Visual Studio Edition, questa variabile può essere impostata in modo da specificare il valore predefinito per la proprietà di destinazione ANDROID_STL_TYPE. Per altre informazioni, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_APPBUNDLE_PATH": "Elenco di directory delimitate da punto e virgola che specificano un percorso di ricerca per i bundle di applicazioni macOS usati dai comandi find_program e find_package.",
	"assets/variables.json.CMAKE_APPLE_SILICON_PROCESSOR": "In host Apple Silicon che eseguono macOS, impostare questa variabile in modo da indicare a CMake l'architettura da usare per CMAKE_HOST_SYSTEM_PROCESSOR. Il valore deve essere arm64 o x86_64.",
	"assets/variables.json.CMAKE_AR": "Nome dello strumento di archiviazione per le librerie statiche.",
	"assets/variables.json.CMAKE_ARCHIVE_OUTPUT_DIRECTORY": "Indica la posizione in cui inserire i file di destinazione di ARCHIVE quando vengono compilati.",
	"assets/variables.json.CMAKE_ARCHIVE_OUTPUT_DIRECTORY_CONFIG": "Indica la posizione in cui inserire i file di destinazione di ARCHIVE quando vengono compilati per una configurazione specifica.",
	"assets/variables.json.CMAKE_ARGC": "Numero di argomenti della riga di comando passati a CMake nella modalità script.",
	"assets/variables.json.CMAKE_ARGV0": "Argomento della riga di comando passato a CMake nella modalità script.",
	"assets/variables.json.CMAKE_AUTOGEN_BETTER_GRAPH_MULTI_CONFIG": "Questa variabile viene usata per inizializzare la proprietà AUTOGEN_BETTER_GRAPH_MULTI_CONFIG su tutte le destinazioni durante la creazione. Per altre informazioni, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_AUTOGEN_COMMAND_LINE_LENGTH_MAX": "Limite di lunghezza della riga di comando per le destinazioni autogen, ad esempio moc o uic, che attiva l'uso di file di risposta in Windows invece di passare tutti gli argomenti alla riga di comando.",
	"assets/variables.json.CMAKE_AUTOGEN_ORIGIN_DEPENDS": "Opzione per inoltrare le dipendenze di destinazione dell'origine alle destinazioni <ORIGIN>_autogen corrispondenti.",
	"assets/variables.json.CMAKE_AUTOGEN_PARALLEL": "Numero di processi moc o uic paralleli da avviare quando si usa AUTOMOC e AUTOUIC.",
	"assets/variables.json.CMAKE_AUTOGEN_USE_SYSTEM_INCLUDE": "Questa variabile viene usata per inizializzare la proprietà AUTOGEN_USE_SYSTEM_INCLUDE su tutte le destinazioni durante la creazione. Per altre informazioni, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_AUTOGEN_VERBOSE": "Consente di impostare il livello di dettaglio di AUTOMOC, AUTOUIC e AUTORCC. Con un valore intero positivo oppure con un valore booleano true i generatori AUTO* visualizzeranno informazioni aggiuntive sull'elaborazione.",
	"assets/variables.json.CMAKE_AUTOMOC": "Indica se gestire automaticamente moc per le destinazioni Qt.",
	"assets/variables.json.CMAKE_AUTOMOC_COMPILER_PREDEFINES": "Questa variabile viene usata per inizializzare la proprietà AUTOMOC_COMPILER_PREDEFINES in tutte le destinazioni. Per altre informazioni, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_AUTOMOC_DEPEND_FILTERS": "Definizioni dei filtri usati da CMAKE_AUTOMOC per estrarre i nomi dei file dal codice sorgente come dipendenze aggiuntive per il file moc.",
	"assets/variables.json.CMAKE_AUTOMOC_EXECUTABLE": "Questa variabile viene usata per inizializzare la proprietà AUTOMOC_EXECUTABLE in tutte le destinazioni. Per altre informazioni, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_AUTOMOC_MACRO_NAMES": "Elenco di nomi di macro delimitati da punto e virgola usato da CMAKE_AUTOMOC per determinare se un file C++ deve essere elaborato da moc.",
	"assets/variables.json.CMAKE_AUTOMOC_MOC_OPTIONS": "Opzioni aggiuntive per moc quando si usa CMAKE_AUTOMOC.",
	"assets/variables.json.CMAKE_AUTOMOC_PATH_PREFIX": "Indica se generare l'opzione del prefisso di percorso -p per MOC nelle destinazioni Qt abilitate per AUTOMOC.",
	"assets/variables.json.CMAKE_AUTOMOC_RELAXED_MODE": "Consente di passare dalla modalità strict a quella relaxed di AUTOMOC e viceversa.",
	"assets/variables.json.CMAKE_AUTORCC": "Indica se gestire automaticamente rcc per le destinazioni Qt.",
	"assets/variables.json.CMAKE_AUTORCC_EXECUTABLE": "Questa variabile viene usata per inizializzare la proprietà AUTORCC_EXECUTABLE in tutte le destinazioni. Per altre informazioni, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_AUTORCC_OPTIONS": "Opzioni aggiuntive per rcc quando si usa CMAKE_AUTORCC.",
	"assets/variables.json.CMAKE_AUTOUIC": "Indica se gestire automaticamente uic per le destinazioni Qt.",
	"assets/variables.json.CMAKE_AUTOUIC_EXECUTABLE": "Questa variabile viene usata per inizializzare la proprietà AUTOUIC_EXECUTABLE in tutte le destinazioni. Per altre informazioni, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_AUTOUIC_OPTIONS": "Opzioni aggiuntive per uic quando si usa CMAKE_AUTOUIC.",
	"assets/variables.json.CMAKE_AUTOUIC_SEARCH_PATHS": "Elenco dei percorsi di ricerca usati da CMAKE_AUTOUIC per trovare i file con estensione ui inclusi.",
	"assets/variables.json.CMAKE_BACKWARDS_COMPATIBILITY": "Deprecato. Vedere la documentazione del criterio CMake CMP0001.",
	"assets/variables.json.CMAKE_BINARY_DIR": "Percorso del primo livello dell'albero di compilazione.",
	"assets/variables.json.CMAKE_BUILD_RPATH": "Elenco delimitato da punto e virgola con che specifica le voci del percorso di runtime (RPATH) da aggiungere ai file binari collegati nell'albero di compilazione (per le piattaforme che lo supportano). Le voci non verranno usate per i file binari nell'albero di installazione. Vedere anche la variabile CMAKE_INSTALL_RPATH.",
	"assets/variables.json.CMAKE_BUILD_RPATH_USE_ORIGIN": "Indica se usare i percorsi relativi per il percorso RPATH di compilazione.",
	"assets/variables.json.CMAKE_BUILD_TOOL": "Questa variabile esiste solo per la compatibilità con le versioni precedenti. Contiene lo stesso valore di CMAKE_MAKE_MAKE_PROGRAM. In alternativa, usare tale variabile.",
	"assets/variables.json.CMAKE_BUILD_TYPE": "Specifica il tipo di compilazione nei generatori a configurazione singola, ad esempio generatori Makefile o Ninja. I valori tipici includono Debug, Release, RelWithDebInfo e MinSizeRel, ma è anche possibile definire tipi di compilazione personalizzati.",
	"assets/variables.json.CMAKE_BUILD_WITH_INSTALL_NAME_DIR": "Indica se usare INSTALL_NAME_DIR su destinazioni nell'albero di compilazione.",
	"assets/variables.json.CMAKE_BUILD_WITH_INSTALL_RPATH": "Consente di usare il percorso di installazione per RPATH.",
	"assets/variables.json.CMAKE_CACHEFILE_DIR": "Questa variabile viene usata internamente da CMake e non può essere impostata durante la prima configurazione di un albero di compilazione. Quando è impostato, ha lo stesso valore di CMAKE_BINARY_DIR. Usare tale variabile.",
	"assets/variables.json.CMAKE_CACHE_MAJOR_VERSION": "Versione principale di CMake usata per creare il file CMakeCache.txt",
	"assets/variables.json.CMAKE_CACHE_MINOR_VERSION": "Versione secondaria di CMake usata per creare il file CMakeCache.txt",
	"assets/variables.json.CMAKE_CACHE_PATCH_VERSION": "Versione della patch di CMake usata per creare il file CMakeCache.txt",
	"assets/variables.json.CMAKE_CFG_INTDIR": "Riferimento in fase di compilazione per singola configurazione alla sottodirectory di output.",
	"assets/variables.json.CMAKE_CLANG_VFS_OVERLAY": "Quando si esegue la compilazione incrociata per Windows con Clang-cl, questa variabile può essere un percorso assoluto che punta a un file YAML del file system virtuale Clang e che consentirà a Clang-cl di risolvere i nomi delle intestazioni di Windows in un file system che fa distinzione tra maiuscole e minuscole.",
	"assets/variables.json.CMAKE_CL_64": "Sconsigliato. In alternativa, usare CMAKE_SIZEOF_VOID_P.",
	"assets/variables.json.CMAKE_CODEBLOCKS_COMPILER_ID": "Consente di modificare l'ID compilatore nei file generati del progetto CodeBlocks.",
	"assets/variables.json.CMAKE_CODEBLOCKS_EXCLUDE_EXTERNAL_FILES": "Consente di modificare il modo in cui il generatore CodeBlocks crea i file di progetto.",
	"assets/variables.json.CMAKE_CODELITE_USE_TARGETS": "Consente di modificare il modo in cui il generatore CodeLite crea i file di progetto.",
	"assets/variables.json.CMAKE_COLOR_DIAGNOSTICS": "Abilita la diagnostica a colori in tutto il progetto.",
	"assets/variables.json.CMAKE_COLOR_MAKEFILE": "Abilita l'output a colori quando si usano i generatori Makefile.",
	"assets/variables.json.CMAKE_COMMAND": "Percorso completo dell'eseguibile di CMake.",
	"assets/variables.json.CMAKE_COMPILER_2005": "Uso del compilatore di Visual Studio 2005 di Microsoft",
	"assets/variables.json.CMAKE_COMPILER_IS_GNUCC": "True se il compilatore C è GNU.",
	"assets/variables.json.CMAKE_COMPILER_IS_GNUCXX": "True se il compilatore C++ (CXX) è GNU.",
	"assets/variables.json.CMAKE_COMPILER_IS_GNUG77": "True se il compilatore Fortran è GNU.",
	"assets/variables.json.CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY": "Directory di output per i file PDB dei simboli di debug MS generati dal compilatore durante la compilazione dei file di origine.",
	"assets/variables.json.CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY_CONFIG": "Directory di output per singola configurazione relativa ai file PDB dei simboli di debug MS generati dal compilatore durante la compilazione dei file di origine.",
	"assets/variables.json.CMAKE_COMPILE_WARNING_AS_ERROR": "Specificare se considerare gli avvisi durante la compilazione come errori.",
	"assets/variables.json.CMAKE_CONFIGURATION_TYPES": "Specifica i tipi di compilazione disponibili (configurazioni) nei generatori a configurazione multipla, ad esempio Visual Studio, Xcode o Ninja Multi-Config., come elenco delimitato da punto e virgola. I valori tipici includono Debug, Release, RelWithDebInfo e MinSizeRel, ma è anche possibile definire tipi di compilazione personalizzati.",
	"assets/variables.json.CMAKE_CONFIG_POSTFIX": "Suffisso predefinito del nome file per le librerie nella configurazione <CONFIG>.",
	"assets/variables.json.CMAKE_CPACK_COMMAND": "Percorso completo del comando cpack installato con CMake.",
	"assets/variables.json.CMAKE_CROSSCOMPILING": "Questa variabile è impostata da CMake per indicare se si tratta di compilazione incrociata, ma tenere presente le limitazioni illustrate di seguito.",
	"assets/variables.json.CMAKE_CROSSCOMPILING_EMULATOR": "Questa variabile viene usata solo quando CMAKE_CROSSCOMPILING è attivo. Deve puntare a un comando nel sistema host in grado di eseguire l'eseguibile compilato per il sistema di destinazione.",
	"assets/variables.json.CMAKE_CROSS_CONFIGS": "Specifica un elenco di configurazioni delimitate da punto e virgola e disponibili da tutti i file build-<Config>.ninja nel generatore Multi-Config di Ninja. Questa variabile attiva la modalità di configurazione incrociata. Le destinazioni di ogni configurazione specificate in questa variabile possono essere compilate da qualsiasi file build-<Config>.ninja. Nei comandi personalizzati verrà usata la configurazione nativa di build-<Config>.ninja. Se è impostato su all, tutte le configurazioni di CMAKE_CONFIGURATION_TYPES sono incrociate. Se non viene specificato o è vuoto, ogni file build-<Config>.ninja conterrà solo le regole di compilazione per la propria configurazione.",
	"assets/variables.json.CMAKE_CTEST_ARGUMENTS": "Impostare questa opzione su un elenco di argomenti della riga di comando delimitati da punto e virgola da passare a CTest durante l'esecuzione dei test tramite la destinazione di test o RUN_TESTS del sistema di compilazione generato.",
	"assets/variables.json.CMAKE_CTEST_COMMAND": "Percorso completo del comando ctest installato con CMake.",
	"assets/variables.json.CMAKE_CUDA_ARCHITECTURES": "Valore predefinito per la proprietà CUDA_ARCHITECTURES delle destinazioni.",
	"assets/variables.json.CMAKE_CUDA_COMPILE_FEATURES": "Elenco delle funzionalità riconosciute dal compilatore CUDA",
	"assets/variables.json.CMAKE_CUDA_EXTENSIONS": "Valore predefinito per la proprietà di destinazione CUDA_EXTENSIONS se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_CUDA_HOST_COMPILER": "Nome originale specifico di CUDA per la variabile più generale CMAKE_<LANG>_HOST_COMPILER. Per informazioni dettagliate, vedere quest'ultimo elemento.",
	"assets/variables.json.CMAKE_CUDA_RESOLVE_DEVICE_SYMBOLS": "Valore predefinito per proprietà di destinazione CUDA_RESOLVE_DEVICE_SYMBOLS quando definito. Per impostazione predefinita, questa variabile non è definita.",
	"assets/variables.json.CMAKE_CUDA_RUNTIME_LIBRARY": "Consente di selezionare la libreria di runtime CUDA da usare per la compilazione e il collegamento di CUDA. Questa variabile viene usata per inizializzare la proprietà CUDA_RUNTIME_LIBRARY in tutte le destinazioni durante la creazione.",
	"assets/variables.json.CMAKE_CUDA_SEPARABLE_COMPILATION": "Valore predefinito per la proprietà di destinazione CUDA_SEPARABLE_COMPILATION. Questa variabile viene usata per inizializzare la proprietà in ogni destinazione durante la creazione.",
	"assets/variables.json.CMAKE_CUDA_STANDARD": "Valore predefinito per la proprietà di destinazione CUDA_STANDARD se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_CUDA_STANDARD_REQUIRED": "Valore predefinito per la proprietà di destinazione CUDA_STANDARD_REQUIRED se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES": "Se è stato abilitato il linguaggio CUDA, fornisce un elenco delle directory di inclusione delimitate da punto e virgola specificate dal toolkit CUDA. Il valore può essere utile per includere intestazioni CUDA nei file di origine C++.",
	"assets/variables.json.CMAKE_CURRENT_BINARY_DIR": "Percorso della directory dei file binari attualmente in fase di elaborazione.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION": "Quando si esegue il codice all'interno di una funzione, questa variabile contiene il nome della funzione corrente. Può essere utile per i messaggi di diagnostica o di debug.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION_LIST_DIR": "Quando si esegue il codice all'interno di una funzione, questa variabile contiene la directory completa del listfile che ha definito la funzione corrente.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION_LIST_FILE": "Quando si esegue il codice all'interno di una funzione, questa variabile contiene il percorso completo del listfile che ha definito la funzione corrente.",
	"assets/variables.json.CMAKE_CURRENT_FUNCTION_LIST_LINE": "Quando si esegue il codice all'interno di una funzione, questa variabile contiene il numero di riga nel listfile in cui è stata definita la funzione corrente.",
	"assets/variables.json.CMAKE_CURRENT_LIST_DIR": "Directory completa del listfile attualmente in fase di elaborazione.",
	"assets/variables.json.CMAKE_CURRENT_LIST_FILE": "Percorso completo del listfile attualmente in fase di elaborazione.",
	"assets/variables.json.CMAKE_CURRENT_LIST_LINE": "Numero di riga del file corrente in fase di elaborazione.",
	"assets/variables.json.CMAKE_CURRENT_SOURCE_DIR": "Percorso della directory di origine attualmente in fase di elaborazione.",
	"assets/variables.json.CMAKE_CXX_COMPILER_IMPORT_STD": "Elenco di livelli standard C++ per cui esiste il supporto std di importazione per la toolchain C++ corrente. È possibile rilevare il supporto per<NN> C++ usando un predicato di <NN> IN_LIST CMAKE_CXX_COMPILER_IMPORT_STD con il comando if.",
	"assets/variables.json.CMAKE_CXX_COMPILE_FEATURES": "Elenco delle funzionalità riconosciute dal compilatore C++",
	"assets/variables.json.CMAKE_CXX_EXTENSIONS": "Valore predefinito per la proprietà di destinazione CXX_EXTENSIONS se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_CXX_MODULE_STD": "Indica se aggiungere o meno le destinazioni dell'utilità come dipendenze alle destinazioni con almeno cxx_std_23.",
	"assets/variables.json.CMAKE_CXX_SCAN_FOR_MODULES": "Indica se analizzare i file di origine C++ per individuare le dipendenze del modulo.",
	"assets/variables.json.CMAKE_CXX_STANDARD": "Valore predefinito per la proprietà di destinazione CXX_STANDARD se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_CXX_STANDARD_REQUIRED": "Valore predefinito per la proprietà di destinazione CXX_STANDARD_REQUIRED se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_C_COMPILE_FEATURES": "Elenco delle funzionalità riconosciute dal compilatore C",
	"assets/variables.json.CMAKE_C_EXTENSIONS": "Valore predefinito per la proprietà di destinazione C_EXTENSIONS se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_C_STANDARD": "Valore predefinito per la proprietà di destinazione C_STANDARD se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_C_STANDARD_REQUIRED": "Valore predefinito per la proprietà di destinazione C_STANDARD_REQUIRED se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_DEBUG_POSTFIX": "Vedere la variabile CMAKE_<CONFIG>_POSTFIX.",
	"assets/variables.json.CMAKE_DEBUG_TARGET_PROPERTIES": "Abilita la traccia dell'output per le proprietà di destinazione.",
	"assets/variables.json.CMAKE_DEFAULT_BUILD_TYPE": "Specifica la configurazione da usare per impostazione predefinita in un file build.ninja nel generatore Multi-Config di Ninja. Se si specifica questa variabile, per impostazione predefinita build.ninja usa regole di compilazione di build-<Config>.ninja. Tutti i comandi personalizzati vengono eseguiti con questa configurazione. Se la variabile non è specificata, viene usato il primo elemento di CMAKE_CONFIGURATION_TYPES.",
	"assets/variables.json.CMAKE_DEFAULT_CONFIGS": "Specifica un elenco di configurazioni delimitate da punto e virgola da compilare per una destinazione in build.ninja, se non è specificato alcun suffisso :<Config> suffisso nel generatore Multi-Config di Ninja. Se è impostato su all, vengono usate tutte le configurazioni di CMAKE_CROSS_CONFIGS. Se non viene specificato, il valore predefinito è CMAKE_DEFAULT_BUILD_TYPE.",
	"assets/variables.json.CMAKE_DEPENDS_IN_PROJECT_ONLY": "Quando è impostato su TRUE in una directory, il sistema di compilazione prodotto dai generatori Makefile è configurato in modo da considerare solo le dipendenze dai file di origine presenti nella directory di origine o in quella dei file binari. Le modifiche apportate ai file di origine al di fuori di queste directory non comportano ricompilazioni.",
	"assets/variables.json.CMAKE_DEPENDS_USE_COMPILER": "Per una selezione di compilatori dei generatori makefile le dipendenze delle origini sono ora generate dal compilatore stesso. Definendo questa variabile con il valore FALSE, è possibile ripristinare il comportamento legacy, per usare, ad esempio, CMake per l'individuazione delle dipendenze.",
	"assets/variables.json.CMAKE_DIRECTORY_LABELS": "Consente di specificare le etichette per la directory corrente.",
	"assets/variables.json.CMAKE_DISABLE_FIND_PACKAGE_PackageName": "Variabile per disabilitare le chiamate di find_package.",
	"assets/variables.json.CMAKE_DISABLE_PRECOMPILE_HEADERS": "Valore predefinito per la proprietà DISABLE_PRECOMPILE_HEADERS delle destinazioni.",
	"assets/variables.json.CMAKE_DLL_NAME_WITH_SOVERSION": "Questa variabile viene usata per inizializzare la proprietà DLL_NAME_WITH_SOVERSION nelle destinazioni della libreria condivisa per la piattaforma Windows, selezionata quando è impostata la variabile WIN32.",
	"assets/variables.json.CMAKE_DL_LIBS": "Nome della libreria che contiene dlopen e dlclose.",
	"assets/variables.json.CMAKE_DOTNET_SDK": "Valore predefinito per proprietà delle destinazioni DOTNET_SDK.",
	"assets/variables.json.CMAKE_DOTNET_TARGET_FRAMEWORK": "Valore predefinito per la proprietà DOTNET_TARGET_FRAMEWORK delle destinazioni.",
	"assets/variables.json.CMAKE_DOTNET_TARGET_FRAMEWORK_VERSION": "Valore predefinito per la proprietà DOTNET_TARGET_FRAMEWORK_VERSION delle destinazioni.",
	"assets/variables.json.CMAKE_ECLIPSE_GENERATE_LINKED_RESOURCES": "Questa variabile di cache viene usata dal generatore di progetti Eclipse. Vedere cmake-generators.",
	"assets/variables.json.CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT": "Questa variabile di cache viene usata dal generatore di progetti Eclipse. Vedere cmake-generators.",
	"assets/variables.json.CMAKE_ECLIPSE_MAKE_ARGUMENTS": "Questa variabile di cache viene usata dal generatore di progetti Eclipse. Vedere cmake-generators.",
	"assets/variables.json.CMAKE_ECLIPSE_RESOURCE_ENCODING": "Questa variabile della cache indica al generatore di progetti Eclipse CDT4 di impostare la codifica della risorsa sul valore specificato nei file di progetto generati. Se non viene specificato alcun valore, non verrà impostata alcuna codifica.",
	"assets/variables.json.CMAKE_ECLIPSE_VERSION": "Questa variabile di cache viene usata dal generatore di progetti Eclipse. Vedere cmake-generators.",
	"assets/variables.json.CMAKE_EDIT_COMMAND": "Percorso completo di cmake-gui o ccmake. Definito solo per i generatori Makefile e Ninja quando non si usano generatori aggiuntivi.",
	"assets/variables.json.CMAKE_ENABLE_EXPORTS": "Consente di specificare se gli eseguibili esportano i simboli per i moduli caricabili.",
	"assets/variables.json.CMAKE_ERROR_DEPRECATED": "Indica se visualizzare errori per le funzionalità deprecate.",
	"assets/variables.json.CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION": "Chiede allo script cmake_install.cmake di segnalare un errore quando viene rilevato un file con INSTALL DESTINATION assoluto.",
	"assets/variables.json.CMAKE_EXECUTABLE_ENABLE_EXPORTS": "Consente di specificare se gli eseguibili esportano i simboli per i moduli caricabili.",
	"assets/variables.json.CMAKE_EXECUTABLE_SUFFIX": "Suffisso per gli eseguibili in questa piattaforma.",
	"assets/variables.json.CMAKE_EXECUTABLE_SUFFIX_LANG": "Suffisso da usare per la fine di un nome file eseguibile dell'architettura di destinazione del compilatore <LANG>, se disponibile.",
	"assets/variables.json.CMAKE_EXECUTE_PROCESS_COMMAND_ECHO": "Se questa variabile è impostata su STDERR, STDOUT o NONE, i comandi nelle chiamate a execute_process verranno stampate in stderr o stdout oppure non verranno stampate.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS": "Flag del linker da usare per creare gli eseguibili.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS_CONFIG": "Flag da usare quando si collega un eseguibile.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS_CONFIG_INIT": "Valore usato per inizializzare la voce della cache CMAKE_EXE_LINKER_FLAGS_ la prima volta che si configura un albero di compilazione. Questa variabile deve essere impostata da un file di toolchain. CMake può anteporre o accodare contenuto al valore a seconda dell'ambiente e della piattaforma di destinazione.",
	"assets/variables.json.CMAKE_EXE_LINKER_FLAGS_INIT": "Valore usato per inizializzare la voce della cache CMAKE_EXE_LINKER_FLAGS la prima volta che si configura un albero di compilazione. Questa variabile deve essere impostata da un file di toolchain. CMake può anteporre o accodare contenuto al valore a seconda dell'ambiente e della piattaforma di destinazione.",
	"assets/variables.json.CMAKE_EXPORT_COMPILE_COMMANDS": "Abilita/disabilita l'output dei comandi di compilazione durante la generazione.",
	"assets/variables.json.CMAKE_EXPORT_FIND_PACKAGE_NAME": "Inizializza il valore di EXPORT_FIND_PACKAGE_NAME.",
	"assets/variables.json.CMAKE_EXPORT_NO_PACKAGE_REGISTRY": "Disabilita il comando di esportazione quando CMP0090 non è impostato su NEW.",
	"assets/variables.json.CMAKE_EXPORT_PACKAGE_REGISTRY": "Abilita il comando di esportazione quando CMP0090 è impostato su NEW.",
	"assets/variables.json.CMAKE_EXTRA_GENERATOR": "Generatore aggiuntivo usato per compilare il progetto. Vedere cmake-generators.",
	"assets/variables.json.CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES": "Suffissi aggiuntivi per le librerie condivise.",
	"assets/variables.json.CMAKE_FIND_APPBUNDLE": "Questa variabile influisce sul il modo in cui i comandi find_* scelgono tra i bundle di applicazioni macOS e i componenti dei pacchetti di tipo UNIX.",
	"assets/variables.json.CMAKE_FIND_DEBUG_MODE": "Stampa informazioni aggiuntive sulle chiamate a find per i comandi seguenti di errore standard:",
	"assets/variables.json.CMAKE_FIND_FRAMEWORK": "Questa variabile influisce sul il modo in cui i comandi find_* scelgono tra i framework macOS e i componenti dei pacchetti di tipo UNIX.",
	"assets/variables.json.CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX": "Consente di specificare un <suffix> per indicare al comando find_library di cercare in una directory lib<suffix> prima di ogni directory lib che verrebbe normalmente inclusa nella ricerca.",
	"assets/variables.json.CMAKE_FIND_LIBRARY_PREFIXES": "Prefissi da anteporre quando si cercano le librerie.",
	"assets/variables.json.CMAKE_FIND_LIBRARY_SUFFIXES": "Suffissi da accodare quando si cercano le librerie.",
	"assets/variables.json.CMAKE_FIND_NO_INSTALL_PREFIX": "Esclude i valori delle variabili CMAKE_INSTALL_PREFIX e CMAKE_STAGING_PREFIX da CMAKE_SYSTEM_PREFIX_PATH. CMake aggiunge questi prefissi di destinazione del progetto a CMAKE_SYSTEM_PREFIX_PATH per impostazione predefinita allo scopo di supportare la compilazione di una serie di pacchetti dipendenti e di installarli in un prefisso comune. Impostare CMAKE_FIND_NO_INSTALL_PREFIX su TRUE per disattivare questo comportamento.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_NAME": "È definito dal comando find_package durante il caricamento di un modo di ricerca per registrare il nome del pacchetto specificato dal chiamante. Per informazioni dettagliate, vedere la documentazione del comando.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY": "Per impostazione predefinita, questa variabile non è impostata. Se non è impostata né CMAKE_FIND_USE_PACKAGE_REGISTRY né CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY, find_package() userà il registro dei pacchetti utente a meno che non venga specificata l'opzione NO_CMAKE_PACKAGE_REGISTRY.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY": "Per impostazione predefinita, questa variabile non è impostata. Se non è impostata né CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY né CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY, find_package() userà il registro dei pacchetti di sistema a meno che non venga specificata l'opzione NO_CMAKE_SYSTEM_PACKAGE_REGISTRY.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_PREFER_CONFIG": "Indica a find_package di provare la modalità \"Config\" prima della modalità \"Module\" se non è stata specificata alcuna modalità.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_REDIRECTS_DIR": "Questa variabile di sola lettura specifica una directory che il comando find_package controllerà prima di cercare altrove un modulo o un file di pacchetto di configurazione. Un file di pacchetto di configurazione in questa directory verrà sempre trovato a preferenza di qualsiasi altro file del modulo di ricerca o di pacchetto di configurazione.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS": "Impostare su TRUE per indicare alle chiamate a find_package di risolvere i collegamenti simbolici nel valore di <PackageName>_DIR.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_SORT_DIRECTION": "Direzione di ordinamento usata da CMAKE_FIND_PACKAGE_SORT_ORDER. Può assumere uno dei valori seguenti:",
	"assets/variables.json.CMAKE_FIND_PACKAGE_SORT_ORDER": "Ordine predefinito per l'ordinamento dei pacchetti trovati con find_package. Può assumere uno dei valori seguenti:",
	"assets/variables.json.CMAKE_FIND_PACKAGE_TARGETS_GLOBAL": "Se si imposta su TRUE, tutte le destinazioni IMPORTED individuate da find_package vengono promosse a un ambito GLOBAL.",
	"assets/variables.json.CMAKE_FIND_PACKAGE_WARN_NO_MODULE": "Indica a find_package di visualizzare un avviso se viene chiamato senza una modalità esplicita.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH": "Elenco di percorsi radice delimitati da punto e virgola da cercare nel filesystem.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_INCLUDE": "Questa variabile controlla se FIND_XXX usa CMAKE_FIND_ROOT_ROOT_PATH e CMAKE_SYSROOT.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_LIBRARY": "Questa variabile controlla se FIND_XXX usa CMAKE_FIND_ROOT_ROOT_PATH e CMAKE_SYSROOT.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_PACKAGE": "Questa variabile controlla se FIND_XXX usa CMAKE_FIND_ROOT_ROOT_PATH e CMAKE_SYSROOT.",
	"assets/variables.json.CMAKE_FIND_ROOT_PATH_MODE_PROGRAM": "Questa variabile controlla se FIND_XXX usa CMAKE_FIND_ROOT_ROOT_PATH e CMAKE_SYSROOT.",
	"assets/variables.json.CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH": "Controlla il comportamento predefinito dei comandi seguenti per determinare se cercare o meno nei percorsi forniti dalle variabili di ambiente specifiche di CMake:",
	"assets/variables.json.CMAKE_FIND_USE_CMAKE_PATH": "Controlla il comportamento predefinito dei comandi seguenti per determinare se cercare o meno nei percorsi forniti dalle variabili della cache specifiche di CMake:",
	"assets/variables.json.CMAKE_FIND_USE_CMAKE_SYSTEM_PATH": "Controlla il comportamento predefinito dei comandi seguenti per determinare se cercare o meno nei percorsi forniti dalle variabili CMake specifiche della piattaforma:",
	"assets/variables.json.CMAKE_FIND_USE_INSTALL_PREFIX": "Controlla il comportamento predefinito dei comandi seguenti per stabilire se cercare o no i percorsi delle variabili CMAKE_INSTALL_PREFIX e CMAKE_STAGING_PREFIX.",
	"assets/variables.json.CMAKE_FIND_USE_PACKAGE_REGISTRY": "Controlla il comportamento predefinito del comando find_package per determinare se cercare o meno nei percorsi forniti dal registro dei pacchetti utente.",
	"assets/variables.json.CMAKE_FIND_USE_PACKAGE_ROOT_PATH": "Controlla il comportamento predefinito dei comandi seguenti per determinare se cercare o meno nei percorsi forniti dalle variabili <PackageName>_ROOT:",
	"assets/variables.json.CMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH": "Controlla il comportamento predefinito dei comandi seguenti per determinare se cercare o meno nei percorsi forniti dalle variabili di ambiente di sistema standard:",
	"assets/variables.json.CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY": "Controlla la ricerca nel registro dei pacchetti di sistema tramite il comando find_package.",
	"assets/variables.json.CMAKE_FOLDER": "Consente di impostare il nome della cartella. Usarlo per organizzare le destinazioni in un IDE.",
	"assets/variables.json.CMAKE_Fortran_FORMAT": "Impostare su FIXED o FREE per indicare il layout di origine Fortran.",
	"assets/variables.json.CMAKE_Fortran_MODDIR_DEFAULT": "Directory di output predefinita del modulo Fortran.",
	"assets/variables.json.CMAKE_Fortran_MODDIR_FLAG": "Flag Fortran per la directory di output del modulo.",
	"assets/variables.json.CMAKE_Fortran_MODOUT_FLAG": "Flag Fortran per abilitare l'output del modulo.",
	"assets/variables.json.CMAKE_Fortran_MODULE_DIRECTORY": "Directory di output del modulo Fortran.",
	"assets/variables.json.CMAKE_Fortran_PREPROCESS": "Valore predefinito per la proprietà Fortran_PREPROCESS delle destinazioni.",
	"assets/variables.json.CMAKE_FRAMEWORK": "Valore predefinito per la proprietà FRAMEWORK delle destinazioni.",
	"assets/variables.json.CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_CONFIG": "Suffisso del nome file del framework predefinito nella configurazione <CONFIG> quando si usa un generatore di configurazioni multiple.",
	"assets/variables.json.CMAKE_FRAMEWORK_PATH": "Elenco di directory delimitate da punto e virgola che specificano un percorso di ricerca per i framework macOS usati dai comandi find_library, find_package, find_path e find_file.",
	"assets/variables.json.CMAKE_GENERATOR": "Generatore usato per compilare il progetto. Vedere cmake-generators.",
	"assets/variables.json.CMAKE_GENERATOR_INSTANCE": "Specifica di istanza specifica del generatore fornita dall'utente.",
	"assets/variables.json.CMAKE_GENERATOR_PLATFORM": "Specifica di piattaforma di destinazione specifica del generatore fornita dall'utente.",
	"assets/variables.json.CMAKE_GENERATOR_TOOLSET": "Specifica del set di strumenti del sistema di compilazione nativo fornita dall'utente.",
	"assets/variables.json.CMAKE_GHS_NO_SOURCE_GROUP_FILE": "Valore booleano ON/OFF per controllare se il file di progetto per una destinazione deve essere costituito da un unico file singolo oppure da più file. Per altri dettagli, vedere GHS_NO_SOURCE_GROUP_FILE.",
	"assets/variables.json.CMAKE_GLOBAL_AUTOGEN_TARGET": "Opzione per abilitare la generazione di una destinazione autogen globale.",
	"assets/variables.json.CMAKE_GLOBAL_AUTOGEN_TARGET_NAME": "Modifica il nome della destinazione autogen globale.",
	"assets/variables.json.CMAKE_GLOBAL_AUTORCC_TARGET": "Opzione per abilitare la generazione di una destinazione autorcc globale.",
	"assets/variables.json.CMAKE_GLOBAL_AUTORCC_TARGET_NAME": "Modifica il nome della destinazione autorcc globale.",
	"assets/variables.json.CMAKE_GNUtoMS": "Converte le librerie di importazione GNU (estensione dll.a) in formato MS (estensione lib).",
	"assets/variables.json.CMAKE_HIP_ARCHITECTURES": "Elenco di architetture GPU per cui generare il codice del dispositivo. I nomi dell'architettura vengono interpretati in base a CMAKE_HIP_PLATFORM.",
	"assets/variables.json.CMAKE_HIP_COMPILE_FEATURES": "Elenco delle funzionalità riconosciute dal compilatore HIP",
	"assets/variables.json.CMAKE_HIP_EXTENSIONS": "Valore predefinito per la proprietà di destinazione HIP_EXTENSIONS se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_HIP_PLATFORM": "Piattaforma GPU per cui devono essere compilate le origini del linguaggio HIP.",
	"assets/variables.json.CMAKE_HIP_STANDARD": "Valore predefinito per la proprietà di destinazione HIP_STANDARD se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_HIP_STANDARD_REQUIRED": "Valore predefinito per la proprietà di destinazione HIP_STANDARD_REQUIRED se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_HOME_DIRECTORY": "Percorso del primo livello dell'albero di origine. Uguale a CMAKE_SOURCE_DIR.",
	"assets/variables.json.CMAKE_HOST_APPLE": "È true per i sistemi operativi Apple macOS.",
	"assets/variables.json.CMAKE_HOST_BSD": "Impostare su un valore stringa quando il sistema host è BSD. Questo valore può essere uno dei valori seguenti: DragonFlyBSD, FreeBSD, OpenBSD o NetBSD.",
	"assets/variables.json.CMAKE_HOST_LINUX": "Impostare su true quando il sistema host è Linux.",
	"assets/variables.json.CMAKE_HOST_SOLARIS": "È true per i sistemi operativi Oracle Solaris.",
	"assets/variables.json.CMAKE_HOST_SYSTEM": "Nome composito del sistema operativo in cui viene eseguito CMake.",
	"assets/variables.json.CMAKE_HOST_SYSTEM_NAME": "Nome del sistema operativo in cui viene eseguito CMake.",
	"assets/variables.json.CMAKE_HOST_SYSTEM_PROCESSOR": "Nome della CPU in cui viene eseguito CMake.",
	"assets/variables.json.CMAKE_HOST_SYSTEM_VERSION": "Versione del sistema operativo in cui viene eseguito CMake.",
	"assets/variables.json.CMAKE_HOST_UNIX": "È true per i sistemi operativi UNIX e simili a UNIX.",
	"assets/variables.json.CMAKE_HOST_WIN32": "È true se il sistema host esegue Windows, incluso Windows a 64 bit e MSYS.",
	"assets/variables.json.CMAKE_IGNORE_PATH": "Elenco di directory delimitato da punto e virgola da ignorare da parte delle varie operazioni di ricerca... () comandi.",
	"assets/variables.json.CMAKE_IGNORE_PREFIX_PATH": "Elenco di prefissi di ricerca delimitati da punto e virgola che devono essere ignorati dai comandi find_program, find_library, find_file e find_path. I prefissi vengono ignorati anche dalla modalità Config del comando find_package (la modalità modulo non è interessata). Per ignorare directory specifiche, vedere CMAKE_IGNORE_NONPREFIX_VAR.",
	"assets/variables.json.CMAKE_IMPORT_LIBRARY_PREFIX": "Prefisso per le librerie di importazione a cui collegarsi.",
	"assets/variables.json.CMAKE_IMPORT_LIBRARY_SUFFIX": "Suffisso per le librerie di importazione a cui collegarsi.",
	"assets/variables.json.CMAKE_INCLUDE_CURRENT_DIR": "Aggiunge automaticamente la directory di origine e di compilazione correnti al percorso di inclusione.",
	"assets/variables.json.CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE": "Aggiunge automaticamente la directory di origine e di compilazione correnti alla proprietà di destinazione INTERFACE_INCLUDE_DIRECTORIES.",
	"assets/variables.json.CMAKE_INCLUDE_DIRECTORIES_BEFORE": "Indica se accodare o anteporre le directory per impostazione predefinita in include_directories.",
	"assets/variables.json.CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE": "Indica se forzare l'aggiunta all'inizio delle directory di inclusione del progetto.",
	"assets/variables.json.CMAKE_INCLUDE_PATH": "Elenco di directory delimitate da punto e virgola che specificano un percorso di ricerca per i comandi find_file e find_path. Per impostazione predefinita, è vuoto e deve essere impostato dal progetto.",
	"assets/variables.json.CMAKE_INSTALL_DEFAULT_COMPONENT_NAME": "Componente predefinito usato nei comandi install.",
	"assets/variables.json.CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS": "Autorizzazioni predefinite per le directory create in modo implicito durante l'installazione di file tramite install e file.",
	"assets/variables.json.CMAKE_INSTALL_MESSAGE": "Consente di specificare il livello di dettaglio del codice dello script di installazione generato dal comando install (usando il comando file). Per i percorsi che sono stati appena installati o aggiornati, dopo l'installazione possono essere visualizzati messaggi simili ai seguenti:",
	"assets/variables.json.CMAKE_INSTALL_NAME_DIR": "Nome della directory per le destinazioni installate nelle piattaforme Apple.",
	"assets/variables.json.CMAKE_INSTALL_PREFIX": "Directory di installazione usata da install.",
	"assets/variables.json.CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT": "CMake imposta questa variabile su un valore TRUE quando CMAKE_INSTALL_PREFIX è stato appena inizializzato con il valore predefinito, in genere alla prima esecuzione di CMake in un nuovo albero di compilazione e la variabile di ambiente CMAKE_INSTALL_PREFIX non è impostata nella prima esecuzione di CMake. Può essere usato dal codice del progetto per modificare l'impostazione predefinita senza eseguire l'override di un valore specificato dall'utente:",
	"assets/variables.json.CMAKE_INSTALL_REMOVE_ENVIRONMENT_RPATH": "Imposta il valore predefinito per determinare se gli RPATH definiti dalla toolchain devono essere rimossi durante l'installazione.",
	"assets/variables.json.CMAKE_INSTALL_RPATH": "rpath da usare per le destinazioni installate.",
	"assets/variables.json.CMAKE_INSTALL_RPATH_USE_LINK_PATH": "Consente di aggiungere percorsi all'rpath installato e di ricerca linker.",
	"assets/variables.json.CMAKE_INTERNAL_PLATFORM_ABI": "Variabile interna soggetta a modifiche.",
	"assets/variables.json.CMAKE_INTERPROCEDURAL_OPTIMIZATION": "Valore predefinito per la proprietà INTERPROCEDURAL_OPTIMIZATION delle destinazioni.",
	"assets/variables.json.CMAKE_INTERPROCEDURAL_OPTIMIZATION_CONFIG": "Valore predefinito per la proprietà INTERPROCEDURAL_OPTIMIZATION_ delle destinazioni.",
	"assets/variables.json.CMAKE_IOS_INSTALL_COMBINED": "Valore predefinito per la proprietà IOS_INSTALL_COMBINED delle destinazioni.",
	"assets/variables.json.CMAKE_ISPC_HEADER_DIRECTORY": "Directory di output delle intestazioni generate da ISPC.",
	"assets/variables.json.CMAKE_ISPC_HEADER_SUFFIX": "Suffisso di output da usare per le intestazioni generate da ISPC.",
	"assets/variables.json.CMAKE_ISPC_INSTRUCTION_SETS": "Valore predefinito per la proprietà ISPC_INSTRUCTION_SETS delle destinazioni.",
	"assets/variables.json.CMAKE_JOB_POOLS": "Se la proprietà globale JOB_POOLS non è impostata, in sostituzione viene usato il valore di questa variabile. Per altre informazioni, vedere JOB_POOLS.",
	"assets/variables.json.CMAKE_JOB_POOL_COMPILE": "Questa variabile viene usata per inizializzare la proprietà JOB_POOL_COMPILE in tutte le destinazioni. Per altre informazioni, vedere JOB_POOL_COMPILE.",
	"assets/variables.json.CMAKE_JOB_POOL_LINK": "Questa variabile viene usata per inizializzare la proprietà JOB_POOL_LINK in tutte le destinazioni. Per altre informazioni, vedere JOB_POOL_LINK.",
	"assets/variables.json.CMAKE_JOB_POOL_PRECOMPILE_HEADER": "Questa variabile viene usata per inizializzare la proprietà JOB_POOL_PRECOMPILE_HEADER in tutte le destinazioni. Per altre informazioni, vedere JOB_POOL_PRECOMPILE_HEADER.",
	"assets/variables.json.CMAKE_KATE_FILES_MODE": "Questa variabile della cache viene usata dal generatore di progetti Kate e controlla la modalità in cui verrà impostata la voce dei file nel file di progetto. Vedere cmake-generators.",
	"assets/variables.json.CMAKE_KATE_MAKE_ARGUMENTS": "Questa variabile di cache viene usata dal generatore di progetti Kate. Vedere cmake-generators.",
	"assets/variables.json.CMAKE_LANG_ANDROID_TOOLCHAIN_MACHINE": "Quando si esegue la compilazione incrociata per Android, questa variabile contiene il nome del computer binutils della toolchain (ad esempio gcc -dumpmachine). Nel nome dei binutils è in genere presente un prefisso <machine>.",
	"assets/variables.json.CMAKE_LANG_ANDROID_TOOLCHAIN_PREFIX": "Quando si esegue la compilazione incrociata per Android, questa variabile contiene il percorso assoluto usato come prefisso nel compilatore GNU della toolchain e nei relativi binutils.",
	"assets/variables.json.CMAKE_LANG_ANDROID_TOOLCHAIN_SUFFIX": "Quando si esegue la compilazione incrociata per Android, questa variabile contiene il suffisso della piattaforma host del compilatore GNU della toolchain e dei relativi binutils.",
	"assets/variables.json.CMAKE_LANG_ARCHIVE_APPEND": "Variabile di regola da accodare a un archivio statico.",
	"assets/variables.json.CMAKE_LANG_ARCHIVE_CREATE": "Variabile di regola per creare un nuovo archivio statico.",
	"assets/variables.json.CMAKE_LANG_ARCHIVE_FINISH": "Variabile di regola per terminare un archivio statico esistente.",
	"assets/variables.json.CMAKE_LANG_BYTE_ORDER": "Ordine dei byte dell'architettura di destinazione del compilatore <LANG>, se noto. Se definito e non vuoto, il valore è uno dei seguenti:",
	"assets/variables.json.CMAKE_LANG_CLANG_TIDY": "Valore predefinito per la proprietà di destinazione <LANG>_CLANG_TIDY in cui <LANG> è C, CXX, OBJC o OBJCXX.",
	"assets/variables.json.CMAKE_LANG_CLANG_TIDY_EXPORT_FIXES_DIR": "Valore predefinito per la proprietà di destinazione <LANG>_CLANG_TIDY_EXPORT_FIXES_DIR in cui <LANG> è C, CXX, OBJC o OBJCXX.",
	"assets/variables.json.CMAKE_LANG_COMPILER": "Percorso completo del compilatore per LANG.",
	"assets/variables.json.CMAKE_LANG_COMPILER_ABI": "Variabile interna soggetta a modifiche.",
	"assets/variables.json.CMAKE_LANG_COMPILER_AR": "Wrapper di ar che aggiunge l'opzione --plugin appropriata per il compilatore.",
	"assets/variables.json.CMAKE_LANG_COMPILER_ARCHITECTURE_ID": "Variabile interna soggetta a modifiche.",
	"assets/variables.json.CMAKE_LANG_COMPILER_EXTERNAL_TOOLCHAIN": "Toolchain esterna per la compilazione incrociata, se supportata.",
	"assets/variables.json.CMAKE_LANG_COMPILER_FRONTEND_VARIANT": "Stringa di identificazione della variante front-end del compilatore.",
	"assets/variables.json.CMAKE_LANG_COMPILER_ID": "Stringa di identificazione del compilatore.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LAUNCHER": "Valore predefinito per la proprietà di destinazione <LANG>_COMPILER_LAUNCHER. Questa variabile viene usata per inizializzare la proprietà in ogni destinazione durante la creazione. Questa operazione viene eseguita solo quando <LANG> è C, CXX, Fortran, HIP, ISPC, OBJC, OBJCXX o CUDA.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER": "Percorso completo del linker per LANG.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER_FRONTEND_VARIANT": "Stringa di identificazione della variante front-end del linker.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER_ID": "Stringa di identificazione del linker.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LINKER_VERSION": "Stringa di versione del linker.",
	"assets/variables.json.CMAKE_LANG_COMPILER_LOADED": "Viene impostato su true se il linguaggio è abilitato.",
	"assets/variables.json.CMAKE_LANG_COMPILER_PREDEFINES_COMMAND": "Comando che restituisce come output le definizioni preliminari del compilatore.",
	"assets/variables.json.CMAKE_LANG_COMPILER_RANLIB": "Wrapper di ranlib che aggiunge l'opzione --plugin appropriata per il compilatore.",
	"assets/variables.json.CMAKE_LANG_COMPILER_TARGET": "Destinazione per la compilazione incrociata, se supportata.",
	"assets/variables.json.CMAKE_LANG_COMPILER_VERSION": "Stringa di versione del compilatore.",
	"assets/variables.json.CMAKE_LANG_COMPILER_VERSION_INTERNAL": "Variabile interna soggetta a modifiche.",
	"assets/variables.json.CMAKE_LANG_COMPILE_OBJECT": "Variabile di regola per compilare un singolo file oggetto.",
	"assets/variables.json.CMAKE_LANG_CPPCHECK": "Valore predefinito per la proprietà di destinazione <LANG>_CPPCHECK. Questa variabile viene usata per inizializzare la proprietà in ogni destinazione durante la creazione. Questa operazione viene eseguita solo quando <LANG> è C o CXX.",
	"assets/variables.json.CMAKE_LANG_CPPLINT": "Valore predefinito per la proprietà di destinazione <LANG>_CPPLINT. Questa variabile viene usata per inizializzare la proprietà in ogni destinazione durante la creazione. Questa operazione viene eseguita solo quando <LANG> è C o CXX.",
	"assets/variables.json.CMAKE_LANG_CREATE_SHARED_LIBRARY": "Variabile di regola per creare una libreria condivisa.",
	"assets/variables.json.CMAKE_LANG_CREATE_SHARED_MODULE": "Variabile di regola per creare un modulo condiviso.",
	"assets/variables.json.CMAKE_LANG_CREATE_STATIC_LIBRARY": "Variabile di regola per creare una libreria statica.",
	"assets/variables.json.CMAKE_LANG_EXTENSIONS": "Le varianti sono:",
	"assets/variables.json.CMAKE_LANG_EXTENSIONS_DEFAULT": "Modalità estensioni predefinita del compilatore. Usata come impostazione predefinita per la proprietà di destinazione <LANG>_EXTENSIONS quando non è impostato CMAKE_<LANG>_EXTENSIONS (vedere CMP0128).",
	"assets/variables.json.CMAKE_LANG_FLAGS": "I flag a livello di lingua per il linguaggio <LANG> usati per la compilazione per tutte le configurazioni. Questi flag verranno passati a tutte le chiamate del compilatore. Sono incluse le chiamate che compilano l'unità e quelle che collegano l'unità.",
	"assets/variables.json.CMAKE_LANG_FLAGS_CONFIG": "Flag a livello di lingua per il linguaggio <LANG> usato quando si esegue la compilazione per la configurazione <CONFIG>. Questi flag verranno passati a tutte le chiamate del compilatore nella configurazione corrispondente. Sono incluse le chiamate che compilano l'unità e quelle che collegano l'unità.",
	"assets/variables.json.CMAKE_LANG_FLAGS_CONFIG_INIT": "Valore usato per inizializzare la voce della cache CMAKE_<LANG>_FLAGS_ la prima volta che si configura un albero di compilazione per il linguaggio <LANG>. Questa variabile deve essere impostata da un file di toolchain. CMake può anteporre o accodare contenuto al valore a seconda dell'ambiente e della piattaforma di destinazione.",
	"assets/variables.json.CMAKE_LANG_FLAGS_DEBUG": "Questa variabile è la variante Debug della variabile CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_DEBUG_INIT": "Questa variabile è la variante Debug della variabile CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_FLAGS_INIT": "Valore usato per inizializzare la voce della cache CMAKE_<LANG>_FLAGS la prima volta che si configura un albero di compilazione per il linguaggio <LANG>. Questa variabile deve essere impostata da un file della toolchain. CMake può anteporre o accodare contenuto al valore in base all'ambiente e alla piattaforma di destinazione. Ad esempio, verrà anteposto il contenuto di una variabile di ambiente xxxFLAGS, dove xxx sarà un linguaggio specifico, ma non necessariamente uguale a <LANG>, ad esempio CXXFLAGS per CXX, FFLAGS per FORTRAN e così via. Questo valore è un frammento di stringa della riga di comando, di conseguenza se sono presenti più opzioni è necessario delimitarle con spazi, mentre le opzioni che contengono spazi devono essere racchiuse tra virgolette.",
	"assets/variables.json.CMAKE_LANG_FLAGS_MINSIZEREL": "Questa variabile è la variante MinSizeRel della variabile CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_MINSIZEREL_INIT": "Questa variabile è la variante MinSizeRel della variabile CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELEASE": "Questa variabile è la variante Release della variabile CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELEASE_INIT": "Questa variabile è la variante Release della variabile CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELWITHDEBINFO": "Questa variabile è la variante RelWithDebInfo della variabile CMAKE_<LANG>_FLAGS_.",
	"assets/variables.json.CMAKE_LANG_FLAGS_RELWITHDEBINFO_INIT": "Questa variabile è la variante RelWithDebInfo della variabile CMAKE_<LANG>_FLAGS_<CONFIG>_INIT.",
	"assets/variables.json.CMAKE_LANG_HOST_COMPILER": "Questa variabile è disponibile quando <LANG> è CUDA o HIP.",
	"assets/variables.json.CMAKE_LANG_IGNORE_EXTENSIONS": "Estensioni di file che devono essere ignorate dalla compilazione.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_INCLUDE_DIRECTORIES": "Directory in cui il compilatore cerca in modo implicito i file di intestazione.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_LINK_DIRECTORIES": "Percorso di ricerca del linker implicito rilevato per il linguaggio <LANG>.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES": "Percorso di ricerca del framework del linker implicito rilevato per il linguaggio <LANG>.",
	"assets/variables.json.CMAKE_LANG_IMPLICIT_LINK_LIBRARIES": "Flag e librerie di collegamenti impliciti rilevati per il linguaggio <LANG>.",
	"assets/variables.json.CMAKE_LANG_INCLUDE_WHAT_YOU_USE": "Valore predefinito per la proprietà di destinazione <LANG>_INCLUDE_WHAT_YOU_USE. Questa variabile viene usata per inizializzare la proprietà in ogni destinazione durante la creazione. Questa operazione viene eseguita solo quando <LANG> è C o CXX.",
	"assets/variables.json.CMAKE_LANG_LIBRARY_ARCHITECTURE": "Nome della directory delle librerie dell'architettura di destinazione rilevata per <LANG>.",
	"assets/variables.json.CMAKE_LANG_LINKER_LAUNCHER": "Valore predefinito per la proprietà di destinazione <LANG>_LINKER_LAUNCHER. Questa variabile viene usata per inizializzare la proprietà in ogni destinazione durante la creazione. Questa operazione viene eseguita solo quando <LANG> è C, CXX, OBJC, o OBJCXX.",
	"assets/variables.json.CMAKE_LANG_LINKER_PREFERENCE": "Variabile interna soggetta a modifiche.",
	"assets/variables.json.CMAKE_LANG_LINKER_PREFERENCE_PROPAGATES": "Variabile interna soggetta a modifiche.",
	"assets/variables.json.CMAKE_LANG_LINKER_WRAPPER_FLAG": "Definisce la sintassi dell'opzione driver del compilatore per passare le opzioni allo strumento linker. Verrà usato per convertire il prefisso LINKER: nelle opzioni di link (vedere add_link_options e target_link_options).",
	"assets/variables.json.CMAKE_LANG_LINKER_WRAPPER_FLAG_SEP": "Questa variabile viene usata con la variabile CMAKE_<LANG>_LINKER_WRAPPER_FLAG per formattare il prefisso LINKER: nelle opzioni di link (vedere add_link_options e target_link_options).",
	"assets/variables.json.CMAKE_LANG_LINK_EXECUTABLE": "Variabile di regola per collegare un eseguibile.",
	"assets/variables.json.CMAKE_LANG_LINK_GROUP_USING_FEATURE": "Questa variabile definisce la modalità di collegamento di un gruppo di librerie per l'oggetto <FEATURE> specificato quando viene usata un'espressione del generatore LINK_GROUP e il linguaggio di collegamento per la destinazione è <LANG>. Affinché questa variabile abbia effetto, la variabile CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>_SUPPORTED associata deve essere impostata su true.",
	"assets/variables.json.CMAKE_LANG_LINK_GROUP_USING_FEATURE_SUPPORTED": "Questa variabile specifica se l'oggetto <FEATURE> è supportato per il linguaggio del collegamento <LANG>. Se la variabile è true, <FEATURE> deve essere definito da CMAKE_<LANG>_LINK_GROUP_USING_ e le variabili più generiche CMAKE_LINK_GROUP_USING_<FEATURE>_SUPPORTED e CMAKE_LINK_GROUP_USING_ non vengono usate.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_FEATURE_ATTRIBUTES": "Questa variabile definisce la semantica libreria di link <FEATURE> specificata durante il collegamento alla lingua del link <LANG>. Ha la precedenza su CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES se anche tale variabile è definita per la stessa <FEATURE>, altrimenti ha effetti simili. Per ulteriori informazioni, vedere CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_FILE_FLAG": "Flag specifico del linguaggio da usare per collegare una libreria specificata da un percorso al relativo file.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_FLAG": "Flag da usare per collegare una libreria in una libreria condivisa o in un eseguibile.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_SUFFIX": "Suffisso specifico del linguaggio per le librerie a cui collegarsi.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_USING_FEATURE": "Questa variabile definisce la modalità di collegamento di una libreria o di un framework per l'oggetto <FEATURE> specificato quando viene usata un'espressione del generatore LINK_LIBRARY e il linguaggio di collegamento per la destinazione è <LANG>. Affinché questa variabile abbia effetto, la variabile CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED associata deve essere impostata su true.",
	"assets/variables.json.CMAKE_LANG_LINK_LIBRARY_USING_FEATURE_SUPPORTED": "Impostare su TRUE se <FEATURE>, come definito dalla variabile CMAKE_<LANG>_LINK_LIBRARY_USING_, è supportato per il linguaggio del linker <LANG>.",
	"assets/variables.json.CMAKE_LANG_LINK_WHAT_YOU_USE_FLAG": "Flag del linker da usare per configurare il linker in modo che tutte le librerie specificate nella riga di comando vengano collegate alla destinazione.",
	"assets/variables.json.CMAKE_LANG_OUTPUT_EXTENSION": "Estensione per l'output di una compilazione per un singolo file.",
	"assets/variables.json.CMAKE_LANG_PLATFORM_ID": "Variabile interna soggetta a modifiche.",
	"assets/variables.json.CMAKE_LANG_SIMULATE_ID": "Stringa di identificazione del compilatore \"simulato\".",
	"assets/variables.json.CMAKE_LANG_SIMULATE_VERSION": "Stringa di versione del compilatore \"simulato\".",
	"assets/variables.json.CMAKE_LANG_SIZEOF_DATA_PTR": "Dimensione dei tipi di puntatore ai dati per il linguaggi <LANG>.",
	"assets/variables.json.CMAKE_LANG_SOURCE_FILE_EXTENSIONS": "Estensioni dei file di origine per il linguaggio specificato.",
	"assets/variables.json.CMAKE_LANG_STANDARD": "Le varianti sono:",
	"assets/variables.json.CMAKE_LANG_STANDARD_DEFAULT": "Standard predefinito del compilatore per il linguaggio <LANG>. Vuoto se il compilatore non prevede livelli standard.",
	"assets/variables.json.CMAKE_LANG_STANDARD_INCLUDE_DIRECTORIES": "Directory di inclusione da usare per ogni file di origine compilato con il compilatore <LANG>. Viene usato per la specifica delle directory di inclusione di sistema richieste dal linguaggio per la piattaforma corrente. Le directory vengono sempre inserite alla fine del percorso di inclusione passato al compilatore.",
	"assets/variables.json.CMAKE_LANG_STANDARD_LATEST": "Questa variabile rappresenta il valore minimo tra l'ultima versione dello standard per la lingua <LANG> supportato dal compilatore corrente e l'ultima versione supportata da CMake. Il suo valore verrà impostato su uno dei valori supportati della proprietà di destinazione <LANG>_STANDARD corrispondente; vedere la documentazione di tale proprietà per un elenco di lingue supportate.",
	"assets/variables.json.CMAKE_LANG_STANDARD_LIBRARIES": "Librerie collegate in ogni libreria eseguibile e condivisa collegata per il linguaggio <LANG>. Viene usato per la specifica delle librerie di sistema richieste dal linguaggio per la piattaforma corrente.",
	"assets/variables.json.CMAKE_LANG_STANDARD_REQUIRED": "Le varianti sono:",
	"assets/variables.json.CMAKE_LANG_USING_LINKER_MODE": "Questo controlla come deve essere interpretato il valore della variabile CMAKE_<LANG>_USING_LINKER_. I valori della modalità linker supportati sono:",
	"assets/variables.json.CMAKE_LANG_USING_LINKER_TYPE": "Questa variabile definisce come specificare il linker <TYPE> per il passaggio di collegamento, come controllato dalla variabile di CMAKE_LINKER_TYPE o dalla proprietà di destinazione LINKER_TYPE. A seconda del valore della variabile CMAKE_<LANG>_USING_LINKER_MODE, CMAKE_<LANG>_USING_LINKER_<TYPE> può contenere i flag del compilatore per il passaggio del collegamento o i flag da fornire direttamente allo strumento linker.",
	"assets/variables.json.CMAKE_LANG_VISIBILITY_PRESET": "Valore predefinito per la proprietà di destinazione <LANG>_VISIBILITY_PRESET quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_LIBRARY_ARCHITECTURE": "Nome della directory delle librerie dell'architettura di destinazione, se rilevato.",
	"assets/variables.json.CMAKE_LIBRARY_ARCHITECTURE_REGEX": "Espressione regolare corrispondente ai possibili nomi di directory delle librerie dell'architettura di destinazione.",
	"assets/variables.json.CMAKE_LIBRARY_OUTPUT_DIRECTORY": "Indica la posizione in cui inserire i file di destinazione di LIBRARY quando vengono compilati.",
	"assets/variables.json.CMAKE_LIBRARY_OUTPUT_DIRECTORY_CONFIG": "Indica la posizione in cui inserire i file di destinazione di LIBRARY quando vengono compilati per una configurazione specifica.",
	"assets/variables.json.CMAKE_LIBRARY_PATH": "Elenco di directory delimitate da punto e virgola che specificano un percorso di ricerca per il comando find_library. Per impostazione predefinita, è vuoto e deve essere impostato dal progetto.",
	"assets/variables.json.CMAKE_LIBRARY_PATH_FLAG": "Flag da usare per aggiungere un percorso di ricerca della libreria a un compilatore.",
	"assets/variables.json.CMAKE_LINKER_TYPE": "Specificare il linker da usare per il passaggio del collegamento.",
	"assets/variables.json.CMAKE_LINK_DEF_FILE_FLAG": "Flag del linker da usare per specificare un file con estensione def per la creazione di DLL.",
	"assets/variables.json.CMAKE_LINK_DEPENDS_NO_SHARED": "Indica se ignorare le dipendenze dei collegamenti nei file di libreria condivisi.",
	"assets/variables.json.CMAKE_LINK_DEPENDS_USE_LINKER": "Per i generatori Makefile e Ninja, le dipendenze dei collegamenti vengono ora generate dal linker stesso, per una selezione di linker. Se si definisce questa variabile con il valore FALSE, è possibile disattivare questa funzionalità.",
	"assets/variables.json.CMAKE_LINK_DIRECTORIES_BEFORE": "Indica se accodare o anteporre le directory per impostazione predefinita in link_directories.",
	"assets/variables.json.CMAKE_LINK_GROUP_USING_FEATURE": "Questa variabile definisce la modalità di collegamento di un gruppo di librerie per l'oggetto <FEATURE> specificato quando viene usata un'espressione del generatore LINK_GROUP. Affinché questa variabile abbia effetto, devono essere soddisfatte entrambe le condizioni seguenti:",
	"assets/variables.json.CMAKE_LINK_GROUP_USING_FEATURE_SUPPORTED": "Questa variabile specifica se l'oggetto <FEATURE> è supportato indipendentemente dal linguaggio del collegamento. Se la variabile è true, <FEATURE> deve essere definito da CMAKE_LINK_GROUP_USING_.",
	"assets/variables.json.CMAKE_LINK_INTERFACE_LIBRARIES": "Valore predefinito per la proprietà LINK_INTERFACE_LIBRARIES delle destinazioni.",
	"assets/variables.json.CMAKE_LINK_LIBRARIES_ONLY_TARGETS": "Impostare questa variabile per inizializzare la proprietà LINK_LIBRARIES_ONLY_TARGETS delle destinazioni non importate quando vengono create. L'impostazione su true consente un controllo aggiuntivo in relazione al fatto che tutti gli elementi denominati da target_link_libraries che possono essere nomi di destinazione siano effettivamente nomi di destinazioni esistenti. Per informazioni dettagliate, vedere la documentazione delle proprietà di destinazione.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_FEATURE_ATTRIBUTES": "Questa variabile definisce il comportamento della libreria di link <FEATURE> specificata. Specifica il modo in cui <FEATURE> interagisce con altre funzionalità, quando occorre applicare <FEATURE> e aspetti di come è necessario gestire <FEATURE> quando CMake assembla la riga di comando del linker finale (ad esempio, la deduplicazione).",
	"assets/variables.json.CMAKE_LINK_LIBRARY_FILE_FLAG": "Flag da usare per collegare una libreria specificata da un percorso al relativo file.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_FLAG": "Flag da usare per collegare una libreria in un eseguibile.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_SUFFIX": "Suffisso per le librerie a cui collegarsi.",
	"assets/variables.json.CMAKE_LINK_LIBRARY_USING_FEATURE": "Questa variabile definisce la modalità di collegamento di una libreria o di un framework per l'oggetto <FEATURE> specificato quando viene usata un'espressione del generatore LINK_LIBRARY. Affinché questa variabile abbia effetto, devono essere soddisfatte entrambe le condizioni seguenti:",
	"assets/variables.json.CMAKE_LINK_LIBRARY_USING_FEATURE_SUPPORTED": "Impostare su TRUE se <FEATURE>, come definito dalla variabile CMAKE_LINK_LIBRARY_USING_, è supportato indipendentemente dal linguaggio del linker.",
	"assets/variables.json.CMAKE_LINK_SEARCH_END_STATIC": "Termina una riga di collegamento in modo che vengano usate le librerie di sistema statiche.",
	"assets/variables.json.CMAKE_LINK_SEARCH_START_STATIC": "Presuppone che il linker cerchi le librerie statiche per impostazione predefinita.",
	"assets/variables.json.CMAKE_LINK_WHAT_YOU_USE": "Valore predefinito per la proprietà di destinazione LINK_WHAT_YOU_USE. Questa variabile viene usata per inizializzare la proprietà in ogni destinazione durante la creazione.",
	"assets/variables.json.CMAKE_LINK_WHAT_YOU_USE_CHECK": "Definisce il comando eseguito dopo il passaggio di collegamento per controllare l'utilizzo delle librerie. Questo controllo è attualmente definito solo nelle piattaforme ELF con valore ldd -u -r.",
	"assets/variables.json.CMAKE_MACOSX_BUNDLE": "Valore predefinito per la proprietà MACOSX_BUNDLE delle destinazioni.",
	"assets/variables.json.CMAKE_MACOSX_RPATH": "Indica se usare RPATH in macOS e iOS.",
	"assets/variables.json.CMAKE_MAJOR_VERSION": "Primo componente del numero di versione della variabile CMAKE_VERSION.",
	"assets/variables.json.CMAKE_MAKE_PROGRAM": "Strumento in grado di avviare il sistema di compilazione nativo. Il valore può essere il percorso completo di un eseguibile oppure solo il nome dello strumento se si prevede che sia incluso in PATH.",
	"assets/variables.json.CMAKE_MAP_IMPORTED_CONFIG_CONFIG": "Valore predefinito per la proprietà MAP_IMPORTED_CONFIG_ delle destinazioni.",
	"assets/variables.json.CMAKE_MATCH_COUNT": "Numero di corrispondenze con l'ultima espressione regolare.",
	"assets/variables.json.CMAKE_MATCH_n": "Consente di acquisire il gruppo <n> trovato con l'ultima espressione regolare, per i gruppi da 0 a 9. Il gruppo 0 è la corrispondenza intera. I gruppi da 1 a 9 sono le espressioni secondarie acquisite dalla sintassi ().",
	"assets/variables.json.CMAKE_MAXIMUM_RECURSION_DEPTH": "Profondità di ricorsione massima per gli script CMake. Deve essere impostato sulla riga di comando con -DCMAKE_MAXIMUM_RECURSION_DEPTH =<x> oppure in CMakeLists.txt da progetti che richiedono un'estesa profondità di ricorsione. I progetti per cui è impostata questa variabile devono fornire all'utente un modo per eseguirne l'override. Ad esempio:",
	"assets/variables.json.CMAKE_MESSAGE_CONTEXT": "Se questa opzione è abilitata dall'opzione della riga di comando cmake --log-context o dalla variabile CMAKE_MESSAGE_CONTEXT_SHOW, il comando message converte l'elenco CMAKE_MESSAGE_CONTEXT in una stringa delimitata da punti racchiusa tra parentesi quadre e la antepone a ogni riga per i messaggi dei livelli di log NOTICE e inferiori.",
	"assets/variables.json.CMAKE_MESSAGE_CONTEXT_SHOW": "Se si imposta questa variabile su true, verrà visualizzato un contesto contenente ogni riga registrata dal comando message (per informazioni sulla specifica del contesto, vedere CMAKE_MESSAGE_CONTEXT).",
	"assets/variables.json.CMAKE_MESSAGE_INDENT": "Il comando message unisce le stringhe di questo elenco e, per i livelli di log NOTICE e inferiori, antepone la stringa risultante a ogni riga del messaggio.",
	"assets/variables.json.CMAKE_MESSAGE_LOG_LEVEL": "Quando è impostata, questa variabile specifica il livello di registrazione usato dal comando message. I valori validi sono uguali a quelli dell'opzione della riga di comando --log-level <cmake --log-level> del programma CMake. Se questa variabile è impostata e viene specificata l'opzione della riga di comando --log-level <cmake --log-level>, quest'ultima ha la precedenza.",
	"assets/variables.json.CMAKE_MFC_FLAG": "Usa la libreria MFC per un eseguibile o una DLL.",
	"assets/variables.json.CMAKE_MINIMUM_REQUIRED_VERSION": "La versione <min> di CMake è stata assegnata alla chiamata più recente al comando cmake_minimum_required nell'ambito della variabile corrente o in qualsiasi ambito della variabile padre.",
	"assets/variables.json.CMAKE_MINOR_VERSION": "Secondo componente del numero di versione della variabile CMAKE_VERSION.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS": "Flag del linker da usare per creare i moduli.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS_CONFIG": "Flag da usare quando si collega un modulo.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS_CONFIG_INIT": "Valore usato per inizializzare la voce della cache CMAKE_MODULE_LINKER_FLAGS_ la prima volta che si configura un albero di compilazione. Questa variabile deve essere impostata da un file di toolchain. CMake può anteporre o accodare contenuto al valore a seconda dell'ambiente e della piattaforma di destinazione.",
	"assets/variables.json.CMAKE_MODULE_LINKER_FLAGS_INIT": "Valore usato per inizializzare la voce della cache CMAKE_MODULE_LINKER_FLAGS la prima volta che si configura un albero di compilazione. Questa variabile deve essere impostata da un file di toolchain. CMake può anteporre o accodare contenuto al valore a seconda dell'ambiente e della piattaforma di destinazione.",
	"assets/variables.json.CMAKE_MODULE_PATH": "Elenco di directory delimitate da punto e virgola, rappresentato tramite barre, che specificano un percorso di ricerca per i moduli CMake che devono essere caricati dai comandi include o find_package prima di verificare i moduli predefiniti inclusi in CMake. Per impostazione predefinita è vuoto e deve essere impostato dal progetto.",
	"assets/variables.json.CMAKE_MSVCIDE_RUN_PATH": "Percorsi PATH aggiuntivi che devono essere usati quando si esegue add_custom_command o add_custom_target con il generatore di Visual Studio 12 2013 (o versione successiva). In questo modo è possibile eseguire comandi e di usare DLL non riconosciuti dall'ambiente IDE.",
	"assets/variables.json.CMAKE_MSVC_DEBUG_INFORMATION_FORMAT": "Consente di selezionare il formato delle informazioni di debug MSVC destinato all'ABI MSVC. Questa variabile viene usata per inizializzare la proprietà MSVC_DEBUG_INFORMATION_FORMAT su tutte le destinazioni durante la creazione. Viene inoltre propagato dalle chiamate al comando try_compile nel progetto di test.",
	"assets/variables.json.CMAKE_MSVC_RUNTIME_LIBRARY": "Consente di selezionare la libreria di runtime MSVC usata dai compilatori quando la destinazione è l'ABI MSVC. Questa variabile viene usata per inizializzare la proprietà MSVC_RUNTIME_LIBRARY in tutte le destinazioni quando vengono create. Viene propagata anche dalle chiamate al comando try_compile nel progetto di test.",
	"assets/variables.json.CMAKE_NETRC": "Questa variabile viene usata per inizializzare l'opzione NETRC per file e comandi di file. Per altre informazioni, vedere tali comandi.",
	"assets/variables.json.CMAKE_NETRC_FILE": "Questa variabile viene usata per inizializzare l'opzione NETRC_FILE per file e comandi di file. Per altre informazioni, vedere tali comandi.",
	"assets/variables.json.CMAKE_NINJA_OUTPUT_PATH_PREFIX": "Indicare ai generatori Ninja di aggiungere un prefisso a ogni percorso di output in build.ninja. Al prefisso viene aggiunta una barra finale, se mancante.",
	"assets/variables.json.CMAKE_NOT_USING_CONFIG_FLAGS": "Se è true, ignora i flag _BUILD_TYPE.",
	"assets/variables.json.CMAKE_NO_BUILTIN_CHRPATH": "Non usa l'editor binario predefinito per correggere i percorsi di ricerca della libreria di runtime durante l'installazione.",
	"assets/variables.json.CMAKE_NO_SYSTEM_FROM_IMPORTED": "Valore predefinito per la proprietà NO_SYSTEM_FROM_IMPORTED delle destinazioni.",
	"assets/variables.json.CMAKE_OBJCXX_EXTENSIONS": "Valore predefinito per la proprietà di destinazione OBJCXX_EXTENSIONS se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_OBJCXX_STANDARD": "Valore predefinito per la proprietà di destinazione OBJCXX_STANDARD se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_OBJCXX_STANDARD_REQUIRED": "Valore predefinito per la proprietà di destinazione OBJCXX_STANDARD_REQUIRED se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_OBJC_EXTENSIONS": "Valore predefinito per la proprietà di destinazione OBJC_EXTENSIONS se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_OBJC_STANDARD": "Valore predefinito per la proprietà di destinazione OBJC_STANDARD se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_OBJC_STANDARD_REQUIRED": "Valore predefinito per la proprietà di destinazione OBJC_STANDARD_REQUIRED se impostato quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_OBJECT_PATH_MAX": "Lunghezza massima del percorso completo di file oggetto consentita dagli strumenti di compilazione nativi.",
	"assets/variables.json.CMAKE_OPTIMIZE_DEPENDENCIES": "Inizializza la proprietà di destinazione OPTIMIZE_DEPENDENCIES.",
	"assets/variables.json.CMAKE_OSX_ARCHITECTURES": "Architetture specifiche della destinazione per macOS e iOS.",
	"assets/variables.json.CMAKE_OSX_DEPLOYMENT_TARGET": "Consente di specificare la versione minima della piattaforma di destinazione (ad esempio macOS o iOS) in cu devono essere distribuiti i file binari di destinazione. CMake usa questo valore di variabile per il flag -mmacosx-version-min o i rispettivi equivalenti della piattaforma di destinazione. Per le versioni meno recenti di Xcode con cui vengono distribuiti più SDK per macOS, questa variabile consente anche di scegliere l'SDK nel caso in cui CMAKE_OSX_SYSROOT non sia impostato.",
	"assets/variables.json.CMAKE_OSX_SYSROOT": "Consente di specificare il percorso o il nome dell'SDK della piattaforma macOS da usare. CMake usa questo valore per calcolare il valore del flag -isysysroot o equivalente e per consentire ai comandi find_* di individuare i file nell'SDK.",
	"assets/variables.json.CMAKE_PARENT_LIST_FILE": "Percorso completo del file CMake che include quello corrente.",
	"assets/variables.json.CMAKE_PATCH_VERSION": "Terzo componente del numero di versione della variabile CMAKE_VERSION.",
	"assets/variables.json.CMAKE_PCH_INSTANTIATE_TEMPLATES": "Questa variabile viene usata per inizializzare la proprietà PCH_INSTANTIATE_TEMPLATES delle destinazioni quando vengono create.",
	"assets/variables.json.CMAKE_PCH_WARN_INVALID": "Questa variabile viene usata per inizializzare la proprietà PCH_WARN_INVALID delle destinazioni quando vengono create.",
	"assets/variables.json.CMAKE_PDB_OUTPUT_DIRECTORY": "Directory di output per i file PDB dei simboli di debug MS generati dal linker per le destinazioni di eseguibili e librerie condivise.",
	"assets/variables.json.CMAKE_PDB_OUTPUT_DIRECTORY_CONFIG": "Directory di output per singola configurazione relativa ai file PDB dei simboli di debug MS generati dal linker per le destinazioni di eseguibili e librerie condivise.",
	"assets/variables.json.CMAKE_PLATFORM_NO_VERSIONED_SONAME": "Questa variabile viene usata per controllare a livello globale se le proprietà di destinazione VERSION e SOVERSION devono essere usate per le librerie condivise. Se impostato su true, l'aggiunta di informazioni sulla versione a ogni destinazione della libreria condivisa è disabilitata.",
	"assets/variables.json.CMAKE_POLICY_DEFAULT_CMPNNNN": "Impostazione predefinita per il criterio CMake CMP<NNNN> se diversamente non viene lasciato non impostato.",
	"assets/variables.json.CMAKE_POLICY_WARNING_CMPNNNN": "Consente di abilitare o disabilitare l'avviso in modo esplicito quando il criterio CMake CMP<NNNN> non è stato impostato in modo esplicito da cmake_policy o in modo implicito da cmake_minimum_required. È significativo solo per i criteri che non restituiscono avvisi per impostazione predefinita:",
	"assets/variables.json.CMAKE_POSITION_INDEPENDENT_CODE": "Valore predefinito per la proprietà POSITION_INDEPENDENT_CODE delle destinazioni.",
	"assets/variables.json.CMAKE_PREFIX_PATH": "Elenco di directory delimitate da punto e virgola che specificano i prefissi di installazione che devono essere cercati dai comandi find_package, find_program, find_library, find_file e find_path. Ogni comando aggiungerà le sottodirectory appropriate (come bin, lib, o include) come specificato nella relativa documentazione.",
	"assets/variables.json.CMAKE_PROGRAM_PATH": "Elenco di directory delimitate da punto e virgola che specificano un percorso di ricerca per il comando find_program. Per impostazione predefinita, è vuoto e deve essere impostato dal progetto.",
	"assets/variables.json.CMAKE_PROJECT_DESCRIPTION": "Descrizione del progetto di primo livello.",
	"assets/variables.json.CMAKE_PROJECT_HOMEPAGE_URL": "URL della home del progetto di primo livello.",
	"assets/variables.json.CMAKE_PROJECT_INCLUDE": "File di linguaggio CMake che deve essere incluso come ultimo passaggio di tutte le chiamate al comando project. Viene usato per l'injection di codice personalizzato nelle compilazioni di progetti senza modificarne l'origine. Per una descrizione più dettagliata dei file potenzialmente inclusi durante una chiamata a project, vedere Code Injection.",
	"assets/variables.json.CMAKE_PROJECT_INCLUDE_BEFORE": "File di linguaggio o modulo CMake che deve essere incluso come primo passaggio di tutte le chiamate al comando project. Viene usato per l'injection di codice personalizzato nelle compilazioni di progetti senza modificarne l'origine. Per una descrizione più dettagliata dei file potenzialmente inclusi durante una chiamata a project, vedere Code Injection.",
	"assets/variables.json.CMAKE_PROJECT_NAME": "Nome del progetto di primo livello.",
	"assets/variables.json.CMAKE_PROJECT_PROJECT-NAME_INCLUDE": "File di linguaggio CMake che deve essere incluso come ultimo passaggio di qualsiasi chiamata al comando project che specifica <PROJECT-NAME> come nome di progetto. Viene usato per l'injection di codice personalizzato nelle compilazioni di progetti senza modificarne l'origine. Per una descrizione più dettagliata dei file potenzialmente inclusi durante una chiamata a project, vedere Code Injection.",
	"assets/variables.json.CMAKE_PROJECT_PROJECT-NAME_INCLUDE_BEFORE": "File di linguaggio o modulo CMake che deve essere incluso come primo passaggio di qualsiasi chiamata al comando project che specifica <PROJECT-NAME> come nome di progetto. Viene usato per l'injection di codice personalizzato nelle compilazioni di progetti senza modificarne l'origine. Per una descrizione più dettagliata dei file potenzialmente inclusi durante una chiamata a project, vedere Code Injection.",
	"assets/variables.json.CMAKE_PROJECT_TOP_LEVEL_INCLUDES": "Elenco delimitato da punto e virgola di file di linguaggio CMake da includere come parte della prima chiamata al progetto. I file verranno inclusi immediatamente dopo la lettura del file della toolchain (se specificato) e dopo l'impostazione delle variabili di piattaforma, ma prima dell'abilitazione di qualsiasi linguaggio. Di conseguenza, è possibile che le variabili specifiche del linguaggio, inclusi elementi come CMAKE_<LANG>_COMPILER, non vengano impostate. Per una descrizione più dettagliata dei file potenzialmente inclusi durante una chiamata a project, vedere Code Injection.",
	"assets/variables.json.CMAKE_PROJECT_VERSION": "Versione del progetto di primo livello.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_MAJOR": "Versione principale del progetto di primo livello.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_MINOR": "Versione secondaria del progetto di primo livello.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_PATCH": "Versione della patch del progetto di primo livello.",
	"assets/variables.json.CMAKE_PROJECT_VERSION_TWEAK": "Versione di perfezionamento del progetto di primo livello.",
	"assets/variables.json.CMAKE_RANLIB": "Nome dello strumento di randomizzazione per le librerie statiche.",
	"assets/variables.json.CMAKE_REQUIRE_FIND_PACKAGE_PackageName": "Variabile per rendere la chiamata find_package REQUIRED.",
	"assets/variables.json.CMAKE_ROOT": "Directory di installazione per l'esecuzione di CMake.",
	"assets/variables.json.CMAKE_RULE_MESSAGES": "Consente di specificare se restituire un messaggio per ogni regola di make.",
	"assets/variables.json.CMAKE_RUNTIME_OUTPUT_DIRECTORY": "Indica la posizione in cui inserire i file di destinazione di RUNTIME quando vengono compilati.",
	"assets/variables.json.CMAKE_RUNTIME_OUTPUT_DIRECTORY_CONFIG": "Indica la posizione in cui inserire i file di destinazione di RUNTIME quando vengono compilati per una configurazione specifica.",
	"assets/variables.json.CMAKE_SCRIPT_MODE_FILE": "Percorso completo del file di script -P di CMake attualmente in fase di elaborazione.",
	"assets/variables.json.CMAKE_SHARED_LIBRARY_ENABLE_EXPORTS": "Specificare se la libreria condivisa genera un file di importazione.",
	"assets/variables.json.CMAKE_SHARED_LIBRARY_PREFIX": "Prefisso per le librerie condivise a cui collegarsi.",
	"assets/variables.json.CMAKE_SHARED_LIBRARY_SUFFIX": "Suffisso per le librerie condivise a cui collegarsi.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS": "Flag del linker da usare per creare le librerie condivise.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS_CONFIG": "Flag da usare quando si collega un libreria condivisa.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS_CONFIG_INIT": "Valore usato per inizializzare la voce della cache CMAKE_SHARED_LINKER_FLAGS_ la prima volta che si configura un albero di compilazione. Questa variabile deve essere impostata da un file di toolchain. CMake può anteporre o accodare contenuto al valore a seconda dell'ambiente e della piattaforma di destinazione.",
	"assets/variables.json.CMAKE_SHARED_LINKER_FLAGS_INIT": "Valore usato per inizializzare la voce della cache CMAKE_SHARED_LINKER_FLAGS la prima volta che si configura un albero di compilazione. Questa variabile deve essere impostata da un file di toolchain. CMake può anteporre o accodare contenuto al valore a seconda dell'ambiente e della piattaforma di destinazione.",
	"assets/variables.json.CMAKE_SHARED_MODULE_PREFIX": "Prefisso per i moduli caricabili a cui collegarsi.",
	"assets/variables.json.CMAKE_SHARED_MODULE_SUFFIX": "Suffisso per le librerie condivise a cui collegarsi.",
	"assets/variables.json.CMAKE_SIZEOF_VOID_P": "Dimensioni di un puntatore void.",
	"assets/variables.json.CMAKE_SKIP_BUILD_RPATH": "Non include RPATH nell'albero di compilazione.",
	"assets/variables.json.CMAKE_SKIP_INSTALL_ALL_DEPENDENCY": "Evita che la destinazione di installazione dipenda da tutte le destinazioni.",
	"assets/variables.json.CMAKE_SKIP_INSTALL_RPATH": "Non include RPATH nell'albero di installazione.",
	"assets/variables.json.CMAKE_SKIP_INSTALL_RULES": "Indica se disabilitare la generazione di regole di installazione.",
	"assets/variables.json.CMAKE_SKIP_RPATH": "Se è true, non aggiunge le informazioni sul percorso in fase di esecuzione.",
	"assets/variables.json.CMAKE_SKIP_TEST_ALL_DEPENDENCY": "Controllare se la destinazione di test dipende da tutte le destinazioni.",
	"assets/variables.json.CMAKE_SOURCE_DIR": "Percorso del primo livello dell'albero di origine.",
	"assets/variables.json.CMAKE_STAGING_PREFIX": "Questa variabile può essere impostata su un percorso da installare durante la compilazione incrociata. Può essere utile se il percorso in CMAKE_SYSROOT è di sola lettura o, in caso contrario, deve rimanere intatto.",
	"assets/variables.json.CMAKE_STATIC_LIBRARY_PREFIX": "Prefisso per le librerie statiche a cui collegarsi.",
	"assets/variables.json.CMAKE_STATIC_LIBRARY_SUFFIX": "Suffisso per le librerie statiche a cui collegarsi.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS": "Flag da usare per creare librerie statiche. Questi flag verranno passati all'utilità di gestione archiviazione quando si crea una libreria statica.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS_CONFIG": "Flag da usare per creare librerie statiche. Questi flag verranno passati all'utilità di gestione archiviazione quando si crea una libreria statica nella configurazione <CONFIG>.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS_CONFIG_INIT": "Valore usato per inizializzare la voce della cache CMAKE_STATIC_LINKER_FLAGS_ la prima volta che si configura un albero di compilazione. Questa variabile deve essere impostata da un file di toolchain. CMake può anteporre o accodare contenuto al valore a seconda dell'ambiente e della piattaforma di destinazione.",
	"assets/variables.json.CMAKE_STATIC_LINKER_FLAGS_INIT": "Valore usato per inizializzare la voce della cache CMAKE_STATIC_LINKER_FLAGS la prima volta che si configura un albero di compilazione. Questa variabile deve essere impostata da un file di toolchain. CMake può anteporre o accodare contenuto al valore a seconda dell'ambiente e della piattaforma di destinazione.",
	"assets/variables.json.CMAKE_SUBLIME_TEXT_2_ENV_SETTINGS": "Questa variabile contiene un elenco di variabili di ambiente sotto forma di elenco di token con la sintassi variabile=valore.",
	"assets/variables.json.CMAKE_SUBLIME_TEXT_2_EXCLUDE_BUILD_TREE": "Se questa variabile viene valutata come ON alla fine del file CMakeLists.txt di primo livello, il generatore aggiuntivo Sublime Text 2 esclude l'albero di compilazione dal progetto con estensione sublime se è presente all'interno dell'albero di origine.",
	"assets/variables.json.CMAKE_SUPPRESS_REGENERATION": "Se CMAKE_SUPPRESS_REGENERATION è OFF, che corrisponde all'impostazione predefinita, CMake aggiunge una destinazione speciale, da cui dipendono tutte le altre destinazioni, che controlla il sistema di compilazione ed eventualmente ripete CMake per rigenerare il sistema di compilazione in caso di modifica dell'origine delle specifiche della destinazione.",
	"assets/variables.json.CMAKE_Swift_COMPILATION_MODE": "Specificare la modalità di compilazione di una destinazione da parte di Swift. Questa variabile viene usata per inizializzare la proprietà Swift_COMPILATION_MODE nelle destinazioni durante la creazione.",
	"assets/variables.json.CMAKE_Swift_LANGUAGE_VERSION": "Impostare sul numero di versione del linguaggio Swift. Se non è impostata, si presuppone che sia la versione legacy meno recente nota come disponibile nella versione di Xcode host:",
	"assets/variables.json.CMAKE_Swift_MODULE_DIRECTORY": "Directory di output del modulo Swift.",
	"assets/variables.json.CMAKE_Swift_NUM_THREADS": "Numero di thread per la compilazione parallela per destinazioni Swift.",
	"assets/variables.json.CMAKE_SYSROOT": "Percorso da passare al compilatore nel flag --sysroot.",
	"assets/variables.json.CMAKE_SYSROOT_COMPILE": "Percorso da passare al compilatore nel flag --sysroot durante la compilazione dei file di origine. È uguale a CMAKE_SYSROOT ma viene usato solo per la compilazione delle origini e non per il collegamento.",
	"assets/variables.json.CMAKE_SYSROOT_LINK": "Percorso da passare al compilatore nel flag --sysroot durante il collegamento. È uguale a CMAKE_SYSROOT ma viene usato solo per il collegamento e non per la compilazione delle origini.",
	"assets/variables.json.CMAKE_SYSTEM": "Nome composito del sistema operativo per cui CMake sta eseguendo la compilazione.",
	"assets/variables.json.CMAKE_SYSTEM_APPBUNDLE_PATH": "Percorso di ricerca per i bundle di applicazioni macOS usati dai comandi find_program e find_package. Per impostazione predefinita, contiene le directory standard per il sistema corrente. Non deve essere modificato dal progetto; a questo scopo usare CMAKE_APPBUNDLE_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_FRAMEWORK_PATH": "Percorso di ricerca per i framework macOS usati dai comandi find_library, find_package, find_path e find_file. Per impostazione predefinita, contiene le directory standard per il sistema corrente. Non deve essere modificato dal progetto; a questo scopo usare CMAKE_FRAMEWORK_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_IGNORE_PATH": "Elenco di directory delimitato da punto e virgola da ignorare da parte delle varie operazioni di ricerca... () comandi.",
	"assets/variables.json.CMAKE_SYSTEM_IGNORE_PREFIX_PATH": "Elenco di prefissi di ricerca delimitati da punto e virgola che devono essere ignorati dai comandi find_program, find_library, find_file e find_path. I prefissi vengono ignorati anche dalla modalità Config del comando find_package (la modalità modulo non è interessata). Per ignorare directory specifiche, vedere CMAKE_IGNORE_NONPREFIX_VAR.",
	"assets/variables.json.CMAKE_SYSTEM_INCLUDE_PATH": "Elenco di directory delimitate da punto e virgola che specificano un percorso di ricerca per i comandi find_file e find_path. Per impostazione predefinita contiene le directory standard per il sistema corrente. Non deve essere modificato dal progetto; a questo scopo, usare CMAKE_INCLUDE_PATH. Vedere anche CMAKE_SYSTEM_PREFIX_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_LIBRARY_PATH": "Elenco di directory delimitate da punto e virgola che specificano un percorso di ricerca per il comando find_library. Per impostazione predefinita contiene le directory standard per il sistema corrente. Non deve essere modificato dal progetto; a questo scopo, usare CMAKE_LIBRARY_PATH. Vedere anche CMAKE_SYSTEM_PREFIX_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_NAME": "Nome del sistema operativo per il quale CMake deve eseguire la compilazione. Per la versione del sistema operativo, vedere la variabile CMAKE_SYSTEM_VERSION.",
	"assets/variables.json.CMAKE_SYSTEM_PREFIX_PATH": "Elenco di directory delimitate da punto e virgola che specificano i prefissi di installazione che devono essere cercati dai comandi find_package, find_program, find_library, find_file e find_path. Ogni comando aggiungerà le sottodirectory appropriate (come bin, lib, o include) come specificato nella relativa documentazione.",
	"assets/variables.json.CMAKE_SYSTEM_PROCESSOR": "Quando non si esegue la compilazione incrociata, questa variabile ha lo stesso valore della variabile CMAKE_HOST_SYSTEM_PROCESSOR. In molti casi corrisponderà all'architettura di destinazione per la compilazione, ma questo non è garantito. Ad esempio, in Windows l'host potrebbe essere AMD64 anche quando si usa un compilatore cl MSVC con una destinazione a 32 bit.",
	"assets/variables.json.CMAKE_SYSTEM_PROGRAM_PATH": "Elenco di directory delimitate da punto e virgola che specificano un percorso di ricerca per il comando find_program. Per impostazione predefinita contiene le directory standard per il sistema corrente. Non deve essere modificato dal progetto; a questo scopo, usare CMAKE_PROGRAM_PATH. Vedere anche CMAKE_SYSTEM_PREFIX_PATH.",
	"assets/variables.json.CMAKE_SYSTEM_VERSION": "Versione del sistema operativo per il quale CMake deve eseguire la compilazione. Per il nome del sistema operativo, vedere la variabile CMAKE_SYSTEM_NAME.",
	"assets/variables.json.CMAKE_TASKING_TOOLSET": "Selezionare il set di strumenti Attività che fornisce il compilatore",
	"assets/variables.json.CMAKE_TEST_LAUNCHER": "Questa variabile viene usata per inizializzare la proprietà di destinazione TEST_LAUNCHER delle destinazioni eseguibili a mano a mano che vengono create. Viene usato per specificare un'utilità di avvio per l'esecuzione di test, aggiunta dal comando add_test, che esegue una destinazione eseguibile.",
	"assets/variables.json.CMAKE_TLS_CAINFO": "Specificare il valore predefinito per le opzioni TLS_CAINFO di file e comandi di file. Per impostazione predefinita non è impostato.",
	"assets/variables.json.CMAKE_TLS_VERIFY": "Specifica il valore predefinito per le opzioni di TLS_VERIFY dei comandi file e file. Se questa variabile non è impostata, i comandi controllano la variabile di ambiente CMAKE_TLS_VERIFY. Se nessuna delle due è impostata, il valore predefinito è off.",
	"assets/variables.json.CMAKE_TLS_VERSION": "Specificare il valore predefinito per l‘opzione TLS_VERIFY del file e dei comandi del file. Se questa variabile non è impostata, i comandi controllano la variabile di ambiente CMAKE_TLS_VERSION.",
	"assets/variables.json.CMAKE_TOOLCHAIN_FILE": "Percorso del file della toolchain fornito a CMake.",
	"assets/variables.json.CMAKE_TRY_COMPILE_CONFIGURATION": "Configurazione di compilazione usata per i progetti try_compile e try_run.",
	"assets/variables.json.CMAKE_TRY_COMPILE_NO_PLATFORM_VARIABLES": "Impostare su un valore true per indicare al comando try_compile di non propagare variabili di piattaforma nel progetto di test.",
	"assets/variables.json.CMAKE_TRY_COMPILE_PLATFORM_VARIABLES": "Elenco delle variabili che la firma del file di origine del comando try_compile deve propagare nel progetto di test per essere destinata alla stessa piattaforma del progetto host.",
	"assets/variables.json.CMAKE_TRY_COMPILE_TARGET_TYPE": "Tipo di destinazione generato per le chiamate di try_compile usando la firma del file di origine. I valori validi sono:",
	"assets/variables.json.CMAKE_TWEAK_VERSION": "Impostato su 0 per la compatibilità con il codice scritto per le versioni precedenti di CMake per le quali possono essere stati definiti valori più elevati.",
	"assets/variables.json.CMAKE_UNITY_BUILD": "Questa variabile viene usata per inizializzare la proprietà UNITY_BUILD delle destinazioni quando vengono create. Se è impostata su true, è possibile abilitare la compilazione batch di più origini all'interno di ogni destinazione. Questa funzionalità è nota come compilazione Unity o Jumbo.",
	"assets/variables.json.CMAKE_UNITY_BUILD_BATCH_SIZE": "Questa variabile viene usata per inizializzare la proprietà UNITY_BUILD_BATCH_SIZE delle destinazioni quando vengono create. Specifica il limite massimo predefinito relativo al numero di file di origine che è possibile combinare in un file di origine Unity quando per una destinazione sono abilitate le compilazioni Unity.",
	"assets/variables.json.CMAKE_UNITY_BUILD_UNIQUE_ID": "Questa variabile viene usata per inizializzare la proprietà UNITY_BUILD_UNIQUE_ID delle destinazioni quando vengono create. Specifica il nome dell'identificatore univoco generato per singolo file in una compilazione Unity.",
	"assets/variables.json.CMAKE_USER_MAKE_RULES_OVERRIDE": "Consente di specificare un file CMake che esegue l'override delle informazioni sulla piattaforma.",
	"assets/variables.json.CMAKE_USER_MAKE_RULES_OVERRIDE_LANG": "Consente di specificare un file CMake che esegue l'override delle informazioni sulla piattaforma per <LANG>.",
	"assets/variables.json.CMAKE_USE_RELATIVE_PATHS": "Questa variabile non ha alcun effetto. L'effetto parzialmente implementato che aveva nelle release precedenti è stato rimosso in CMake 3.4.",
	"assets/variables.json.CMAKE_VERBOSE_MAKEFILE": "Abilita l'output dettagliato delle compilazioni di Makefile.",
	"assets/variables.json.CMAKE_VERIFY_INTERFACE_HEADER_SETS": "Questa variabile viene usata per inizializzare la proprietà VERIFY_INTERFACE_HEADER_SETS delle destinazioni al momento della creazione. L'impostazione su true abilita la verifica del set di intestazioni.",
	"assets/variables.json.CMAKE_VERSION": "Stringa della versione di CMake composta da tre numeri interi non negativi separati da punto (.) ed eventualmente seguiti da trattino (-) e da altre informazioni. I primi due componenti rappresentano il livello di funzionalità e il terzo componente rappresenta un livello di risoluzione dei bug o la data di sviluppo.",
	"assets/variables.json.CMAKE_VISIBILITY_INLINES_HIDDEN": "Valore predefinito per la proprietà di destinazione VISIBILITY_INLINES_HIDDEN quando viene creata una destinazione.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_COMMAND": "Questa variabile viene usata per inizializzare la proprietà VS_DEBUGGER_COMMAND in ogni destinazione durante la creazione. Per altre informazioni, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS": "Questa variabile viene usata per inizializzare la proprietà VS_DEBUGGER_COMMAND_ARGUMENTS in ogni destinazione durante la creazione. Per altre informazioni, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_ENVIRONMENT": "Questa variabile viene usata per inizializzare la proprietà VS_DEBUGGER_ENVIRONMENT in ogni destinazione durante la creazione. Per altre informazioni, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_VS_DEBUGGER_WORKING_DIRECTORY": "Questa variabile viene usata per inizializzare la proprietà VS_DEBUGGER_DIRECTORY in ogni destinazione durante la creazione. Per altre informazioni, vedere tale proprietà di destinazione.",
	"assets/variables.json.CMAKE_VS_DEVENV_COMMAND": "I generatori per Visual Studio 12 2013 e versioni successive impostano questa variabile sul comando devenv.com installato con la versione corrispondente di Visual Studio. Tenere presente che questa variabile potrebbe essere vuota nelle edizioni di Visual Studio Express perché queste non offrono questo strumento.",
	"assets/variables.json.CMAKE_VS_GLOBALS": "Elenco di record chiave=valore da impostare per destinazione come proprietà di destinazione VS_GLOBAL_ in cui variabile=Key e valore=Value.",
	"assets/variables.json.CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD": "Include la destinazione INSTALL per la compilazione predefinita.",
	"assets/variables.json.CMAKE_VS_INCLUDE_PACKAGE_TO_DEFAULT_BUILD": "Include la destinazione PACKAGE per la compilazione predefinita.",
	"assets/variables.json.CMAKE_VS_INTEL_Fortran_PROJECT_VERSION": "Quando si genera per Visual Studio 12 2013 o versione successiva con il plug-in Intel Fortran installato, specifica la versione in formato file di progetto con estensione vfproj. Deve essere usato internamente in CMake e non può essere usato nel codice del progetto.",
	"assets/variables.json.CMAKE_VS_JUST_MY_CODE_DEBUGGING": "Abilita Just My Code per il debugger di Visual Studio.",
	"assets/variables.json.CMAKE_VS_MSBUILD_COMMAND": "I generatori per Visual Studio 12 2013 e versioni successive impostano questa variabile sul comando MSBuild.exe installato con la versione corrispondente di Visual Studio.",
	"assets/variables.json.CMAKE_VS_NO_COMPILE_BATCHING": "Disattiva la compilazione in batch quando si usano generatori di Visual Studio.",
	"assets/variables.json.CMAKE_VS_NsightTegra_VERSION": "Quando si usa un generatore di Visual Studio con la variabile CMAKE_SYSTEM_NAME impostata su Android, questa variabile contiene il numero della versione installata di NVIDIA Nsight Tegra Visual Studio Edition.",
	"assets/variables.json.CMAKE_VS_NUGET_PACKAGE_RESTORE": "Quando si usa un generatore di Visual Studio, questa variabile della cache controlla se msbuild deve tentare automaticamente di ripristinare i pacchetti NuGet prima di una compilazione. I pacchetti NuGet possono essere definiti usando la proprietà VS_PACKAGE_REFERENCES in una destinazione. Se non viene definito alcun riferimento al pacchetto, questa impostazione non eseguirà alcuna operazione.",
	"assets/variables.json.CMAKE_VS_PLATFORM_NAME": "Nome della piattaforma di destinazione di Visual Studio usata dal generatore corrente.",
	"assets/variables.json.CMAKE_VS_PLATFORM_NAME_DEFAULT": "Impostazione predefinita per il nome della piattaforma di destinazione di Visual Studio per il generatore corrente senza considerare il valore della variabile CMAKE_GENERATOR_PLATFORM. Per i generatori di Visual Studio per VS 2017 e versioni precedenti questo valore è sempre Win32. Per VS 2019 e versioni successive questo valore è basato sulla piattaforma host.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET": "Nome del set di strumenti della piattaforma di Visual Studio.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_CUDA": "Versione di NVIDIA CUDA Toolkit di cui Visual Studio usa il set di strumenti.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_CUDA_CUSTOM_DIR": "Percorso del toolkit CUDA NVIDIA autonomo (ad esempio estratto dal programma di installazione).",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_FORTRAN": "Compilatore Fortran che verrà usato dai progetti Visual Studio.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE": "Architettura degli strumenti preferita di Visual Studio.",
	"assets/variables.json.CMAKE_VS_PLATFORM_TOOLSET_VERSION": "Versione del set di strumenti della piattaforma di Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_EXCLUDE_DIRECTORIES": "Questa variabile consente di eseguire l'override delle directory di esclusione predefinite di Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_EXECUTABLE_DIRECTORIES": "Questa variabile consente di eseguire l'override delle directory eseguibili predefinite di Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_INCLUDE_DIRECTORIES": "Questa variabile consente di eseguire l'override delle directory di inclusione predefinite di Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_LIBRARY_DIRECTORIES": "Questa variabile consente di eseguire l'override delle directory delle librerie predefinite di Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_LIBRARY_WINRT_DIRECTORIES": "Questa variabile consente di eseguire l'override delle directory delle librerie WinRT predefinite di Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_REFERENCE_DIRECTORIES": "Questa variabile consente di eseguire l'override delle directory dei riferimenti predefinite di Visual Studio.",
	"assets/variables.json.CMAKE_VS_SDK_SOURCE_DIRECTORIES": "Questa variabile consente di eseguire l'override delle directory di origine predefinite di Visual Studio.",
	"assets/variables.json.CMAKE_VS_TARGET_FRAMEWORK_IDENTIFIER": "Identificatore del framework di destinazione di Visual Studio.",
	"assets/variables.json.CMAKE_VS_TARGET_FRAMEWORK_TARGETS_VERSION": "Versione del framework di destinazione di Visual Studio.",
	"assets/variables.json.CMAKE_VS_TARGET_FRAMEWORK_VERSION": "Versione del framework di destinazione di Visual Studio.",
	"assets/variables.json.CMAKE_VS_USE_DEBUG_LIBRARIES": "Indicare ai Generatori di Visual Studio quali configurazioni vengono considerate configurazioni di debug. Controlla l'impostazione UseDebugLibraries in ogni configurazione di un file .vcxproj.",
	"assets/variables.json.CMAKE_VS_VERSION_BUILD_NUMBER": "Versione di Visual Studio.",
	"assets/variables.json.CMAKE_VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION": "Indicare ai generatori di Visual Studio di usare la versione minima della piattaforma di destinazione Windows specificata.",
	"assets/variables.json.CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION": "Versione della piattaforma di destinazione Windows di Visual Studio.",
	"assets/variables.json.CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM": "Sovrascrive la versione massima di Windows 10 SDK per VS 2015 e versioni successive.",
	"assets/variables.json.CMAKE_VS_WINRT_BY_DEFAULT": "Informae i generatori di Visual Studio per VS 2010 e versioni successive che la piattaforma di destinazione consente la compilazione di WinRT per impostazione predefinita e deve essere disabilitata in modo esplicito se si omette /ZW o VS_WINRT_COMPONENT (invece di abilitarla quando è presente una di queste opzioni)",
	"assets/variables.json.CMAKE_WARN_DEPRECATED": "Indica se visualizzare avvisi per le funzionalità deprecate.",
	"assets/variables.json.CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION": "Chiede allo script cmake_install.cmake di visualizzare un avviso ogni volta che viene rilevato un file con INSTALL DESTINATION assoluto.",
	"assets/variables.json.CMAKE_WATCOM_RUNTIME_LIBRARY": "Consente di selezionare la libreria di runtime Watcom usata dai compilatori quando la destinazione è l'ABI Watcom. Questa variabile viene usata per inizializzare la proprietà WATCOM_RUNTIME_LIBRARY in tutte le destinazioni quando vengono create. Viene propagata anche dalle chiamate al comando try_compile nel progetto di test.",
	"assets/variables.json.CMAKE_WIN32_EXECUTABLE": "Valore predefinito per la proprietà WIN32_EXECUTABLE delle destinazioni.",
	"assets/variables.json.CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS": "Valore predefinito per la proprietà di destinazione WINDOWS_EXPORT_ALL_SYMBOLS. Questa variabile viene usata per inizializzare la proprietà in ogni destinazione durante la creazione.",
	"assets/variables.json.CMAKE_XCODE_ATTRIBUTE_an-attribute": "Consente di impostare direttamente gli attributi della destinazione Xcode.",
	"assets/variables.json.CMAKE_XCODE_BUILD_SYSTEM": "Selezione del sistema di compilazione Xcode.",
	"assets/variables.json.CMAKE_XCODE_GENERATE_SCHEME": "Se è abilitata, il generatore di Xcode genererà i file dello schema. Tali file sono utili per richiamare le azioni di analisi, archiviazione, compilazione per test e test dalla riga di comando.",
	"assets/variables.json.CMAKE_XCODE_GENERATE_TOP_LEVEL_PROJECT_ONLY": "Se è abilitato, il generatore di Xcode genererà solo un singolo file di progetto Xcode per il comando topmost project() invece di generarne uno per ogni comando project().",
	"assets/variables.json.CMAKE_XCODE_LINK_BUILD_PHASE_MODE": "Questa variabile viene usata per inizializzare la proprietà XCODE_LINK_BUILD_PHASE_MODE nelle destinazioni. Influisce sui metodi usati dal generatore Xcode per collegare diversi tipi di librerie. Il valore predefinito è NONE.",
	"assets/variables.json.CMAKE_XCODE_PLATFORM_TOOLSET": "Selezione del compilatore di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER": "Indica se abilitare Address Sanitizer nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN": "Indica se abilitare Detect use of stack after return nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING": "Indica se abilitare l'opzione per consentire il debug quando si usa il browser versioni del documento nella sezione delle opzioni dello schema Xcode generato.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER": "Indica se disabilitare Main Thread Checker nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS": "Indica se abilitare Dynamic Library Loads nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE": "Indica se abilitare l'utilizzo di Dynamic Linker API nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENABLE_GPU_API_VALIDATION": "Valore della proprietà per Metal: Convalida API nella sezione Opzioni dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE": "Valore della proprietà per Acquisizione frame GPU nella sezione Opzioni dello schema Xcode generato. I valori di esempio sono Metal e Disabled (Disabilitato).",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION": "Valore della proprietà per Metal: Convalida Shader nella sezione Opzioni dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ENVIRONMENT": "Consente di specificare le variabili di ambiente da aggiungere alla sezione Arguments dello schema Xcode generato.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_GUARD_MALLOC": "Indica se abilitare Guard Malloc nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_LAUNCH_CONFIGURATION": "Impostare la configurazione di compilazione per eseguire la destinazione.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_LAUNCH_MODE": "Valore della proprietà per Launch nella sezione Info dello schema Xcode generato.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP": "Indica se abilitare l'opzione Pause on issues di Main Thread Checker nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MALLOC_GUARD_EDGES": "Indica se abilitare Malloc Guard Edges nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MALLOC_SCRIBBLE": "Indica se abilitare Malloc Scribble nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_MALLOC_STACK": "Indica se abilitare Malloc Stack nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_THREAD_SANITIZER": "Indica se abilitare Thread Sanitizer nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_THREAD_SANITIZER_STOP": "Indica se abilitare Thread Sanitizer - Pause on issues nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER": "Indica se abilitare Undefined Behavior Sanitizer nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP": "Indica se abilitare l'opzione Pause on issues di Undefined Behavior Sanitizer nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_WORKING_DIRECTORY": "Consente di specificare la directory di lavoro delle azioni di esecuzione e creazione profilo nello schema Xcode generato.",
	"assets/variables.json.CMAKE_XCODE_SCHEME_ZOMBIE_OBJECTS": "Indica se abilitare Zombie Objects nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.CMAKE_XCODE_XCCONFIG": "Se impostato, il generatore Xcode registrerà il file specificato come file XCConfig globale. Per i file XCConfig a livello di destinazione, vedere la proprietà di destinazione XCODE_XCCONFIG.",
	"assets/variables.json.CPACK_ABSOLUTE_DESTINATION_FILES": "Elenco dei file che sono stati installati usando un percorso di ABSOLUTE_DESTINATION.",
	"assets/variables.json.CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY": "Interruttore booleano per includere/escludere la directory di primo livello (nel caso di componenti).",
	"assets/variables.json.CPACK_CUSTOM_INSTALL_VARIABLES": "Le variabili CPack (impostate, ad esempio, tramite gli script cpack -D, CPackConfig.cmake o CPACK_PROJECT_CONFIG_FILE) non sono direttamente visibili negli script di installazione. In alternativa, è possibile passare un elenco di coppie varName=value nella variabile CPACK_CUSTOM_INSTALL_VARIABLES. In fase di installazione, per ogni elemento elenco una variabile con il nome specificato (varName) verrà impostata sul valore specificato. È possibile omettere il segno di uguale (=) per un valore vuoto.",
	"assets/variables.json.CPACK_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION": "Chiede a CPack di visualizzare un errore quando viene rilevato un file con INSTALL DESTINATION assoluto.",
	"assets/variables.json.CPACK_INCLUDE_TOPLEVEL_DIRECTORY": "Interruttore booleano per includere/escludere la directory di primo livello.",
	"assets/variables.json.CPACK_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS": "Autorizzazioni predefinite per le directory create in modo implicito durante la creazione del pacchetto.",
	"assets/variables.json.CPACK_PACKAGING_INSTALL_PREFIX": "Prefisso usato nel pacchetto compilato.",
	"assets/variables.json.CPACK_SET_DESTDIR": "Interruttore booleano per fare in modo che CPack usi il meccanismo DESTDIR durante la creazione del pacchetto.",
	"assets/variables.json.CPACK_WARN_ON_ABSOLUTE_INSTALL_DESTINATION": "Chiede a CPack di visualizzare un avviso ogni volta che viene rilevato un file con INSTALL DESTINATION assoluto.",
	"assets/variables.json.CTEST_BINARY_DIRECTORY": "Consente di specificare l'impostazione BuildDirectory di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_BUILD_COMMAND": "Consente di specificare l'impostazione MakeCommand di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_BUILD_NAME": "Consente di specificare l'impostazione BuildName di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_BZR_COMMAND": "Consente di specificare l'impostazione BZRCommand di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_BZR_UPDATE_OPTIONS": "Consente di specificare l'impostazione BZRUpdateOptions di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_CHANGE_ID": "Consente di specificare l'impostazione ChangeId di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_CHECKOUT_COMMAND": "Indica al comando ctest_start come effettuare il checkout o inizializzare la directory di origine in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_CONFIGURATION_TYPE": "Consente di specificare l'impostazione DefaultCTestConfigurationType di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_CONFIGURE_COMMAND": "Consente di specificare l'impostazione ConfigureCommand di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_COVERAGE_COMMAND": "Consente di specificare l'impostazione CoverageCommand di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_COVERAGE_EXTRA_FLAGS": "Consente di specificare l'impostazione CoverageExtraFlags di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_CURL_OPTIONS": "Consente di specificare l'impostazione CurlOptions di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_CUSTOM_COVERAGE_EXCLUDE": "Elenco di espressioni regolari che verranno usate per escludere i file in base al percorso dall'output di code coverage del comando ctest_coverage.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_EXCEPTION": "Elenco di espressioni regolari che verranno usate per escludere il rilevamento dei messaggi di errore negli output di compilazione del comando ctest_build.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_MATCH": "Elenco di espressioni regolari che verranno usate per rilevare i messaggi di errore negli output di compilazione del comando ctest_build.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_POST_CONTEXT": "Numero di righe da includere come contesto che seguono un messaggio di errore restituito dal comando ctest_build. L'impostazione predefinita è 10.",
	"assets/variables.json.CTEST_CUSTOM_ERROR_PRE_CONTEXT": "Numero di righe da includere come contesto che precedono un messaggio di errore restituito dal comando ctest_build. L'impostazione predefinita è 10.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE": "Quando si salva l'output di un test non superato, questa è la dimensione massima in byte che verrà raccolta dal comando ctest_test. L'impostazione predefinita è 307200 (300 KiB). Vedere CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION per le possibili modalità di troncamento.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_NUMBER_OF_ERRORS": "Numero massimo di errori rilevati in un singolo passaggio di compilazione. Se viene superato, il comando ctest_test troncherà l'output. L'impostazione predefinita è 50.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_NUMBER_OF_WARNINGS": "Numero massimo di avvisi rilevati in un singolo passaggio di compilazione. Se viene superato, il comando ctest_test troncherà l'output. L'impostazione predefinita è 50.",
	"assets/variables.json.CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE": "Quando si salva l'output di un test superato, questa è la dimensione massima in byte che verrà raccolta dal comando ctest_test. L'impostazione predefinita è 1024 (1 KiB). Vedere CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION per le possibili modalità di troncamento.",
	"assets/variables.json.CTEST_CUSTOM_MEMCHECK_IGNORE": "Elenco di espressioni regolari da usare per escludere i test durante il comando ctest_memcheck.",
	"assets/variables.json.CTEST_CUSTOM_POST_MEMCHECK": "Elenco di comandi da eseguire alla fine del comando ctest_memcheck.",
	"assets/variables.json.CTEST_CUSTOM_POST_TEST": "Elenco di comandi da eseguire alla fine del comando ctest_test.",
	"assets/variables.json.CTEST_CUSTOM_PRE_MEMCHECK": "Elenco di comandi da eseguire all'inizio del comando ctest_memcheck.",
	"assets/variables.json.CTEST_CUSTOM_PRE_TEST": "Elenco di comandi da eseguire all'inizio del comando ctest_test.",
	"assets/variables.json.CTEST_CUSTOM_TESTS_IGNORE": "Elenco di nomi di test da escludere dal set di test eseguiti dal comando ctest_test.",
	"assets/variables.json.CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION": "Imposta la modalità di troncamento dell'output di test nel caso in cui siano configurate le dimensioni massime tramite le variabili CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE o CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE. Per impostazione predefinita, la parte finale dell'output verrà troncata. Altri valori possibili sono middle e head.",
	"assets/variables.json.CTEST_CUSTOM_WARNING_EXCEPTION": "Elenco di espressioni regolari che verranno usate per escludere il rilevamento dei messaggi di avviso negli output di compilazione del comando ctest_build.",
	"assets/variables.json.CTEST_CUSTOM_WARNING_MATCH": "Elenco di espressioni regolari che verranno usate per rilevare i messaggi di avviso negli output di compilazione del comando ctest_build.",
	"assets/variables.json.CTEST_CVS_CHECKOUT": "Deprecato. In alternativa, usare CTEST_CHECKOUT_COMMAND.",
	"assets/variables.json.CTEST_CVS_COMMAND": "Consente di specificare l'impostazione CVSCommand di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_CVS_UPDATE_OPTIONS": "Consente di specificare l'impostazione CVSUpdateOptions di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_DROP_LOCATION": "Consente di specificare l'impostazione DropLocation di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_DROP_METHOD": "Consente di specificare l'impostazione DropMethod di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_DROP_SITE": "Consente di specificare l'impostazione DropSite di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_DROP_SITE_CDASH": "Consente di specificare l'impostazione IsCDash di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_DROP_SITE_PASSWORD": "Consente di specificare l'impostazione DropSitePassword di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_DROP_SITE_USER": "Consente di specificare l'impostazione DropSiteUser di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_EXTRA_COVERAGE_GLOB": "Elenco di espressioni regolari che verranno usate per trovare i file che devono essere inclusi nella code coverage dal comando ctest_coverage.",
	"assets/variables.json.CTEST_GIT_COMMAND": "Consente di specificare l'impostazione GITCommand di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_GIT_INIT_SUBMODULES": "Consente di specificare l'impostazione GITInitSubmodules di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_GIT_UPDATE_CUSTOM": "Consente di specificare l'impostazione GITUpdateCustom di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_GIT_UPDATE_OPTIONS": "Consente di specificare l'impostazione GITUpdateOptions di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_HG_COMMAND": "Consente di specificare l'impostazione HGCommand di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_HG_UPDATE_OPTIONS": "Consente di specificare l'impostazione HGUpdateOptions di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_LABELS_FOR_SUBPROJECTS": "Consente di specificare l'impostazione LabelsForSubprojects di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_COMMAND": "Consente di specificare l'impostazione MemoryCheckCommand di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_COMMAND_OPTIONS": "Consente di specificare l'impostazione MemoryCheckCommandOptions di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_SANITIZER_OPTIONS": "Consente di specificare l'impostazione MemoryCheckSanitizerOptions di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_SUPPRESSIONS_FILE": "Consente di specificare l'impostazione MemoryCheckSuppressionFile di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_MEMORYCHECK_TYPE": "Consente di specificare l'impostazione MemoryCheckType di CTest in uno script client del dashboard di ctest. I valori validi sono Valgrind, Purify, BoundsChecker, DrMemory, CudaSanitizer, ThreadSanitizer, AddressSanitizer, LeakSanitizer, MemorySanitizer e UndefinedBehaviorSanitizer.",
	"assets/variables.json.CTEST_NIGHTLY_START_TIME": "Consente di specificare l'impostazione NightlyStartTime di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_P4_CLIENT": "Consente di specificare l'impostazione P4Client di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_P4_COMMAND": "Consente di specificare l'impostazione P4Command di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_P4_OPTIONS": "Consente di specificare l'impostazione P4Options di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_P4_UPDATE_OPTIONS": "Consente di specificare l'impostazione P4UpdateOptions di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_RESOURCE_SPEC_FILE": "Consente di specificare l'impostazione ResourceSpecFile di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_RUN_CURRENT_SCRIPT": "Se viene impostato su 0, si impedisce che ctest venga eseguito di nuovo quando raggiunge la fine di uno script eseguito chiamando ctest -S.",
	"assets/variables.json.CTEST_SCP_COMMAND": "Opzione legacy. Non usata.",
	"assets/variables.json.CTEST_SCRIPT_DIRECTORY": "Directory contenente lo script CTest di primo livello. Il concetto è simile a CMAKE_SOURCE_DIR.",
	"assets/variables.json.CTEST_SITE": "Consente di specificare l'impostazione Site di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_SOURCE_DIRECTORY": "Consente di specificare l'impostazione SourceDirectory di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_SUBMIT_INACTIVITY_TIMEOUT": "Specificare l'impostazione SubmitInactivityTimeout di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_SUBMIT_URL": "Consente di specificare l'impostazione SubmitURL di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_SVN_COMMAND": "Consente di specificare l'impostazione SVNCommand di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_SVN_OPTIONS": "Consente di specificare l'impostazione SVNOptions di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_SVN_UPDATE_OPTIONS": "Consente di specificare l'impostazione SVNUpdateOptions di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_TEST_LOAD": "Consente di specificare l'impostazione TestLoad nel passaggio Test di CTest di uno script client del dashboard di ctest. Imposta il valore predefinito per l'opzione TEST_LOAD del comando ctest_test.",
	"assets/variables.json.CTEST_TEST_TIMEOUT": "Consente di specificare l'impostazione TimeOut di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_TLS_VERIFY": "Specificare l'impostazione CTest TLSVerify in uno script client del Dashboard di ctest o nel codice CMakeLists.txt del progetto prima di includere il modulo CTest. Il valore è un booleano che indica se verificare il certificato del server durante l'invio a un dashboard tramite URL https://.",
	"assets/variables.json.CTEST_TLS_VERSION": "Specificare l'impostazione CTest TLSVersion in uno script client del Dashboard di ctest o nel codice CMakeLists.txt del progetto prima di includere il modulo CTest. Il valore è una versione TLS minima consentita per l'invio a un dashboard tramite URL https://.",
	"assets/variables.json.CTEST_TRIGGER_SITE": "Opzione legacy. Non usata.",
	"assets/variables.json.CTEST_UPDATE_COMMAND": "Consente di specificare l'impostazione UpdateCommand di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_UPDATE_OPTIONS": "Consente di specificare l'impostazione UpdateOptions di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_UPDATE_VERSION_ONLY": "Consente di specificare l'impostazione UpdateVersionOnly di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_UPDATE_VERSION_OVERRIDE": "Consente di specificare l'impostazione UpdateVersionOverride di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CTEST_USE_LAUNCHERS": "Consente di specificare l'impostazione UseLaunchers di CTest in uno script client del dashboard di ctest.",
	"assets/variables.json.CYGWIN": "È true per Cygwin.",
	"assets/variables.json.ENV": "Operatore per la lettura delle variabili di ambiente.",
	"assets/variables.json.EXECUTABLE_OUTPUT_PATH": "Variabile del percorso dell'eseguibile precedente.",
	"assets/variables.json.GHSMULTI": "1 quando si usa il generatore Green Hill MULTI.",
	"assets/variables.json.IOS": "Impostare su 1 quando il sistema di destinazione (CMAKE_SYSTEM_NAME) è iOS.",
	"assets/variables.json.LIBRARY_OUTPUT_PATH": "Variabile del percorso della libreria precedente.",
	"assets/variables.json.LINUX": "Impostare su true quando il sistema di destinazione è Linux.",
	"assets/variables.json.MINGW": "Impostare su un valore true quando è abilitato almeno un linguaggio con un compilatore destinato all'ABI GNU per Windows (MinGW).",
	"assets/variables.json.MSVC": "Impostare su true quando il compilatore è di una qualche versione di Microsoft Visual C++ o è un altro compilatore che simula la sintassi della riga di comando cl di Visual C++.",
	"assets/variables.json.MSVC10": "Sconsigliato. In alternativa, usare la variabile MSVC_VERSION.",
	"assets/variables.json.MSVC11": "Sconsigliato. In alternativa, usare la variabile MSVC_VERSION.",
	"assets/variables.json.MSVC12": "Sconsigliato. In alternativa, usare la variabile MSVC_VERSION.",
	"assets/variables.json.MSVC14": "Sconsigliato. In alternativa, usare la variabile MSVC_VERSION.",
	"assets/variables.json.MSVC60": "Sconsigliato. In alternativa, usare la variabile MSVC_VERSION.",
	"assets/variables.json.MSVC70": "Sconsigliato. In alternativa, usare la variabile MSVC_VERSION.",
	"assets/variables.json.MSVC71": "Sconsigliato. In alternativa, usare la variabile MSVC_VERSION.",
	"assets/variables.json.MSVC80": "Sconsigliato. In alternativa, usare la variabile MSVC_VERSION.",
	"assets/variables.json.MSVC90": "Sconsigliato. In alternativa, usare la variabile MSVC_VERSION.",
	"assets/variables.json.MSVC_IDE": "È true quando si usa l'IDE di Microsoft Visual C++.",
	"assets/variables.json.MSVC_TOOLSET_VERSION": "Versione dell'eventuale set di strumenti di Microsoft Visual C/C++ in uso. Se si usa un set di strumento di tipo MSVC, questa variabile viene impostata in base alla versione del compilatore specificata dalla variabile MSVC_VERSION.",
	"assets/variables.json.MSVC_VERSION": "Versione di Microsoft Visual C/C++ in uso. Se si usa un compilatore che simula Visual C++, questa variabile viene impostata sulla versione del set di strumenti simulata come indicato dalla definizione del preprocessore _MSC_VER.",
	"assets/variables.json.MSYS": "È true quando si usa il generatore MSYS Makefiles.",
	"assets/variables.json.PackageName_ROOT": "Le chiamate a find_package(<PackageName>) eseguiranno ricerche nei prefissi specificati dalla variabile <PackageName>_ROOT di CMake, dove <PackageName> è il nome (con distinzione tra maiuscole e minuscole) assegnato alla chiamata di find_package e _ROOT è il valore letterale. Ad esempio, con find_package(Foo) verrà eseguita la ricerca nei prefissi specificati nella variabile Foo_ROOT di CMake (se impostata). Vedere il criterio CMP0074.",
	"assets/variables.json.PROJECT-NAME_BINARY_DIR": "Directory dei file binari di primo livello per il progetto denominato.",
	"assets/variables.json.PROJECT-NAME_DESCRIPTION": "Valore assegnato all'opzione DESCRIPTION della chiamata più recente al comando project con il nome di progetto <PROJECT-NAME>, se presente.",
	"assets/variables.json.PROJECT-NAME_HOMEPAGE_URL": "Valore assegnato all'opzione HOMEPAGE_URL della chiamata più recente al comando project con il nome di progetto <PROJECT-NAME>, se presente.",
	"assets/variables.json.PROJECT-NAME_IS_TOP_LEVEL": "Variabile booleana che indica se il progetto denominato è stato chiamato in un file CMakeLists.txt di primo livello.",
	"assets/variables.json.PROJECT-NAME_SOURCE_DIR": "Directory di origine di primo livello per il progetto denominato.",
	"assets/variables.json.PROJECT-NAME_VERSION": "Valore assegnato all'opzione VERSION della chiamata più recente al comando project con il nome di progetto <PROJECT-NAME>, se presente.",
	"assets/variables.json.PROJECT-NAME_VERSION_MAJOR": "Primo componente del numero di versione della variabile <PROJECT-NAME>_VERSION impostato dal comando project.",
	"assets/variables.json.PROJECT-NAME_VERSION_MINOR": "Secondo componente del numero di versione della variabile <PROJECT-NAME>_VERSION impostato dal comando project.",
	"assets/variables.json.PROJECT-NAME_VERSION_PATCH": "Terzo componente del numero di versione della variabile <PROJECT-NAME>_VERSION impostato dal comando project.",
	"assets/variables.json.PROJECT-NAME_VERSION_TWEAK": "Quarto componente del numero di versione della variabile <PROJECT-NAME>_VERSION impostato dal comando project.",
	"assets/variables.json.PROJECT_BINARY_DIR": "Percorso completo della directory di compilazione per il progetto.",
	"assets/variables.json.PROJECT_DESCRIPTION": "Breve descrizione del progetto fornita al comando project.",
	"assets/variables.json.PROJECT_HOMEPAGE_URL": "URL della home page del progetto.",
	"assets/variables.json.PROJECT_IS_TOP_LEVEL": "Variabile booleana che indica se il comando di progetto chiamato più di recente nell'ambito corrente o superiore era presente nel file CMakeLists.txt di primo livello.",
	"assets/variables.json.PROJECT_NAME": "Nome del progetto fornito al comando project.",
	"assets/variables.json.PROJECT_SOURCE_DIR": "Directory di origine dell'ultima chiamata al comando project effettuata nell'ambito della directory corrente o in uno dei relativi elementi padre. Tenere presente che le chiamate a project effettuate all'interno di un ambito di directory figlio, ad esempio dall'interno di una chiamata ad add_subdirectory dall'ambito corrente, non influiscono su questa impostazione.",
	"assets/variables.json.PROJECT_VERSION": "Valore assegnato all'opzione VERSION della chiamata più recente al comando project, se presente.",
	"assets/variables.json.PROJECT_VERSION_MAJOR": "Primo componente del numero di versione della variabile PROJECT_VERSION impostato dal comando project.",
	"assets/variables.json.PROJECT_VERSION_MINOR": "Secondo componente del numero di versione della variabile PROJECT_VERSION impostato dal comando project.",
	"assets/variables.json.PROJECT_VERSION_PATCH": "Terzo componente del numero di versione della variabile PROJECT_VERSION impostato dal comando project.",
	"assets/variables.json.PROJECT_VERSION_TWEAK": "Quarto componente del numero di versione della variabile PROJECT_VERSION impostato dal comando project.",
	"assets/variables.json.UNIX": "Impostare su true quando il sistema di destinazione è UNIX o di tipo UNIX (ad esempio APPLE e CYGWIN). È necessario eseguire una query sulla variabile CMAKE_SYSTEM_NAME se è richiesta una conoscenza più specifica del sistema di destinazione.",
	"assets/variables.json.WIN32": "Impostare su True quando il sistema di destinazione è Windows, incluso Win64.",
	"assets/variables.json.WINCE": "È true quando la variabile CMAKE_SYSTEM_NAME è impostata su WindowsCE.",
	"assets/variables.json.WINDOWS_PHONE": "È true quando la variabile CMAKE_SYSTEM_NAME è impostata su WindowsPhone.",
	"assets/variables.json.WINDOWS_STORE": "È true quando la variabile CMAKE_SYSTEM_NAME è impostata su WindowsStore.",
	"assets/variables.json.XCODE": "È true quando si usa il generatore di Xcode.",
	"assets/variables.json.XCODE_VERSION": "Versione di Xcode (solo generatore di Xcode).",
	"assets/variables.json.ADVANCED": "È true se la voce deve essere nascosta per impostazione predefinita nelle GUI.",
	"assets/variables.json.HELPSTRING": "Guida associata alla voce nelle GUI.",
	"assets/variables.json.MODIFIED": "Proprietà di gestione interna. Non impostare né recuperare.",
	"assets/variables.json.STRINGS": "Enumera i possibili valori di immissione STRING per la selezione della GUI.",
	"assets/variables.json.TYPE": "Tipo di widget per la voce nelle GUI.",
	"assets/variables.json.VALUE": "Valore di una voce della cache.",
	"assets/variables.json.ADDITIONAL_CLEAN_FILES": "Elenco di file o directory delimitati da punto e virgola che verranno rimossi perché inclusi nella destinazione di pulizia globale. È utile per specificare file generati o directory usati da più destinazioni o da CMake stesso oppure generati in modi che non possono essere acquisiti come output o sottoprodotti di comandi personalizzati.",
	"assets/variables.json.ADDITIONAL_MAKE_CLEAN_FILES": "File aggiuntivi da rimuovere durante la fase di pulizia.",
	"assets/variables.json.BINARY_DIR": "Questa proprietà di directory di sola lettura restituisce il percorso assoluto della directory binaria corrispondente all'origine in cui viene letta.",
	"assets/variables.json.BUILDSYSTEM_TARGETS": "Questa proprietà di directory di sola lettura contiene un elenco di destinazioni del sistema di compilazione delimitate da punto e virgola aggiunte nella directory da chiamate ai comandi add_library, add_executable e add_custom_target. L'elenco non include eventuali destinazioni importate o destinazioni alias, ma include le librerie dell'interfaccia. Ogni voce dell'elenco corrisponde al nome logico di una destinazione, che può essere passato all'opzione TARGET del comando get_property.",
	"assets/variables.json.CACHE_VARIABLES": "Elenco delle variabili della cache disponibili nella directory corrente.",
	"assets/variables.json.CLEAN_NO_CUSTOM": "Impostare su true per indicare ai generatori Makefile di non rimuovere gli output di comandi personalizzati per questa directory durante l'operazione make clean. Viene ignorato in altri generatori perché non è possibile implementarlo.",
	"assets/variables.json.CMAKE_CONFIGURE_DEPENDS": "Indica a CMake che sono presenti file di input aggiuntivi per il processo di configurazione. Se un qualsiasi file denominato viene modificato, il sistema di compilazione eseguirà di nuovo CMake per riconfigurare il file e rigenerare il sistema di compilazione.",
	"assets/variables.json.COMPILE_DEFINITIONS": "Definizioni del preprocessore per la compilazione delle origini di una destinazione.",
	"assets/variables.json.COMPILE_DEFINITIONS_CONFIG": "Ignorato. Vedere il criterio CMake CMP0043.",
	"assets/variables.json.COMPILE_OPTIONS": "Elenco di opzioni da passare al compilatore.",
	"assets/variables.json.DEFINITIONS": "Solo per la compatibilità con CMake 2.4. In alternativa usare COMPILE_DEFINITIONS.",
	"assets/variables.json.EXCLUDE_FROM_ALL": "Impostare questa proprietà della directory su un valore true in una sottodirectory per escludere le relative destinazioni dalla destinazione \"all\" dei relativi predecessori. Se viene esclusa, eseguendo, ad esempio, make nella directory padre le destinazioni della sottodirectory non verranno compilate per impostazione predefinita. Non ha effetto sulla destinazione \"all\" della sottodirectory stessa. Se, ad esempio, si esegue make all'interno della sottodirectory, le relative destinazioni verranno compilate.",
	"assets/variables.json.IMPLICIT_DEPENDS_INCLUDE_TRANSFORM": "Consente di specificare le trasformazioni di riga #include per le dipendenze in una directory.",
	"assets/variables.json.IMPORTED_TARGETS": "Questa proprietà di directory di sola lettura contiene un elenco di destinazioni importate delimitate da punto e virgola aggiunte nella directory da chiamate ai comandi add_library e add_executable. Ogni voce dell'elenco corrisponde al nome logico di una destinazione, che può essere passato all'opzione TARGET del comando get_property quando viene chiamato nella stessa directory.",
	"assets/variables.json.INCLUDE_DIRECTORIES": "Elenco delle directory di ricerca dei file di inclusione del preprocessore.",
	"assets/variables.json.INCLUDE_REGULAR_EXPRESSION": "File di inclusione che analizza l'espressione regolare.",
	"assets/variables.json.INTERPROCEDURAL_OPTIMIZATION": "Questa proprietà della directory non esiste più.",
	"assets/variables.json.INTERPROCEDURAL_OPTIMIZATION_CONFIG": "Questa proprietà della directory non esiste più.",
	"assets/variables.json.LABELS": "Consente di specificare un elenco di etichette di testo associate a una directory e a tutte le relative sottodirectory. Equivale a impostare la proprietà di destinazione LABELS e la proprietà di test LABELS in tutte le destinazioni e in tutti i test nella directory e nelle sottodirectory correnti. Nota: per la propagazione delle etichette alle destinazioni, è necessario che i launcher siano abilitati.",
	"assets/variables.json.LINK_DIRECTORIES": "Elenco delle directory di ricerca del linker.",
	"assets/variables.json.LINK_OPTIONS": "Elenco delle opzioni da usare per il passaggio di collegamento della libreria condivisa, del modulo e delle destinazioni dell'eseguibile, nonché per il passaggio di collegamento del dispositivo.",
	"assets/variables.json.LISTFILE_STACK": "Stack corrente dei listfile attualmente in fase di elaborazione.",
	"assets/variables.json.MACROS": "Elenco dei comandi macro disponibili nella directory corrente.",
	"assets/variables.json.PARENT_DIRECTORY": "Directory di origine che ha aggiunto la sottodirectory corrente.",
	"assets/variables.json.RULE_LAUNCH_COMPILE": "Consente di specificare un launcher per le regole di compilazione.",
	"assets/variables.json.RULE_LAUNCH_CUSTOM": "Consente di specificare un launcher per le regole personalizzate.",
	"assets/variables.json.RULE_LAUNCH_LINK": "Consente di specificare un launcher per le regole di collegamento.",
	"assets/variables.json.SOURCE_DIR": "Questa proprietà di directory di sola lettura restituisce il percorso assoluto della directory di origine in cui viene letta.",
	"assets/variables.json.SUBDIRECTORIES": "Questa proprietà di directory di sola lettura contiene un elenco di sottodirectory delimitate da punto e virgola elaborate finora dai comandi add_subdirectory o subdirs. Ogni voce corrisponde al percorso assoluto della directory di origine (contenente il file CMakeLists.txt). È adatto per passare all'opzione DIRECTORY del comando get_property.",
	"assets/variables.json.SYSTEM": "Questa proprietà di directory viene usata per inizializzare la proprietà di destinazione SYSTEM per le destinazioni non importate create in tale directory. È impostata su true da add_subdirectory e FetchContent_Declare quando l'opzione SYSTEM viene fornita come argomento per tali comandi.",
	"assets/variables.json.TESTS": "Elenco di test.",
	"assets/variables.json.TEST_INCLUDE_FILE": "Deprecato. In alternativa, usare TEST_INCLUDE_FILES.",
	"assets/variables.json.TEST_INCLUDE_FILES": "Elenco di file cmake che saranno inclusi durante l'esecuzione di ctest.",
	"assets/variables.json.VARIABLES": "Elenco delle variabili definite nella directory corrente.",
	"assets/variables.json.VS_GLOBAL_SECTION_POST_section": "Consente di specificare una sezione globale postSolution in Visual Studio.",
	"assets/variables.json.VS_GLOBAL_SECTION_PRE_section": "Consente di specificare una sezione globale preSolution in Visual Studio.",
	"assets/variables.json.VS_STARTUP_PROJECT": "Consente di specificare il progetto di avvio predefinito in una soluzione Visual Studio.",
	"assets/variables.json.ALLOW_DUPLICATE_CUSTOM_TARGETS": "Consente la creazione di destinazioni personalizzate duplicate.",
	"assets/variables.json.AUTOGEN_SOURCE_GROUP": "Nome del source_group per i file generati da AUTOMOC, AUTORCC e AUTOUIC.",
	"assets/variables.json.AUTOGEN_TARGETS_FOLDER": "Nome di FOLDER per le destinazioni di *_autogen che vengono aggiunte automaticamente da CMake per le destinazioni in cui AUTOMOC è abilitato.",
	"assets/variables.json.AUTOMOC_SOURCE_GROUP": "Nome del source_group per i file generati da AUTOMOC.",
	"assets/variables.json.AUTOMOC_TARGETS_FOLDER": "Nome di FOLDER per le destinazioni di *_autogen che vengono aggiunte automaticamente da CMake per le destinazioni in cui AUTOMOC è abilitato.",
	"assets/variables.json.AUTORCC_SOURCE_GROUP": "Nome del source_group per i file generati da AUTORCC.",
	"assets/variables.json.AUTOUIC_SOURCE_GROUP": "Nome del source_group per i file generati da AUTOUIC.",
	"assets/variables.json.CMAKE_CUDA_KNOWN_FEATURES": "Elenco delle funzionalità di CUDA riconosciute da questa versione di CMake.",
	"assets/variables.json.CMAKE_CXX_KNOWN_FEATURES": "Elenco delle funzionalità di C++ riconosciute da questa versione di CMake.",
	"assets/variables.json.CMAKE_C_KNOWN_FEATURES": "Elenco delle funzionalità di C riconosciute da questa versione di CMake.",
	"assets/variables.json.CMAKE_HIP_KNOWN_FEATURES": "Elenco delle funzionalità HIP riconosciute da questa versione di CMake.",
	"assets/variables.json.CMAKE_ROLE": "Indica la modalità in cui si trova lo script in esecuzione corrente. Può essere uno dei valori seguenti:",
	"assets/variables.json.DEBUG_CONFIGURATIONS": "Consente di specificare le configurazioni per il debug.",
	"assets/variables.json.DISABLED_FEATURES": "Elenco delle funzionalità che vengono disabilitate durante l'esecuzione di CMake.",
	"assets/variables.json.ECLIPSE_EXTRA_CPROJECT_CONTENTS": "Contenuto aggiuntivo da inserire nel file cproject di Eclipse generato.",
	"assets/variables.json.ECLIPSE_EXTRA_NATURES": "Elenco di elementi nature da aggiungere al file project di Eclipse generato.",
	"assets/variables.json.ENABLED_FEATURES": "Elenco delle funzionalità che vengono abilitate durante l'esecuzione di CMake.",
	"assets/variables.json.ENABLED_LANGUAGES": "Proprietà di sola lettura che contiene l'elenco dei linguaggi attualmente abilitati",
	"assets/variables.json.FIND_LIBRARY_USE_LIB32_PATHS": "Indica se il comando find_library deve eseguire automaticamente la ricerca nelle directory lib32.",
	"assets/variables.json.FIND_LIBRARY_USE_LIB64_PATHS": "Indica se il comando find_library deve eseguire automaticamente la ricerca nelle directory lib64.",
	"assets/variables.json.FIND_LIBRARY_USE_LIBX32_PATHS": "Indica se il comando find_library deve eseguire automaticamente la ricerca nelle directory libx32.",
	"assets/variables.json.FIND_LIBRARY_USE_OPENBSD_VERSIONING": "Indica se il comando find_library deve cercare le librerie condivise di tipo OpenBSD.",
	"assets/variables.json.GENERATOR_IS_MULTI_CONFIG": "Proprietà di sola lettura che è true per i generatori a configurazione multipla.",
	"assets/variables.json.GLOBAL_DEPENDS_DEBUG_MODE": "Abilita la modalità di debug del grafico globale delle dipendenze della destinazione.",
	"assets/variables.json.GLOBAL_DEPENDS_NO_CYCLES": "Non consente i cicli del grafico globale delle dipendenze della destinazione.",
	"assets/variables.json.INSTALL_PARALLEL": "Abilita l'opzione di installazione parallela per il generatore Ninja.",
	"assets/variables.json.IN_TRY_COMPILE": "Proprietà di sola lettura che è true durante una configurazione di prova e compilazione.",
	"assets/variables.json.JOB_POOLS": "Solo Ninja: elenco dei pool disponibili.",
	"assets/variables.json.PACKAGES_FOUND": "Elenco dei pacchetti trovati durante l'esecuzione di CMake.",
	"assets/variables.json.PACKAGES_NOT_FOUND": "Elenco dei pacchetti che non sono stati trovati durante l'esecuzione di CMake.",
	"assets/variables.json.PREDEFINED_TARGETS_FOLDER": "Nome di FOLDER per le destinazioni che vengono aggiunte automaticamente da CMake.",
	"assets/variables.json.PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE": "Quando questa proprietà globale è impostata su true, la variabile CMAKE_PROJECT_TOP_LEVEL_INCLUDES viene propagata alle chiamate try_compile che utilizzano la firma dell'intero progetto. Le chiamate alla firma del file di origine non sono interessate da questa proprietà. Per impostazione predefinita PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE non è configurato.",
	"assets/variables.json.REPORT_UNDEFINED_PROPERTIES": "Se è impostato, restituisce a questo file tutte le proprietà non definite.",
	"assets/variables.json.RULE_MESSAGES": "Consente di specificare se restituire un messaggio per ogni regola di make.",
	"assets/variables.json.TARGET_ARCHIVES_MAY_BE_SHARED_LIBS": "Impostare se alle librerie condivise possono essere assegnati gli stessi nomi degli archivi.",
	"assets/variables.json.TARGET_MESSAGES": "Consente di specificare se restituire il completamento di ogni destinazione.",
	"assets/variables.json.TARGET_SUPPORTS_SHARED_LIBS": "Indica se la piattaforma di destinazione supporta le librerie condivise.",
	"assets/variables.json.USE_FOLDERS": "Controlla se utilizzare la proprietà di destinazione FOLDER per organizzare le destinazioni in cartelle. Il valore di USE_FOLDERS alla fine del file di CMakeLists.txt di primo livello determina il comportamento.",
	"assets/variables.json.XCODE_EMIT_EFFECTIVE_PLATFORM_NAME": "Controlla che il generatore di Xcode rilasci EFFECTIVE_PLATFORM_NAME.",
	"assets/variables.json.CPACK_DESKTOP_SHORTCUTS": "Consente di specificare un elenco di nomi di collegamento che devono essere creati sul desktop per questo file.",
	"assets/variables.json.CPACK_NEVER_OVERWRITE": "Richiede che questo file non venga sovrascritto durante l'installazione o la reinstallazione.",
	"assets/variables.json.CPACK_PERMANENT": "Richiede che questo file non venga rimosso durante la disinstallazione.",
	"assets/variables.json.CPACK_STARTUP_SHORTCUTS": "Consente di specificare un elenco di nomi di collegamento che devono essere creati nella cartella di esecuzione automatica per questo file.",
	"assets/variables.json.CPACK_START_MENU_SHORTCUTS": "Consente di specificare un elenco di nomi di collegamento che devono essere creati nel menu Start per questo file.",
	"assets/variables.json.CPACK_WIX_ACL": "Consente di specificare le autorizzazioni di accesso per i file o le directory installate da un programma di installazione WiX.",
	"assets/variables.json.ABSTRACT": "Indica se questo file di origine è una classe astratta.",
	"assets/variables.json.AUTORCC_OPTIONS": "Opzioni aggiuntive per rcc quando si usa AUTORCC",
	"assets/variables.json.AUTOUIC_OPTIONS": "Opzioni aggiuntive per uic quando si usa AUTOUIC",
	"assets/variables.json.COMPILE_FLAGS": "Flag aggiuntivi da aggiungere quando si compila questo file di origine.",
	"assets/variables.json.CXX_SCAN_FOR_MODULES": "CXX_SCAN_FOR_MODULES è un valore booleano che specifica se CMake analizzerà l'origine per individuare le dipendenze del modulo C++. Vedere anche il CXX_SCAN_FOR_MODULES per le impostazioni a livello di destinazione.",
	"assets/variables.json.EXTERNAL_OBJECT": "Se è impostato su true, è un file oggetto.",
	"assets/variables.json.Fortran_FORMAT": "Impostare su FIXED o FREE per indicare il layout di origine Fortran.",
	"assets/variables.json.Fortran_PREPROCESS": "Controlla se il file di origine FORTRAN deve essere pre-elaborato senza condizioni.",
	"assets/variables.json.GENERATED": "Indica se questo file di origine viene generato durante il processo di compilazione o CMake.",
	"assets/variables.json.HEADER_FILE_ONLY": "Indica se questo file di origine è solo un file di intestazione.",
	"assets/variables.json.KEEP_EXTENSION": "Imposta il file di output in modo che abbia la stessa estensione del file di origine.",
	"assets/variables.json.LANGUAGE": "Consente di specificare il linguaggio di programmazione in cui è scritto un file di origine.",
	"assets/variables.json.LOCATION": "Percorso completo di un file di origine.",
	"assets/variables.json.MACOSX_PACKAGE_LOCATION": "Consente di inserire un file di origine in un bundle dell'applicazione (MACOSX_BUNDLE), in un bundle Core Foundation (BUNDLE) o in un bundle del framework (FRAMEWORK). È applicabile a macOS e iOS.",
	"assets/variables.json.OBJECT_DEPENDS": "File aggiuntivi da cui dipende un file oggetto compilato.",
	"assets/variables.json.OBJECT_OUTPUTS": "Output aggiuntivi per una regola de generatori Ninja o Makefile.",
	"assets/variables.json.SKIP_AUTOGEN": "Esclude il file di origine dall'elaborazione AUTOMOC, AUTOUIC e AUTORCC (per i progetti Qt).",
	"assets/variables.json.SKIP_AUTOMOC": "Esclude il file di origine dall'elaborazione AUTOMOC (per i progetti Qt).",
	"assets/variables.json.SKIP_AUTORCC": "Esclude il file di origine dall'elaborazione AUTORCC (per i progetti Qt).",
	"assets/variables.json.SKIP_AUTOUIC": "Esclude il file di origine dall'elaborazione AUTOUIC (per i progetti Qt).",
	"assets/variables.json.SKIP_LINTING": "Questa proprietà consente di escludere un file di origine specifico dal processo di linting. Il processo di linting prevede l'esecuzione di strumenti quali <LANG>_CPPLINT, <LANG>_CLANG_TIDY, <LANG>_CPPCHECK e <LANG>_INCLUDE_WHAT_YOU_USE nei file di origine, nonché la compilazione dei file di intestazione come parte di VERIFY_INTERFACE_HEADER_SETS. Impostando SKIP_LINTING su un file di origine, gli strumenti di linting indicati non verranno eseguiti per il file specifico.",
	"assets/variables.json.SKIP_PRECOMPILE_HEADERS": "Il file di origine è stato ignorato dalla funzionalità PRECOMPILE_HEADERS.",
	"assets/variables.json.SKIP_UNITY_BUILD_INCLUSION": "Se si imposta questa proprietà su true, il file di origine verrà ignorato dalle compilazioni Unity quando la proprietà UNITY_BUILD della relativa destinazione associata è impostata su true. Il file di origine verrà invece compilato autonomamente come avviene quando le compilazioni Unity sono disabilitate.",
	"assets/variables.json.Swift_DEPENDENCIES_FILE": "Questa proprietà imposta il percorso del file di dipendenze Swift (swiftdeps) per l'origine. Se non ne viene specificato uno, verrà usato quello predefinito denominato <OBJECT>.swiftdeps.",
	"assets/variables.json.Swift_DIAGNOSTICS_FILE": "Questa proprietà controlla la posizione di serializzazione delle diagnostiche Swift.",
	"assets/variables.json.SYMBOLIC": "Indica se è solo un nome per una regola.",
	"assets/variables.json.UNITY_GROUP": "Questa proprietà controlla il bucket di cui farà parte l'origine quando UNITY_BUILD_MODE è impostato su GROUP.",
	"assets/variables.json.VS_COPY_TO_OUT_DIR": "Imposta il tag <CopyToOutputDirectory> per un file di origine in un file di progetto di Visual Studio. I valori validi sono Never, Always e PreserveNewest.",
	"assets/variables.json.VS_CSHARP_tagname": "Configurazione specifica del file di origine per Visual Studio e CSharp.",
	"assets/variables.json.VS_DEPLOYMENT_CONTENT": "Contrassegna un file di origine come contenuto per la distribuzione con un'applicazione Windows Phone o Windows Store se compilato con generatori di Visual Studio <cmake-generators(7)>. Il valore restituito deve essere 1 o 0 e può usare espressioni del generatore <cmake-generator-expressions(7)> per effettuare la scelta in base alla configurazione della build. La voce del file con estensione vcxproj per il file di origine sarà contrassegnata con DeploymentContent o ExcludedFromBuild rispettivamente per i valori 1 e 0.",
	"assets/variables.json.VS_DEPLOYMENT_LOCATION": "Consente di specificare il percorso di distribuzione di un file di origine del contenuto con un'applicazione Windows Phone o Windows Store se compilato con generatori di Visual Studio <cmake-generators(7)>. Questa proprietà è applicabile solo se si usa VS_DEPLOYMENT_CONTENT. Il valore rappresenta il percorso relativo al pacchetto dell'app e si applica a tutte le configurazioni.",
	"assets/variables.json.VS_INCLUDE_IN_VSIX": "Proprietà booleana per specificare se il file deve essere incluso in un pacchetto di estensione VSIX (Visual Studio Integration Extension). È necessario per lo sviluppo di estensioni di Visual Studio.",
	"assets/variables.json.VS_RESOURCE_GENERATOR": "Questa proprietà consente di specificare il generatore di risorse da usare per questo file. Se non è impostata, l'impostazione predefinita è PublicResXFileCodeGenerator.",
	"assets/variables.json.VS_SETTINGS": "Imposta i metadati di qualsiasi elemento in un file.",
	"assets/variables.json.VS_SHADER_DISABLE_OPTIMIZATIONS": "Disabilita le ottimizzazioni del compilatore per un file di origine con estensione hlsl. Aggiunge il flag -Od alla riga di comando per lo strumento FxCompiler. Specificare il valore true per consentire a questa proprietà di disabilitare le ottimizzazioni del compilatore.",
	"assets/variables.json.VS_SHADER_ENABLE_DEBUG": "Abilita le informazioni di debug per un file di origine con estensione hlsl. Aggiunge il flag -Zi alla riga di comando per lo strumento FxCompiler. Specificare il valore true per generare le informazioni di debug per lo shader compilato.",
	"assets/variables.json.VS_SHADER_ENTRYPOINT": "Consente di specificare il nome del punto di ingresso per lo shader di un file di origine con estensione hlsl.",
	"assets/variables.json.VS_SHADER_FLAGS": "Consente di impostare altri flag di shader Visual Studio per un file di origine con estensione hlsl.",
	"assets/variables.json.VS_SHADER_MODEL": "Consente di specificare il modello di shader di un file di origine con estensione hlsl. Alcuni tipi di shader possono essere usati solo con modelli di shader recenti",
	"assets/variables.json.VS_SHADER_OBJECT_FILE_NAME": "Consente di specificare un nome di file per il file oggetto shader compilato per un file di origine con estensione hlsl. Aggiunge il flag -Fo alla riga di comando per lo strumento FxCompiler.",
	"assets/variables.json.VS_SHADER_OUTPUT_HEADER_FILE": "Consente di impostare il nome del file di intestazione di output contenente il codice oggetto di un file di origine con estensione hlsl.",
	"assets/variables.json.VS_SHADER_TYPE": "Consente di impostare il tipo di shader Visual Studio per un file di origine con estensione hlsl.",
	"assets/variables.json.VS_SHADER_VARIABLE_NAME": "Consente di impostare il nome della variabile nel file di intestazione contenente il codice oggetto di un file di origine con estensione hlsl.",
	"assets/variables.json.VS_TOOL_OVERRIDE": "Esegue l'override dello strumento predefinito di Visual Studio che verrà applicato al file di origine con un nuovo strumento non basato sull'estensione del file.",
	"assets/variables.json.VS_XAML_TYPE": "Contrassegna un file di origine XAML (Extensible Application Markup Language) con un tipo diverso da quello Page predefinito. In genere si imposta il file App.xaml predefinito come ApplicationDefinition.",
	"assets/variables.json.WRAP_EXCLUDE": "Esclude questo file di origine da qualsiasi tecnica di wrapping del codice.",
	"assets/variables.json.XCODE_EXPLICIT_FILE_TYPE": "Consente di impostare l'attributo explicitFileType di Xcode sul relativo riferimento a un file di origine. CMake calcola un valore predefinito in base all'estensione del file, ma questa proprietà consente di indicarlo in modo esplicito.",
	"assets/variables.json.XCODE_FILE_ATTRIBUTES": "Aggiunge valori all'impostazione ATTRIBUTES di Xcode nel relativo riferimento a un file di origine. Tra le altre cose, può essere usato per impostare il ruolo su un file con estensione mig:",
	"assets/variables.json.XCODE_LAST_KNOWN_FILE_TYPE": "Consente di impostare l'attributo lastKnownFileType di Xcode sul relativo riferimento a un file di origine. CMake calcola un valore predefinito in base all'estensione del file, ma questa proprietà consente di indicarlo in modo esplicito.",
	"assets/variables.json.ATTACHED_FILES": "Consente di allegare un elenco di file a un invio al dashboard.",
	"assets/variables.json.ATTACHED_FILES_ON_FAIL": "Consente di allegare un elenco di file a un invio al dashboard se il test non viene superato.",
	"assets/variables.json.COST": "Questa proprietà descrive il costo di un test. Quando sono abilitati i test in parallelo, i test nel set di test verranno eseguiti in ordine decrescente in termini di costo. I progetti possono definire in modo esplicito il costo di un test impostando la proprietà su un valore a virgola mobile.",
	"assets/variables.json.DEPENDS": "Consente di specificare che questo test deve essere eseguito solo dopo l'elenco di test specificato.",
	"assets/variables.json.DISABLED": "Se è impostato su True, il test verrà ignorato e il relativo stato sarà 'Not Run'. Un test DISABLED non verrà conteggiato nel numero totale di test e lo stato di completamento restituito a CDash sarà Disabled.",
	"assets/variables.json.ENVIRONMENT": "Consente di specificare le variabili di ambiente che devono essere definite per l'esecuzione di un test.",
	"assets/variables.json.ENVIRONMENT_MODIFICATION": "Specificare le variabili di ambiente da modificare per l'esecuzione di un test. Si noti che le operazioni eseguite da questa proprietà vengono eseguite dopo l'applicazione della proprietà ENVIRONMENT.",
	"assets/variables.json.FAIL_REGULAR_EXPRESSION": "Se l'output del test (stdout o stderr) corrisponde a questa espressione regolare, il test non riuscirà, indipendentemente dal codice di uscita del processo. I test che superano il timeout specificato da TIMEOUT hanno esito negativo indipendentemente da FAIL_REGULAR_EXPRESSION. Qualsiasi codice restituito diverso da zero o errori di test a livello di sistema, inclusi errori di segmentazione, interruzione del segnale o errori heap, non supera il test anche se l'espressione regolare non corrisponde.",
	"assets/variables.json.FIXTURES_CLEANUP": "Consente di specificare un elenco di fixture per le quali il test deve essere considerato come test di pulizia. Questi nomi di fixture sono diversi dai nomi dei test case e non devono necessariamente essere simili ai nomi dei test ad essi associati.",
	"assets/variables.json.FIXTURES_REQUIRED": "Consente di specificare un elenco di fixture richieste dal test. I nomi di fixture fanno distinzione tra maiuscole e minuscole e non devono necessariamente essere simili ai nomi dei test ad essi associati.",
	"assets/variables.json.FIXTURES_SETUP": "Consente di specificare un elenco di fixture per le quali il test deve essere considerato come test di configurazione. Questi nomi di fixture sono diversi dai nomi dei test case e non devono necessariamente essere simili ai nomi dei test ad essi associati.",
	"assets/variables.json.GENERATED_RESOURCE_SPEC_FILE": "Percorso del file delle specifiche della risorsa generato dinamicamente <ctest-resource-dynamically-generated-spec-file> generato da questo test.",
	"assets/variables.json.MEASUREMENT": "Consente di specificare una misurazione e un valore CDASH da restituire per un test.",
	"assets/variables.json.PASS_REGULAR_EXPRESSION": "L'output del test (stdout o stderr) deve corrispondere a questa espressione regolare per consentire il superamento del test. Il codice di uscita del processo viene ignorato. I test che superano il timeout specificato da TIMEOUT hanno ancora esito negativo indipendentemente da PASS_REGULAR_EXPRESSION. Gli errori di test a livello di sistema, inclusi errori di segmentazione, interruzioni del segnale o heap, potrebbero non riuscire a eseguire il test anche se viene trovata una corrispondenza con PASS_REGULAR_EXPRESSION.",
	"assets/variables.json.PROCESSORS": "Impostare per specificare il numero di slot di processo richiesti per questo test. Se non è impostato, l'impostazione predefinita è 1 processore.",
	"assets/variables.json.PROCESSOR_AFFINITY": "Impostare su true per chiedere a CTest di avviare il processo di test con affinità della CPU per un set fisso di processori. Se è abilitato e supportato per la piattaforma corrente, CTest sceglierà un insieme di processori da inserire nella maschera di affinità della CPU all'avvio del processo di test. Il numero di processori del set è determinato dalla proprietà PROCESSORS test o dal numero di processori disponibili per CTest, a seconda di quale dei due è minore. Il set di processori scelti sarà disgiunto dai processori assegnati ad altri test in esecuzione simultaneamente per i quali è abilitata anche la proprietà PROCESSOR_AFFINITY.",
	"assets/variables.json.REQUIRED_FILES": "Elenco di file necessari per eseguire il test. I nomi file sono relativi all'impostazione WORKING_DIRECTORY del test a meno che non venga specificato un percorso assoluto.",
	"assets/variables.json.RESOURCE_GROUPS": "Consente di specificare le risorse richieste da un test, raggruppate in modo significativo per il test. Per altre informazioni sull'integrazione di questa proprietà nella funzionalità di allocazione delle risorse di CTest, vedere l'allocazione delle risorse <ctest-resource-allocation>.",
	"assets/variables.json.RESOURCE_LOCK": "Consente di specificare un elenco delle risorse bloccate da questo test.",
	"assets/variables.json.RUN_SERIAL": "Non esegue questo test in parallelo con altri test.",
	"assets/variables.json.SKIP_REGULAR_EXPRESSION": "Se l'output del test (stderr o stdout) corrisponde a questa espressione regolare, il test verrà contrassegnato come ignorato, indipendentemente dal codice di uscita del processo. I test che superano il timeout specificato da TIMEOUT hanno ancora esito negativo indipendentemente da SKIP_REGULAR_EXPRESSION. Gli errori di test a livello di sistema, inclusi errori di segmentazione, interruzioni del segnale o heap, potrebbero non riuscire a eseguire il test anche se viene trovata una corrispondenza con l’espressione regolare.",
	"assets/variables.json.SKIP_RETURN_CODE": "Restituisce il codice per contrassegnare un test come ignorato.",
	"assets/variables.json.TIMEOUT": "Indica il numero di secondi per consentire l'esecuzione di questo test.",
	"assets/variables.json.TIMEOUT_AFTER_MATCH": "Modifica la durata del timeout di un test dopo che nell'output è stata trovata una riga corrispondente.",
	"assets/variables.json.TIMEOUT_SIGNAL_GRACE_PERIOD": "Se la proprietà test TIMEOUT_SIGNAL_NAME è impostata, questa proprietà specifica il numero di secondi di attesa per l'interruzione di un processo di test dopo l'invio del segnale personalizzato. In caso contrario, questa proprietà non ha significato.",
	"assets/variables.json.TIMEOUT_SIGNAL_NAME": "Specificare un segnale personalizzato da inviare a un processo di test quando viene raggiunto il timeout. Questa opzione è disponibile solo nelle piattaforme che supportano i segnali POSIX. Non è disponibile in Windows.",
	"assets/variables.json.WILL_FAIL": "Se true, inverte i criteri di superamento/non superamento del test. I test per cui WILL_FAIL è true hanno esito negativo con codice restituito 0 e passano con codice restituito diverso da zero. I test che superano il timeout specificato da TIMEOUT hanno ancora esito negativo indipendentemente da WILL_FAIL. Gli errori di test a livello di sistema, inclusi errori di segmentazione, interruzioni del segnale o heap, potrebbero non riuscire a eseguire il test anche se WILL_FAIL è true.",
	"assets/variables.json.WORKING_DIRECTORY": "Directory da cui verrà chiamato l'eseguibile del test.",
	"assets/variables.json.AIX_EXPORT_ALL_SYMBOLS": "In AIX CMake esporta automaticamente tutti i simboli dalle librerie condivise e dagli eseguibili con il set di proprietà di destinazione ENABLE_EXPORTS. Disabilitare esplicitamente questa proprietà booleana per sospendere il comportamento e non esportare simboli per impostazione predefinita. In questo caso è previsto che il progetto usi altri strumenti per esportare alcuni simboli.",
	"assets/variables.json.ALIASED_TARGET": "Nome della destinazione impostata come alias da questa destinazione.",
	"assets/variables.json.ALIAS_GLOBAL": "Proprietà di sola lettura che indica se una destinazione ALIAS è visibile a livello globale.",
	"assets/variables.json.ANDROID_ANT_ADDITIONAL_OPTIONS": "Consente di impostare le opzioni aggiuntive per il sistema di compilazione Android Ant. Si tratta di un valore stringa che contiene tutte le opzioni della riga di comando ` per la compilazione Ant. Questa proprietà è inizializzata dal valore della variabile CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS se viene impostata durante la creazione di una destinazione.",
	"assets/variables.json.ANDROID_API": "Quando si esegue la compilazione incrociata per Android con NVIDIA Nsight Tegra Visual Studio Edition, questa proprietà consente di impostare la versione dell'API di destinazione Android (ad esempio 15). Il numero di versione deve essere un intero decimale positivo. Questa proprietà è inizializzata dal valore della variabile CMAKE_ANDROID_API se viene impostata durante la creazione di una destinazione.",
	"assets/variables.json.ANDROID_API_MIN": "Consente di impostare la versione dell'API MIN Android (ad esempio 9). Il numero di versione deve essere un intero decimale positivo. Questa proprietà è inizializzata dal valore della variabile CMAKE_ANDROID_API_MIN se viene impostata durante la creazione di una destinazione. Il codice nativo viene compilato con questa versione dell'API.",
	"assets/variables.json.ANDROID_ARCH": "Quando si esegue la compilazione incrociata per Android con NVIDIA Nsight Tegra Visual Studio Edition, questa proprietà consente di impostare l'architettura di destinazione Android.",
	"assets/variables.json.ANDROID_ASSETS_DIRECTORIES": "Consente di impostare le directory di asset Android da copiare nella cartella principale degli asset prima della compilazione. Si tratta di una proprietà stringa che contiene percorsi di directory delimitati da punto e virgola. Questa proprietà è inizializzata dal valore della variabile CMAKE_ANDROID_ASSETS_DIRECTORIES se viene impostata durante la creazione di una destinazione.",
	"assets/variables.json.ANDROID_GUI": "Quando si esegue la compilazione incrociata per Android con NVIDIA Nsight Tegra Visual Studio Edition, questa proprietà consente di specificare se compilare un eseguibile come pacchetto dell'applicazione in Android.",
	"assets/variables.json.ANDROID_JAR_DEPENDENCIES": "Consente di impostare la proprietà Android che specifica le dipendenze JAR. Si tratta di una proprietà con valore stringa. Questa proprietà è inizializzata dal valore della variabile CMAKE_ANDROID_JAR_DEPENDENCIES se viene impostata durante la creazione di una destinazione.",
	"assets/variables.json.ANDROID_JAR_DIRECTORIES": "Consente di impostare la proprietà Android che specifica le directory in cui cercare le librerie JAR.",
	"assets/variables.json.ANDROID_JAVA_SOURCE_DIR": "Consente di impostare la proprietà Android che definisce le directory radice del codice sorgente Java. Si tratta di una proprietà che contiene i percorsi di directory delimitati da punto e virgola. Questa proprietà è inizializzata dal valore della variabile CMAKE_ANDROID_JAVA_SOURCE_DIR se viene impostata durante la creazione di una destinazione.",
	"assets/variables.json.ANDROID_NATIVE_LIB_DEPENDENCIES": "Consente di impostare la proprietà Android che specifica le dipendenze con estensione so. Si tratta di una proprietà stringa.",
	"assets/variables.json.ANDROID_NATIVE_LIB_DIRECTORIES": "Consente di impostare la proprietà Android che specifica le directory in cui cercare le librerie con estensione so.",
	"assets/variables.json.ANDROID_PROCESS_MAX": "Consente di impostare la proprietà Android che definisce il numero massimo di processi in parallelo di un compilatore Android NDK (ad esempio 4). Questa proprietà è inizializzata dal valore della variabile CMAKE_ANDROID_PROCESS_MAX se viene impostata durante la creazione di una destinazione.",
	"assets/variables.json.ANDROID_PROGUARD": "Quando questa proprietà è impostata su true, viene abilitato lo strumento ProGuard che riduce, ottimizza e offusca il codice rimuovendo il codice inutilizzato e rinominando classi, campi e metodi con nomi poco chiari dal punto di vista semantico. Questa proprietà è inizializzata dal valore della variabile CMAKE_ANDROID_PROGUARD se viene impostata durante la creazione di una destinazione.",
	"assets/variables.json.ANDROID_PROGUARD_CONFIG_PATH": "Consente di impostare la proprietà Android che specifica il percorso del file config di ProGuard. Lasciare vuoto per usare il file predefinito. Si tratta di una proprietà stringa che contiene il percorso del file config di ProGuard. Questa proprietà è inizializzata dal valore della variabile CMAKE_ANDROID_PROGUARD_CONFIG_PATH se viene impostata durante la creazione di una destinazione.",
	"assets/variables.json.ANDROID_SECURE_PROPS_PATH": "Consente di impostare la proprietà Android che indica il percorso del file di proprietà sicure. Si tratta di una proprietà stringa che contiene il percorso del file. Questa proprietà è inizializzata dal valore della variabile CMAKE_ANDROID_SECURE_PROPS_PATH se viene impostata durante la creazione di una destinazione.",
	"assets/variables.json.ANDROID_SKIP_ANT_STEP": "Consente di impostare la proprietà Android che definisce se ignorare o meno il passaggio di compilazione Ant. Si tratta di una proprietà booleana inizializzata dal valore della variabile CMAKE_ANDROID_SKIP_ANT_STEP se viene impostata durante la creazione di una destinazione.",
	"assets/variables.json.ANDROID_STL_TYPE": "Quando si esegue la compilazione incrociata per Android con NVIDIA Nsight Tegra Visual Studio Edition, questa proprietà consente di specificare il tipo del supporto STL per il progetto. Si tratta di una proprietà stringa che può essere impostata su uno dei valori seguenti:",
	"assets/variables.json.ARCHIVE_OUTPUT_DIRECTORY": "Directory di output in cui compilare i file di destinazione di XXX.",
	"assets/variables.json.ARCHIVE_OUTPUT_DIRECTORY_CONFIG": "Directory di output per singola configurazione relativa ai file di destinazione di ARCHIVE.",
	"assets/variables.json.ARCHIVE_OUTPUT_NAME": "Nome di output per i file di destinazione di XXX.",
	"assets/variables.json.ARCHIVE_OUTPUT_NAME_CONFIG": "Nome di output per singola configurazione relativo ai file di destinazione di ARCHIVE.",
	"assets/variables.json.AUTOGEN_BETTER_GRAPH_MULTI_CONFIG": "AUTOGEN_BETTER_GRAPH_MULTI_CONFIG è una proprietà booleana che può essere impostata su una destinazione per ottenere un grafico delle dipendenze migliore per i generatori a più configurazioni. Quando questa proprietà è abilitata, CMake genererà più destinazioni per ogni configurazione. Di conseguenza, il grafico delle dipendenze sarà più accurato per i generatori a più configurazioni e alcune ricompilazioni verranno evitate.",
	"assets/variables.json.AUTOGEN_BUILD_DIR": "Directory in cui AUTOMOC, AUTOUIC e AUTORCC generano i file per la destinazione.",
	"assets/variables.json.AUTOGEN_COMMAND_LINE_LENGTH_MAX": "Limite di lunghezza della riga di comando per le destinazioni autogen, ad esempio moc o uic, che attiva l'uso di file di risposta in Windows invece di passare tutti gli argomenti alla riga di comando.",
	"assets/variables.json.AUTOGEN_ORIGIN_DEPENDS": "Opzione per inoltrare le dipendenze di destinazione dell'origine alla destinazione <ORIGIN>_autogen corrispondente.",
	"assets/variables.json.AUTOGEN_PARALLEL": "Numero di processi moc o uic paralleli da avviare quando si usa AUTOMOC e AUTOUIC.",
	"assets/variables.json.AUTOGEN_TARGET_DEPENDS": "Dipendenze di destinazione della destinazione <ORIGIN>_autogen corrispondente.",
	"assets/variables.json.AUTOGEN_USE_SYSTEM_INCLUDE": "AUTOGEN_USE_SYSTEM_INCLUDE è una proprietà booleana che può essere impostata su una destinazione per indicare che la directory di inclusione della destinazione autogen deve essere aggiunta alla destinazione come directory di inclusione di sistema o come directory di inclusione normale.",
	"assets/variables.json.AUTOMOC": "Indica se la destinazione deve essere elaborata con auto-moc (per progetti Qt).",
	"assets/variables.json.AUTOMOC_COMPILER_PREDEFINES": "Valore booleano usato da AUTOMOC per determinare se il file delle definizioni preliminari del compilatore moc_predefs.h deve essere generato.",
	"assets/variables.json.AUTOMOC_DEPEND_FILTERS": "Definizioni dei filtri usati da AUTOMOC per estrarre i nomi dei file da un file di origine che vengono registrati come dipendenze aggiuntive per il file moc del file di origine.",
	"assets/variables.json.AUTOMOC_EXECUTABLE": "AUTOMOC_EXECUTABLE è il percorso di file che punta all'eseguibile MOC da usare per i file abilitati per AUTOMOC. Se si imposta questa proprietà, CMake ignorerà il rilevamento automatico del file binario MOC, nonché i test di integrità eseguiti in genere per garantire che il file binario sia disponibile e funzionante come previsto.",
	"assets/variables.json.AUTOMOC_MACRO_NAMES": "Elenco di nomi di macro delimitati da punto e virgola usato da AUTOMOC per determinare se un file C++ deve essere elaborato da moc.",
	"assets/variables.json.AUTOMOC_MOC_OPTIONS": "Opzioni aggiuntive per moc quando si usa AUTOMOC",
	"assets/variables.json.AUTOMOC_PATH_PREFIX": "Quando questa proprietà è impostata su ON, CMake genererà l'opzione del prefisso di percorso -p per MOC nelle destinazioni Qt abilitate per AUTOMOC.",
	"assets/variables.json.AUTORCC": "Indica se la destinazione deve essere elaborata con auto-rcc (per progetti Qt).",
	"assets/variables.json.AUTORCC_EXECUTABLE": "AUTORCC_EXECUTABLE è il percorso di file che punta all'eseguibile RCC da usare per i file abilitati per AUTORCC. Se si imposta questa proprietà, CMake ignorerà il rilevamento automatico del file binario RCC, nonché i test di integrità eseguiti in genere per garantire che il file binario sia disponibile e funzionante come previsto.",
	"assets/variables.json.AUTOUIC": "Indica se la destinazione deve essere elaborata con auto-uic (per progetti Qt).",
	"assets/variables.json.AUTOUIC_EXECUTABLE": "AUTOUIC_EXECUTABLE è il percorso di file che punta all'eseguibile UIC da usare per i file abilitati per AUTOUIC. Se si imposta questa proprietà, CMake ignorerà il rilevamento automatico del file binario UIC, nonché i test di integrità eseguiti in genere per garantire che il file binario sia disponibile e funzionante come previsto.",
	"assets/variables.json.AUTOUIC_SEARCH_PATHS": "Elenco dei percorsi di ricerca usati da AUTOUIC per trovare i file con estensione ui inclusi.",
	"assets/variables.json.BUILD_RPATH": "Elenco delimitato da punto e virgola che specifica le voci del percorso di  runtime (RPATH) da aggiungere ai file binari collegati nell'albero di compilazione (per le piattaforme che lo supportano). Per impostazione predefinita, CMake imposta il percorso di runtime dei file binari nell'albero di compilazione in modo che contenga i percorsi di ricerca che sa essere necessari per trovare le librerie condivise a cui si collegano. I progetti possono impostare BUILD_RPATH per specificare percorsi di ricerca aggiuntivi.",
	"assets/variables.json.BUILD_RPATH_USE_ORIGIN": "Indica se usare i percorsi relativi per il percorso RPATH di compilazione.",
	"assets/variables.json.BUILD_WITH_INSTALL_NAME_DIR": "BUILD_WITH_INSTALL_NAME_DIR è un valore booleano che specifica se l'elemento install_name in macOS di una destinazione nell'albero di compilazione usa la directory specificata da INSTALL_NAME_DIR. Questa impostazione si applica solo alle destinazioni in macOS.",
	"assets/variables.json.BUILD_WITH_INSTALL_RPATH": "BUILD_WITH_INSTALL_RPATH è un valore booleano che specifica se collegare la destinazione nell'albero di compilazione con INSTALL_RPATH. Ha la precedenza su SKIP_BUILD_RPATH e consente di evitare il ricollegamento prima dell'installazione.",
	"assets/variables.json.BUNDLE": "Questa destinazione è un elemento CFBundle in macOS.",
	"assets/variables.json.BUNDLE_EXTENSION": "Estensione di file usata per assegnare un nome a una destinazione BUNDLE, FRAMEWORK o MACOSX_BUNDLE in macOS e iOS.",
	"assets/variables.json.COMMON_LANGUAGE_RUNTIME": "Impostando questa proprietà di destinazione, la destinazione viene configurata per la compilazione con il supporto di C++/CLI.",
	"assets/variables.json.COMPATIBLE_INTERFACE_BOOL": "Proprietà che devono essere compatibili con la relativa interfaccia di collegamento",
	"assets/variables.json.COMPATIBLE_INTERFACE_NUMBER_MAX": "Proprietà per cui verrà usato il valore massimo dell'interfaccia di collegamento.",
	"assets/variables.json.COMPATIBLE_INTERFACE_NUMBER_MIN": "Proprietà per cui verrà usato il valore minimo dell'interfaccia di collegamento.",
	"assets/variables.json.COMPATIBLE_INTERFACE_STRING": "Proprietà che devono presentare la compatibilità stringa con la relativa interfaccia di collegamento",
	"assets/variables.json.COMPILE_FEATURES": "Funzionalità del compilatore abilitate per questa destinazione.",
	"assets/variables.json.COMPILE_PDB_NAME": "Nome di output per il file PDB dei simboli di debug MS generato dal compilatore durante la compilazione dei file di origine.",
	"assets/variables.json.COMPILE_PDB_NAME_CONFIG": "Nome di output per singola configurazione relativo al file PDB dei simboli di debug MS generato dal compilatore durante la compilazione dei file di origine.",
	"assets/variables.json.COMPILE_PDB_OUTPUT_DIRECTORY": "Directory di output per il file PDB dei simboli di debug MS generato dal compilatore durante la compilazione dei file di origine.",
	"assets/variables.json.COMPILE_PDB_OUTPUT_DIRECTORY_CONFIG": "Directory di output per singola configurazione relativa ai file PDB dei simboli di debug MS generato dal compilatore durante la compilazione dei file di origine.",
	"assets/variables.json.COMPILE_WARNING_AS_ERROR": "Specificare se considerare gli avvisi come errori durante la compilazione. Se questa opzione è abilitata, è possibile aggiungere un contrassegno per considerare gli avvisi come errori durante la compilazione. Se l'opzionecmake --compile-no-warning-as-error è specificata nella riga di comando di cmake, questa proprietà viene ignorata.",
	"assets/variables.json.CONFIG_OUTPUT_NAME": "Nome di base precedente per singola configurazione del file di destinazione. In alternativa, usare OUTPUT_NAME_NAME_.",
	"assets/variables.json.CONFIG_POSTFIX": "Suffisso da accodare al nome del file di destinazione per la configurazione <CONFIG>.",
	"assets/variables.json.CROSSCOMPILING_EMULATOR": "Usa l'emulatore specificato per eseguire eseguibili creati durante la compilazione incrociata. Questo comando verrà aggiunto come prefisso ai comandi add_test, add_custom_command e add_custom_target per gli eseguibili compilati del sistema di destinazione.",
	"assets/variables.json.CUDA_ARCHITECTURES": "Elenco di architetture per cui generare il codice del dispositivo.",
	"assets/variables.json.CUDA_CUBIN_COMPILATION": "Compilare le origini CUDA in file con estensione .cubin invece che in file con estensione .obj all'interno delle librerie di oggetti.",
	"assets/variables.json.CUDA_EXTENSIONS": "Valore booleano che specifica se sono richieste estensioni specifiche per i compilatori.",
	"assets/variables.json.CUDA_FATBIN_COMPILATION": "Compilare le origini CUDA in file con estensione .fatbin invece che in file con estensione .obj all'interno delle librerie di oggetti.",
	"assets/variables.json.CUDA_OPTIX_COMPILATION": "Compilare le origini CUDA in file con estensione .optixir invece che in file con estensione .obj all'interno delle librerie di oggetti.",
	"assets/variables.json.CUDA_PTX_COMPILATION": "Consente di compilare le origini CUDA in file con estensione ptx invece che in file con estensione obj all'interno delle librerie di oggetti.",
	"assets/variables.json.CUDA_RESOLVE_DEVICE_SYMBOLS": "Solo CUDA: abilita, se necessario, il collegamento del dispositivo per la destinazione della libreria specifica.",
	"assets/variables.json.CUDA_RUNTIME_LIBRARY": "Consente di selezionare la libreria di runtime CUDA che verrà usata dai compilatori quando la destinazione è il linguaggio CUDA.",
	"assets/variables.json.CUDA_SEPARABLE_COMPILATION": "Solo CUDA: abilita la compilazione separata del codice del dispositivo",
	"assets/variables.json.CUDA_STANDARD": "Standard CUDA/C++ le cui funzionalità sono richieste per compilare questa destinazione.",
	"assets/variables.json.CUDA_STANDARD_REQUIRED": "Valore booleano che descrive se il valore di CUDA_STANDARD è un requisito.",
	"assets/variables.json.CXX_EXTENSIONS": "Valore booleano che specifica se sono richieste estensioni specifiche per i compilatori.",
	"assets/variables.json.CXX_MODULE_DIRS": "Elenco delimitato da punto e virgola di directory di base del set di moduli C++ predefinito della destinazione, ad esempio il set di file con nome e tipo CXX_MODULES. La proprietà supporta le espressioni del generatore <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_DIRS_NAME": "Elenco delimitato da punto e virgola di directory di base del set di moduli <NAME> C++ della destinazione, con il tipo di set CXX_MODULES. La proprietà supporta le espressioni del generatore <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_SET": "Elenco di file delimitati da punto e virgola nel set di moduli C++ predefinito della destinazione, ad esempio il set di file con nome e tipo CXX_MODULES. Se uno dei percorsi è relativo, vengono calcolati in relazione alla directory di origine della destinazione. La proprietà supporta le espressioni del generatore <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_SETS": "Elenco di sola lettura dei set di moduli C++ PRIVATE e PUBLIC della destinazione, ad esempio tutti i set di file con il tipo CXX_MODULES. I file elencati in questi set di file vengono considerati come file di origine ai fini dell'integrazione dell'IDE.",
	"assets/variables.json.CXX_MODULE_SET_NAME": "Elenco di file delimitati da punto e virgola nel set di moduli <NAME> C++ della destinazione, con il tipo di set CXX_MODULES. Se uno dei percorsi è relativo, vengono calcolati in relazione alla directory di origine della destinazione. La proprietà supporta le espressioni del generatore <cmake-generator-expressions(7)>.",
	"assets/variables.json.CXX_MODULE_STD": "CXX_MODULE_STD è un valore booleano che specifica se la destinazione può utilizzare o meno l'importazione std, le relative origini C++.",
	"assets/variables.json.CXX_STANDARD": "Standard C++ le cui funzionalità sono richieste per compilare questa destinazione.",
	"assets/variables.json.CXX_STANDARD_REQUIRED": "Valore booleano che descrive se il valore di CXX_STANDARD è un requisito.",
	"assets/variables.json.C_EXTENSIONS": "Valore booleano che specifica se sono richieste estensioni specifiche per i compilatori.",
	"assets/variables.json.C_STANDARD": "Standard C le cui funzionalità sono richieste per compilare questa destinazione.",
	"assets/variables.json.C_STANDARD_REQUIRED": "Valore booleano che descrive se il valore di C_STANDARD è un requisito.",
	"assets/variables.json.DEBUG_POSTFIX": "Vedere la proprietà di destinazione <CONFIG>_POSTFIX.",
	"assets/variables.json.DEFINE_SYMBOL": "Consente di definire un simbolo durante la compilazione delle origini di questa destinazione.",
	"assets/variables.json.DEPLOYMENT_ADDITIONAL_FILES": "Impostare il progetto WinCE AdditionalFiles in DeploymentTool nei file con estensione vcproj generati dai Generatori di Visual Studio. È utile quando si vuole eseguire il debug nel dispositivo WinCE remoto. Specificare file aggiuntivi che verranno copiati nel dispositivo. Ad esempio:",
	"assets/variables.json.DEPLOYMENT_REMOTE_DIRECTORY": "Consente di impostare RemoteDirectory in DeploymentTool e RemoteExecutable in DebuggerTool per il progetto WinCE nei file con estensione vcproj generati dai Generatori di Visual Studio. È utile quando si vuole eseguire il debug nel dispositivo WinCE remoto. Ad esempio:",
	"assets/variables.json.DEPRECATION": "Messaggio di deprecazione inviato dallo sviluppatore della destinazione importata.",
	"assets/variables.json.DISABLE_PRECOMPILE_HEADERS": "Disabilita la precompilazione dei file di intestazione specificati dalla proprietà PRECOMPILE_HEADERS.",
	"assets/variables.json.DLL_NAME_WITH_SOVERSION": "Questa proprietà controlla se la proprietà di destinazione SOVERSION viene aggiunta al nome file dei nomi file DLL generati per la piattaforma Windows, che viene selezionata quando è impostata la variabile WIN32.",
	"assets/variables.json.DOTNET_SDK": "Specificare .NET SDK per i progetti C#. Ad esempio: Microsoft .NET.Sdk.",
	"assets/variables.json.DOTNET_TARGET_FRAMEWORK": "Consente di specificare il framework di destinazione .NET.",
	"assets/variables.json.DOTNET_TARGET_FRAMEWORK_VERSION": "Consente di specificare la versione del framework di destinazione .NET.",
	"assets/variables.json.EchoString": "Messaggio da visualizzare durante la compilazione della destinazione.",
	"assets/variables.json.ENABLE_EXPORTS": "Specificare se un eseguibile o una libreria condivisa esporta simboli.",
	"assets/variables.json.EXCLUDE_FROM_DEFAULT_BUILD": "Esclude la destinazione da Compila soluzione.",
	"assets/variables.json.EXCLUDE_FROM_DEFAULT_BUILD_CONFIG": "Versione per singola configurazione dell'esclusione della destinazione da Compila soluzione.",
	"assets/variables.json.EXPORT_COMPILE_COMMANDS": "Abilita/disabilita l'output dei comandi di compilazione durante la generazione per una destinazione.",
	"assets/variables.json.EXPORT_FIND_PACKAGE_NAME": "Controllare il nome del pacchetto associato a una destinazione di dipendenza durante l'esportazione di una chiamata di find_dependency durante l'installazione o l'esportazione. Può essere usato per assegnare un nome di pacchetto a un pacchetto compilato da CMake ed esportato oppure per eseguire l'override del pacchetto nella chiamata di find_package che ha creato la destinazione.",
	"assets/variables.json.EXPORT_NAME": "Nome esportato per i file di destinazione.",
	"assets/variables.json.EXPORT_NO_SYSTEM": "Questa proprietà influisce sul comportamento dei comandi di installazione ed esportazione rispettivamente quando installano o esportano la destinazione. Quando EXPORT_NO_SYSTEM è impostato su true, questi comandi generano una destinazione importata con la proprietà SYSTEM impostata su false.",
	"assets/variables.json.EXPORT_PROPERTIES": "Elenca le proprietà aggiuntive da esportare per una destinazione.",
	"assets/variables.json.FOLDER": "Per gli IME che presentano destinazioni che usano una gerarchia di cartelle, questa proprietà specifica il nome della cartella in cui inserire la destinazione. Per annidare le cartelle, usare i valori FOLDER come GUI/Finestre di dialogo con/caratteri che separano i livelli di cartella. Le destinazioni senza proprietà FOLDER verranno visualizzate come entità di primo livello. Le destinazioni con lo stesso valore della proprietà FOLDER verranno visualizzate nella stessa cartella degli elementi di pari livello.",
	"assets/variables.json.Fortran_BUILDING_INSTRINSIC_MODULES": "Indica al preprocessore CMake Fortran che la destinazione sta creando elementi intrinseci Fortran per la creazione di un compilatore Fortran.",
	"assets/variables.json.Fortran_MODULE_DIRECTORY": "Consente di specificare la directory di output per i moduli Fortran forniti dalla destinazione.",
	"assets/variables.json.FRAMEWORK": "Consente di compilare la libreria SHARED o STATIC come bundle del framework in macOS e iOS.",
	"assets/variables.json.FRAMEWORK_MULTI_CONFIG_POSTFIX_CONFIG": "Suffisso da accodare al nome file del framework per la configurazione <CONFIG> quando si usa un generatore di configurazioni multiple (come Multi-Config di Ninja e Xcode).",
	"assets/variables.json.FRAMEWORK_VERSION": "Versione di un framework creato con la proprietà di destinazione FRAMEWORK (ad esempio A).",
	"assets/variables.json.GENERATOR_FILE_NAME": "File del generatore per questa destinazione.",
	"assets/variables.json.GHS_INTEGRITY_APP": "Valore booleano ON/OFF per determinare se una destinazione di eseguibile deve essere considerata come un'applicazione di integrità.",
	"assets/variables.json.GHS_NO_SOURCE_GROUP_FILE": "Valore booleano ON/OFF per controllare se il file di progetto per una destinazione deve essere costituito da un unico file singolo oppure da più file.",
	"assets/variables.json.GNUtoMS": "Converte la libreria di importazione GNU (estensione dll.a) in formato MS (estensione lib).",
	"assets/variables.json.HAS_CXX": "Collega la destinazione usando lo strumento linker C++ (obsoleto).",
	"assets/variables.json.HEADER_DIRS": "Elenco delimitato da punto e virgola di directory di base del set di intestazioni predefinito della destinazione, ovvero il set di file con nome e tipo HEADERS. La proprietà supporta le espressioni del generatore <cmake-generator-expressions(7)>.",
	"assets/variables.json.HEADER_DIRS_NAME": "Elenco delimitato da punto e virgola di directory di base del set di intestazioni <NAME> della destinazione, con il tipo di set HEADERS. La proprietà supporta le espressioni del generatore <cmake-generator-expressions(7)>.",
	"assets/variables.json.HEADER_SET": "Elenco di file delimitati da punto e virgola nel set di intestazioni predefinito della destinazione, ad esempio il set di file con nome e tipo HEADERS. Se uno dei percorsi è relativo, vengono calcolati in relazione alla directory di origine della destinazione. La proprietà supporta le espressioni del generatore <cmake-generator-expressions(7)>.",
	"assets/variables.json.HEADER_SETS": "Elenco di sola lettura dei set di intestazioni PRIVATE e PUBLIC della destinazione, ovvero tutti i set di file con il tipo HEADERS. I file elencati in questi set di file vengono considerati come file di origine ai fini dell'integrazione dell'IDE. I file hanno anche la proprietà HEADER_FILE_ONLY impostata su TRUE.",
	"assets/variables.json.HEADER_SET_NAME": "Elenco di file delimitati da punto e virgola nel set di intestazioni <NAME> della destinazione, con il tipo di set HEADERS. Se uno dei percorsi è relativo, vengono calcolati in relazione alla directory di origine della destinazione. La proprietà supporta le espressioni del generatore <cmake-generator-expressions(7)>.",
	"assets/variables.json.HIP_ARCHITECTURES": "Elenco di architetture GPU per cui generare il codice del dispositivo. I nomi dell'architettura vengono interpretati in base a CMAKE_HIP_PLATFORM.",
	"assets/variables.json.HIP_EXTENSIONS": "Valore booleano che specifica se sono richieste estensioni specifiche per i compilatori.",
	"assets/variables.json.HIP_STANDARD": "Standard HIP/C++ richiesto per compilare questa destinazione.",
	"assets/variables.json.HIP_STANDARD_REQUIRED": "Valore booleano che descrive se il valore di HIP_STANDARD è un requisito.",
	"assets/variables.json.IMPORTED": "Indicazione di sola lettura relativa all'attivazione dell'opzione IMPORTED per una destinazione.",
	"assets/variables.json.IMPORTED_COMMON_LANGUAGE_RUNTIME": "Proprietà da definire se la destinazione usa C++/CLI.",
	"assets/variables.json.IMPORTED_CONFIGURATIONS": "Configurazioni fornite per una destinazione importata.",
	"assets/variables.json.IMPORTED_CXX_MODULES_COMPILE_DEFINITIONS": "Definizioni del preprocessore per la compilazione delle origini modulo C++ di una destinazione IMPORTED.",
	"assets/variables.json.IMPORTED_CXX_MODULES_COMPILE_FEATURES": "Funzionalità del compilatore abilitate per i moduli C++ di questa destinazione IMPORTED.",
	"assets/variables.json.IMPORTED_CXX_MODULES_COMPILE_OPTIONS": "Elenco di opzioni da passare al compilatore per i moduli C++ di questa destinazione IMPORTED.",
	"assets/variables.json.IMPORTED_CXX_MODULES_INCLUDE_DIRECTORIES": "Elenco delle directory di ricerca file di inclusione del preprocessore durante la compilazione di moduli C++ per le destinazioni IMPORTED.",
	"assets/variables.json.IMPORTED_CXX_MODULES_LINK_LIBRARIES": "Elenco delle dipendenze dirette da usare per i requisiti di utilizzo per i moduli C++ nei moduli C++ della destinazione.",
	"assets/variables.json.IMPORTED_GLOBAL": "Indicazione relativa alla visibilità globale di una destinazione IMPORTED.",
	"assets/variables.json.IMPORTED_IMPLIB": "Percorso completo della libreria di importazione per una destinazione IMPORTED.",
	"assets/variables.json.IMPORTED_IMPLIB_CONFIG": "Versione della proprietà IMPORTED_IMPLIB specifica di <CONFIG>.",
	"assets/variables.json.IMPORTED_LIBNAME": "Consente di specificare il nome della libreria di collegamento per una libreria di interfaccia importata.",
	"assets/variables.json.IMPORTED_LIBNAME_CONFIG": "Versione della proprietà IMPORTED_LIBNAME specifica di <CONFIG>.",
	"assets/variables.json.IMPORTED_LINK_DEPENDENT_LIBRARIES": "Librerie condivise dipendenti di una libreria condivisa dinamica.",
	"assets/variables.json.IMPORTED_LINK_DEPENDENT_LIBRARIES_CONFIG": "Versione della proprietà IMPORTED_LINK_DEPENDENT_LIBRARIES specifica di <CONFIG>.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LANGUAGES": "Linguaggi compilati in una libreria statica IMPORTED.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LANGUAGES_CONFIG": "Versione della proprietà IMPORTED_LINK_INTERFACE_LANGUAGES specifica di <CONFIG>.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LIBRARIES": "Interfaccia di collegamento transitiva di una destinazione IMPORTED.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_LIBRARIES_CONFIG": "Versione della proprietà IMPORTED_LINK_INTERFACE_LIBRARIES specifica di <CONFIG>.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_MULTIPLICITY": "Conteggio delle ripetizioni per i cicli di librerie statiche IMPORTED.",
	"assets/variables.json.IMPORTED_LINK_INTERFACE_MULTIPLICITY_CONFIG": "Versione della proprietà IMPORTED_LINK_INTERFACE_MULTIPLICITY specifica di <CONFIG>.",
	"assets/variables.json.IMPORTED_LOCATION": "Percorso completo del file principale su disco per una destinazione IMPORTED.",
	"assets/variables.json.IMPORTED_LOCATION_CONFIG": "Versione della proprietà IMPORTED_LOCATION specifica di <CONFIG>.",
	"assets/variables.json.IMPORTED_NO_SONAME": "Consente di specificare che una destinazione di libreria condivisa IMPORTED non include alcun soname.",
	"assets/variables.json.IMPORTED_NO_SONAME_CONFIG": "Versione della proprietà IMPORTED_NO_SONAME specifica di <CONFIG>.",
	"assets/variables.json.IMPORTED_NO_SYSTEM": "L'impostazione di IMPORTED_NO_SYSTEM su true in una destinazione importata specifica che non si tratta di una destinazione di sistema. Ciò ha gli effetti seguenti:",
	"assets/variables.json.IMPORTED_OBJECTS": "Elenco di percorsi assoluti delimitati da punto e virgola relativi ai file oggetto su disco per una libreria di oggetti importata.",
	"assets/variables.json.IMPORTED_OBJECTS_CONFIG": "Versione della proprietà IMPORTED_OBJECTS specifica di <CONFIG>.",
	"assets/variables.json.IMPORTED_SONAME": "soname di una destinazione IMPORTED del tipo di libreria condivisa.",
	"assets/variables.json.IMPORTED_SONAME_CONFIG": "Versione della proprietà IMPORTED_SONAME specifica di <CONFIG>.",
	"assets/variables.json.IMPORT_PREFIX": "Consente di indicare la parte che precede il nome della libreria di importazione.",
	"assets/variables.json.IMPORT_SUFFIX": "Consente di indicare la parte che segue il nome della libreria di importazione.",
	"assets/variables.json.INSTALL_NAME_DIR": "Nome della directory per le destinazioni installate nelle piattaforme Apple.",
	"assets/variables.json.INSTALL_REMOVE_ENVIRONMENT_RPATH": "Controlla se gli RPATH definiti dalla toolchain devono essere rimossi durante l'installazione.",
	"assets/variables.json.INSTALL_RPATH": "rpath da usare per le destinazioni installate.",
	"assets/variables.json.INSTALL_RPATH_USE_LINK_PATH": "Consente di aggiungere percorsi all'rpath installato e di ricerca linker.",
	"assets/variables.json.INTERFACE_AUTOMOC_MACRO_NAMES": "Elenco di nomi di macro delimitati da punto e virgola per AUTOMOC da propagare ai consumer.",
	"assets/variables.json.INTERFACE_AUTOUIC_OPTIONS": "Elenco delle opzioni di interfaccia da passare a uic.",
	"assets/variables.json.INTERFACE_COMPILE_DEFINITIONS": "Elenco dei requisiti di property_name pubblici per una libreria.",
	"assets/variables.json.INTERFACE_COMPILE_FEATURES": "Elenco dei requisiti di property_name pubblici per una libreria.",
	"assets/variables.json.INTERFACE_COMPILE_OPTIONS": "Elenco dei requisiti di property_name pubblici per una libreria.",
	"assets/variables.json.INTERFACE_CXX_MODULE_SETS": "Elenco di sola lettura dei set di moduli PUBLIC C++ della destinazione, ad esempio tutti i set di file con il tipo CXX_MODULES. I file elencati in questi set di moduli C++ possono essere installati con l'installazione e esportati con l'installazione e l'esportazione.",
	"assets/variables.json.INTERFACE_HEADER_SETS": "Elenco di sola lettura dei set di intestazioni INTERFACE e PUBLIC della destinazione, ovvero tutti i set di file con il tipo HEADERS. I file elencati in questi set di intestazioni possono essere installati con l'installazione ed esportati con l'installazione e l'esportazione.",
	"assets/variables.json.INTERFACE_HEADER_SETS_TO_VERIFY": "Usato per specificare i set di intestazioni PUBLIC e INTERFACE di una destinazione da verificare.",
	"assets/variables.json.INTERFACE_INCLUDE_DIRECTORIES": "Elenco dei requisiti di property_name pubblici per una libreria.",
	"assets/variables.json.INTERFACE_LINK_DEPENDS": "File di interfaccia pubblica aggiuntivi da cui dipende un file binario di destinazione per il collegamento.",
	"assets/variables.json.INTERFACE_LINK_DIRECTORIES": "Elenco dei requisiti di property_name pubblici per una libreria.",
	"assets/variables.json.INTERFACE_LINK_LIBRARIES": "Elenca le librerie dell'interfaccia pubblica per una libreria.",
	"assets/variables.json.INTERFACE_LINK_LIBRARIES_DIRECT": "Elenco di librerie che i consumer di questa libreria devono considerare come dipendenze dirette del collegamento.",
	"assets/variables.json.INTERFACE_LINK_LIBRARIES_DIRECT_EXCLUDE": "Elenco di librerie che i consumer di questa libreria non devono considerare come dipendenze dirette del collegamento.",
	"assets/variables.json.INTERFACE_LINK_OPTIONS": "Elenco dei requisiti di property_name pubblici per una libreria.",
	"assets/variables.json.INTERFACE_POSITION_INDEPENDENT_CODE": "Indica se i consumer devono creare una destinazione indipendente dalla posizione",
	"assets/variables.json.INTERFACE_PRECOMPILE_HEADERS": "Elenco dei file di intestazione dell'interfaccia da precompilare in destinazioni di utilizzo.",
	"assets/variables.json.INTERFACE_SOURCES": "Elenco delle origini di interfaccia da compilare in destinazioni di utilizzo.",
	"assets/variables.json.INTERFACE_SYSTEM_INCLUDE_DIRECTORIES": "Elenco delle directory di inclusione pubbliche del sistema per una libreria.",
	"assets/variables.json.IOS_INSTALL_COMBINED": "Consente di compilare una destinazione combinata (dispositivo e simulatore) durante l'installazione.",
	"assets/variables.json.ISPC_HEADER_DIRECTORY": "Consente di specificare la directory di output relativa per le intestazioni ISPC fornite dalla destinazione.",
	"assets/variables.json.ISPC_HEADER_SUFFIX": "Consente di specificare il suffisso di output da usare per le intestazioni generate da ISPC fornite dalla destinazione.",
	"assets/variables.json.ISPC_INSTRUCTION_SETS": "Elenco delle architetture impostate da istruzioni per cui generare il codice.",
	"assets/variables.json.JOB_POOL_COMPILE": "Solo Ninja: pool usato per la compilazione.",
	"assets/variables.json.JOB_POOL_LINK": "Solo Ninja: pool usato per il collegamento.",
	"assets/variables.json.JOB_POOL_PRECOMPILE_HEADER": "Solo Ninja: pool usato per la generazione di intestazioni precompilate.",
	"assets/variables.json.LANG_CLANG_TIDY": "Questa proprietà viene implementata solo quando <LANG> è C, CXX, OBJC o OBJCXX.",
	"assets/variables.json.LANG_CLANG_TIDY_EXPORT_FIXES_DIR": "Questa proprietà viene implementata solo quando <LANG> è C, CXX, OBJC o OBJCXX e ha effetto solo quando è impostato su <LANG>_CLANG_TIDY.",
	"assets/variables.json.LANG_COMPILER_LAUNCHER": "Questa proprietà viene implementata solo quando <LANG> è C, CXX, Fortran, HIP, ISPC, OBJC, OBJCXX o CUDA.",
	"assets/variables.json.LANG_CPPCHECK": "Questa proprietà è supportata solo quando <LANG> è C o CXX.",
	"assets/variables.json.LANG_CPPLINT": "Questa proprietà è supportata solo quando <LANG> è C o CXX.",
	"assets/variables.json.LANG_EXTENSIONS": "Le varianti sono:",
	"assets/variables.json.LANG_INCLUDE_WHAT_YOU_USE": "Questa proprietà viene implementata solo quando <LANG> è C o CXX.",
	"assets/variables.json.LANG_LINKER_LAUNCHER": "Questa proprietà viene implementata solo quando <LANG> è C, CXX, OBJC o OBJCXX",
	"assets/variables.json.LANG_STANDARD": "Le varianti sono:",
	"assets/variables.json.LANG_STANDARD_REQUIRED": "Le varianti sono:",
	"assets/variables.json.LANG_VISIBILITY_PRESET": "Valore per i flag di compilazione della visibilità dei simboli",
	"assets/variables.json.LIBRARY_OUTPUT_DIRECTORY": "Directory di output in cui compilare i file di destinazione di XXX.",
	"assets/variables.json.LIBRARY_OUTPUT_DIRECTORY_CONFIG": "Directory di output per singola configurazione relativa ai file di destinazione di LIBRARY.",
	"assets/variables.json.LIBRARY_OUTPUT_NAME": "Nome di output per i file di destinazione di XXX.",
	"assets/variables.json.LIBRARY_OUTPUT_NAME_CONFIG": "Nome di output per singola configurazione relativo ai file di destinazione di LIBRARY.",
	"assets/variables.json.LINKER_LANGUAGE": "Consente di specificare il linguaggio in cui il compilatore richiamerà il linker.",
	"assets/variables.json.LINKER_TYPE": "Specificare il linker da usare per il passaggio del collegamento. Il valore della proprietà può usare espressioni generatori <cmake-generator-expressions(7)>.",
	"assets/variables.json.LINK_DEPENDS": "File aggiuntivi da cui dipende un file binario di destinazione per il collegamento.",
	"assets/variables.json.LINK_DEPENDS_NO_SHARED": "Non dipende dai file di libreria condivisi collegati.",
	"assets/variables.json.LINK_FLAGS": "Flag aggiuntivi da usare quando si collega questa destinazione se si tratta di una libreria condivisa, di una libreria di moduli o di un eseguibile. Le librerie statiche devono usare le proprietà STATIC_LIBRARY_OPTIONS o STATIC_LIBRARY_FLAGS.",
	"assets/variables.json.LINK_FLAGS_CONFIG": "Flag del linker per singola configurazione relativo a una destinazione di libreria SHARED, MODULE o EXECUTABLE.",
	"assets/variables.json.LINK_INTERFACE_LIBRARIES": "Elenca le librerie dell'interfaccia pubblica per una raccolta condivisa o un eseguibile.",
	"assets/variables.json.LINK_INTERFACE_LIBRARIES_CONFIG": "Elenco per singola configurazione delle librerie dell'interfaccia pubblica per una destinazione.",
	"assets/variables.json.LINK_INTERFACE_MULTIPLICITY": "Conteggio delle ripetizioni per le librerie STATIC con dipendenze cicliche.",
	"assets/variables.json.LINK_INTERFACE_MULTIPLICITY_CONFIG": "Conteggio delle ripetizioni per singola configurazione relativo ai cicli di librerie STATIC.",
	"assets/variables.json.LINK_LIBRARIES": "Elenco delle dipendenze dei collegamenti diretti.",
	"assets/variables.json.LINK_LIBRARIES_ONLY_TARGETS": "Imporre che gli elementi di collegamento che possono essere nomi di destinazione siano effettivamente destinazioni esistenti.",
	"assets/variables.json.LINK_LIBRARY_OVERRIDE": "Esegue l'override delle funzionalità della libreria associate alle librerie dalle espressioni del generatore LINK_LIBRARY. Questa operazione può essere usata per risolvere le funzionalità di libreria incompatibili derivanti dalla specifica di funzionalità diverse per la stessa libreria in espressioni del generatore LINK_LIBRARY diverse.",
	"assets/variables.json.LINK_LIBRARY_OVERRIDE_LIBRARY": "Esegue l'override della funzionalità della libreria associata a <LIBRARY> dalle espressioni del generatore LINK_LIBRARY. Questa operazione può essere usata per risolvere le funzionalità di libreria incompatibili derivanti dalla specifica di funzionalità diverse per <LIBRARY> in espressioni del generatore LINK_LIBRARY diverse.",
	"assets/variables.json.LINK_SEARCH_END_STATIC": "Termina una riga di collegamento in modo che vengano usate le librerie di sistema statiche.",
	"assets/variables.json.LINK_SEARCH_START_STATIC": "Presuppone che il linker cerchi le librerie statiche per impostazione predefinita.",
	"assets/variables.json.LINK_WHAT_YOU_USE": "Questa è un'opzione booleana che, quando è impostata su TRUE, esegue automaticamente il contenuto della variabile CMAKE_LINK_WHAT_YOU_USE_CHECK sulla destinazione dopo che è stata collegata. Inoltre, il flag del linker specificato dalla variabile CMAKE_<LANG>_LINK_WHAT_YOU_USE_FLAG verrà passato alla destinazione con il comando link in modo che tutte le librerie specificate dalla riga di comando siano collegate nella destinazione. In questo modo il collegamento produrrà un elenco di librerie che non forniscono simboli usati dalla destinazione, ma che sono collegate ad essa.",
	"assets/variables.json.LOCATION_CONFIG": "Proprietà di sola lettura che fornisce un percorso di destinazione su disco.",
	"assets/variables.json.MACHO_COMPATIBILITY_VERSION": "Indica il numero di versione di compatibilità di questa destinazione per i file binari Mach-O.",
	"assets/variables.json.MACHO_CURRENT_VERSION": "Indica il numero di versione corrente di questa destinazione per i file binari Mach-O.",
	"assets/variables.json.MACOSX_BUNDLE": "Consente di compilare un eseguibile come bundle dell'applicazione in macOS o iOS.",
	"assets/variables.json.MACOSX_BUNDLE_INFO_PLIST": "Consente di specificare un modello Info.plist personalizzato per un bundle dell'applicazione macOS e iOS.",
	"assets/variables.json.MACOSX_FRAMEWORK_INFO_PLIST": "Consente di specificare un modello Info.plist personalizzato per un framework macOS e iOS.",
	"assets/variables.json.MACOSX_RPATH": "Indica se questa destinazione in macOS o iOS viene individuata in fase di esecuzione usando RPATH.",
	"assets/variables.json.MANUALLY_ADDED_DEPENDENCIES": "Ottiene le dipendenze aggiunte manualmente ad altre destinazioni di primo livello.",
	"assets/variables.json.MAP_IMPORTED_CONFIG_CONFIG": "Esegue il mapping dalla configurazione del progetto alla configurazione della destinazione importata.",
	"assets/variables.json.MSVC_DEBUG_INFORMATION_FORMAT": "Selezionare il formato delle informazioni di debug quando la destinazione è L'ABI MSVC.",
	"assets/variables.json.MSVC_RUNTIME_LIBRARY": "Consente di selezionare la libreria di runtime MSVC che verrà usata dai compilatori quando la destinazione è l'ABI MSVC.",
	"assets/variables.json.NAME": "Nome logico della destinazione.",
	"assets/variables.json.NO_SONAME": "Indica se impostare soname quando si collega un libreria condivisa.",
	"assets/variables.json.NO_SYSTEM_FROM_IMPORTED": "Non considerare le directory di inclusione delle interfacce delle destinazioni importate utilizzate come directory di sistema.",
	"assets/variables.json.OBJCXX_EXTENSIONS": "Valore booleano che specifica se sono richieste estensioni specifiche per i compilatori.",
	"assets/variables.json.OBJCXX_STANDARD": "Standard ObjC++ le cui funzionalità sono richieste per compilare questa destinazione.",
	"assets/variables.json.OBJCXX_STANDARD_REQUIRED": "Valore booleano che descrive se il valore di OBJCXX_STANDARD è un requisito.",
	"assets/variables.json.OBJC_EXTENSIONS": "Valore booleano che specifica se sono richieste estensioni specifiche per i compilatori.",
	"assets/variables.json.OBJC_STANDARD": "Standard OBJC le cui funzionalità sono richieste per compilare questa destinazione.",
	"assets/variables.json.OBJC_STANDARD_REQUIRED": "Valore booleano che descrive se il valore di OBJC_STANDARD è un requisito.",
	"assets/variables.json.OPTIMIZE_DEPENDENCIES": "Attiva l'ottimizzazione delle dipendenze di librerie di oggetti e statiche.",
	"assets/variables.json.OSX_ARCHITECTURES": "Architetture specifiche della destinazione per macOS.",
	"assets/variables.json.OSX_ARCHITECTURES_CONFIG": "Architetture macOS e iOS per singola configurazione relative a una destinazione.",
	"assets/variables.json.OUTPUT_NAME": "Nome di output per i file di destinazione.",
	"assets/variables.json.OUTPUT_NAME_CONFIG": "Nome di base del file di destinazione per singola configurazione.",
	"assets/variables.json.PCH_INSTANTIATE_TEMPLATES": "Quando questa proprietà è impostata su true, le opzioni del compilatore di intestazioni precompilate conterranno un flag per creare un'istanza dei modelli durante la generazione del PCH, se supportato. Questo consente di migliorare significativamente i tempi di compilazione. Supportata in Clang a partire dalla versione 11.",
	"assets/variables.json.PCH_WARN_INVALID": "Quando questa proprietà è impostata su true, le opzioni del compilatore dell'intestazione di precompilazione conterranno un flag del compilatore che dovrebbe avvisare in caso di intestazioni precompilate non valide, ad esempio -Winvalid-pch per il compilatore GNU.",
	"assets/variables.json.PDB_NAME": "Nome di output per il file PDB dei simboli di debug MS generato dal linker per una destinazione di eseguibile o libreria condivisa.",
	"assets/variables.json.PDB_NAME_CONFIG": "Nome di output per singola configurazione relativo al file PDB dei simboli di debug MS generato dal linker per una destinazione di eseguibile o libreria condivisa.",
	"assets/variables.json.PDB_OUTPUT_DIRECTORY": "Directory di output per il file PDB dei simboli di debug MS generato dal linker per una destinazione di eseguibile o libreria condivisa.",
	"assets/variables.json.PDB_OUTPUT_DIRECTORY_CONFIG": "Directory di output per singola configurazione relativa al file PDB dei simboli di debug MS generato dal linker per una destinazione di eseguibile o libreria condivisa.",
	"assets/variables.json.POSITION_INDEPENDENT_CODE": "Indica se creare o meno una destinazione indipendente dalla posizione",
	"assets/variables.json.POST_INSTALL_SCRIPT": "Il supporto per l'installazione è deprecato.",
	"assets/variables.json.PRECOMPILE_HEADERS": "Elenco dei file di intestazione da precompilare.",
	"assets/variables.json.PRECOMPILE_HEADERS_REUSE_FROM": "Destinazione da cui riutilizzare l'artefatto della compilazione di intestazioni precompilate.",
	"assets/variables.json.PREFIX": "Consente di indicare la parte che precede il nome della libreria.",
	"assets/variables.json.PRE_INSTALL_SCRIPT": "Il supporto per l'installazione è deprecato.",
	"assets/variables.json.PRIVATE_HEADER": "Consente di specificare i file di intestazione privati in una destinazione di libreria condivisa FRAMEWORK.",
	"assets/variables.json.PROJECT_LABEL": "Modificare il nome di una destinazione in un IDE.",
	"assets/variables.json.PUBLIC_HEADER": "Consente di specificare i file di intestazione pubblici in una destinazione di libreria condivisa FRAMEWORK.",
	"assets/variables.json.RESOURCE": "Consente di specificare i file di risorse in una proprietà FRAMEWORK o BUNDLE.",
	"assets/variables.json.RUNTIME_OUTPUT_DIRECTORY": "Directory di output in cui compilare i file di destinazione di XXX.",
	"assets/variables.json.RUNTIME_OUTPUT_DIRECTORY_CONFIG": "Directory di output per singola configurazione relativa ai file di destinazione di RUNTIME.",
	"assets/variables.json.RUNTIME_OUTPUT_NAME": "Nome di output per i file di destinazione di XXX.",
	"assets/variables.json.RUNTIME_OUTPUT_NAME_CONFIG": "Nome di output per singola configurazione relativo ai file di destinazione di RUNTIME.",
	"assets/variables.json.SKIP_BUILD_RPATH": "Indica se usare RPATH per l'albero di compilazione.",
	"assets/variables.json.SOURCES": "Specifica l'elenco dei percorsi dei file di origine per la destinazione. I comandi seguenti sono tutti impostati o aggiunti alla proprietà di destinazione SOURCES e rappresentano il modo consueto per modificarla:",
	"assets/variables.json.SOVERSION": "Numero di versione ABI di una destinazione di libreria condivisa.",
	"assets/variables.json.STATIC_LIBRARY_FLAGS": "Flag di utilità di gestione archiviazione (o utilità di gestione archiviazione MSVC) per una destinazione di libreria statica. Le destinazioni che sono librerie condivise, moduli o eseguibili devono usare le proprietà di destinazione LINK_OPTIONS o LINK_FLAGS.",
	"assets/variables.json.STATIC_LIBRARY_FLAGS_CONFIG": "Flag di utilità di gestione archiviazione (o utilità di gestione archiviazione MSVC) per singola configurazione relativo a una destinazione di libreria statica.",
	"assets/variables.json.STATIC_LIBRARY_OPTIONS": "Flag di utilità di gestione archiviazione (o utilità di gestione archiviazione MSVC) per una destinazione di libreria statica. Le destinazioni che sono librerie condivise, moduli o eseguibili devono usare la proprietà di destinazione LINK_OPTIONS.",
	"assets/variables.json.SUFFIX": "Consente di indicare la parte che segue il nome della destinazione.",
	"assets/variables.json.Swift_COMPILATION_MODE": "Specificare la modalità di compilazione di una destinazione da parte di Swift.",
	"assets/variables.json.Swift_LANGUAGE_VERSION": "Questa proprietà imposta la versione del linguaggio per le origini Swift nella destinazione. Se non ne viene specificata una, verrà usata quella predefinita CMAKE_Swift_LANGUAGE_VERSION, se specificata, oppure la versione più recente supportata dal compilatore.",
	"assets/variables.json.Swift_MODULE_DIRECTORY": "Consente di specificare la directory di output per i moduli Swift forniti dalla destinazione.",
	"assets/variables.json.Swift_MODULE_NAME": "Questa proprietà specifica il nome del modulo Swift. Come impostazione predefinita viene usato il nome della destinazione.",
	"assets/variables.json.TEST_LAUNCHER": "Usare l'utilità di avvio specificata per eseguire i file eseguibili. Questo comando verrà aggiunto come prefisso per add_test comandi per gli eseguibili di sistema di destinazione della compilazione ed è progettato per essere eseguito nel computer host.",
	"assets/variables.json.TRANSITIVE_COMPILE_PROPERTIES": "Proprietà che l'espressione del generatore TARGET_PROPERTY, nella destinazione e nei relativi dipendenti, valuta come l'unione dei valori raccolti dalla chiusura transitiva delle dipendenze del link, escluse le voci controllate da LINK_ONLY.",
	"assets/variables.json.TRANSITIVE_LINK_PROPERTIES": "Proprietà che l'espressione del generatore TARGET_PROPERTY, nella destinazione e nei relativi dipendenti, valuta come l'unione dei valori raccolti dalla chiusura transitiva delle dipendenze del link, incluse le voci controllate da LINK_ONLY.",
	"assets/variables.json.UNITY_BUILD": "Quando questa proprietà è impostata su true, i file di origine di destinazione verranno combinati in batch per velocizzare la compilazione. A questo scopo viene creato un set di origini Unity per cui vengono specificate tramite #include le origini iniziali e che vengono compilate al posto di quelle iniziali. Questa operazione è nota come compilazione Unity o Jumbo.",
	"assets/variables.json.UNITY_BUILD_BATCH_SIZE": "Consente di specificare il numero massimo di file di origine che possono essere combinati in un unico file di origine Unity ogni volta che le compilazioni Unity vengono abilitate dalla proprietà di destinazione UNITY_BUILD. I file di origine iniziali verranno distribuiti tra il numero di file di origine Unity necessario per rispettare questo limite.",
	"assets/variables.json.UNITY_BUILD_CODE_AFTER_INCLUDE": "Frammento di codice incluso testualmente dalla funzionalità UNITY_BUILD subito dopo ogni istruzione #include nei file di origine Unity generati. Ad esempio:",
	"assets/variables.json.UNITY_BUILD_CODE_BEFORE_INCLUDE": "Frammento di codice incluso testualmente dalla funzionalità UNITY_BUILD subito prima di ogni istruzione #include nei file di origine Unity generati. Ad esempio:",
	"assets/variables.json.UNITY_BUILD_MODE": "CMake fornisce algoritmi diversi per la selezione delle origini raggruppate in un bucket. La selezione viene stabilita dalla proprietà, che include i valori accettabili seguenti:",
	"assets/variables.json.UNITY_BUILD_UNIQUE_ID": "Nome di un identificatore C valido impostato su un valore univoco per file durante le compilazioni Unity.",
	"assets/variables.json.VERIFY_INTERFACE_HEADER_SETS": "Usato per verificare che tutte le intestazioni nei set di intestazioni PUBLIC e INTERFACE di una destinazione possano essere incluse autonomamente.",
	"assets/variables.json.VERSION": "Numero di versione di una destinazione di libreria condivisa.",
	"assets/variables.json.VISIBILITY_INLINES_HIDDEN": "Indica se aggiungere un flag di compilazione per aggiungere i simboli delle funzioni inline",
	"assets/variables.json.VS_CONFIGURATION_TYPE": "Tipo di configurazione del progetto di Visual Studio.",
	"assets/variables.json.VS_DEBUGGER_COMMAND": "Imposta il comando del debugger locale per le destinazioni C++ di Visual Studio. Il valore della proprietà può usare espressioni generatori <cmake-generator-expressions(7)>. Definito in <LocalDebuggerCommand> nel file di progetto di Visual Studio. Questa proprietà viene inizializzata dal valore della variabile CMAKE_VS_DEBUGGER_COMMAND se impostata quando viene creata una destinazione.",
	"assets/variables.json.VS_DEBUGGER_COMMAND_ARGUMENTS": "Imposta gli argomenti della riga di comando del debugger locale per le destinazioni C++ di Visual Studio. Il valore della proprietà può usare espressioni generatori <cmake-generator-expressions(7)>. Definito in <LocalDebuggerCommandArguments> nel file di progetto di Visual Studio. Questa proprietà viene inizializzata dal valore della variabile CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS se impostata quando viene creata una destinazione.",
	"assets/variables.json.VS_DEBUGGER_ENVIRONMENT": "Imposta l'ambiente del debugger locale per le destinazioni C++ di Visual Studio. Il valore della proprietà può usare espressioni generatori <cmake-generator-expressions(7)>. Definito in <LocalDebuggerEnvironment> nel file di progetto di Visual Studio. Questa proprietà viene inizializzata dal valore della variabile CMAKE_VS_DEBUGGER_ENVIRONMENT se impostata quando viene creata una destinazione.",
	"assets/variables.json.VS_DEBUGGER_WORKING_DIRECTORY": "Imposta la directory di lavoro del debugger locale per le destinazioni C++ di Visual Studio. Il valore della proprietà può usare espressioni generatori <cmake-generator-expressions(7)>. Definito in <LocalDebuggerWorkingDirectory> nel file di progetto di Visual Studio. Questa proprietà viene inizializzata dal valore della variabile CMAKE_VS_DEBUGGER_WORKING_DIRECTORY se impostata quando viene creata una destinazione.",
	"assets/variables.json.VS_DESKTOP_EXTENSIONS_VERSION": "Versione delle estensioni desktop di Windows 10 per Visual Studio",
	"assets/variables.json.VS_DOTNET_DOCUMENTATION_FILE": "Output della documentazione .NET del progetto gestito di Visual Studio",
	"assets/variables.json.VS_DOTNET_REFERENCEPROP_refname_TAG_tagname": "Consente di definire una proprietà XML <tagname> per un riferimento .NET <refname>.",
	"assets/variables.json.VS_DOTNET_REFERENCES": "Riferimenti .NET del progetto gestito di Visual Studio",
	"assets/variables.json.VS_DOTNET_REFERENCES_COPY_LOCAL": "Consente di imposta la proprietà Copy Local per tutti i riferimenti a suggerimenti .NET nella destinazione.",
	"assets/variables.json.VS_DOTNET_REFERENCE_refname": "Riferimento .NET del progetto gestito di Visual Studio con nome <refname> e percorso suggerito.",
	"assets/variables.json.VS_DOTNET_STARTUP_OBJECT": "Imposta la proprietà dell'oggetto di avvio nelle destinazioni di Visual Studio .NET. Il valore della proprietà definisce un nome di classe completo (incluso il nome del pacchetto), ad esempio: MyCompany.Package.MyStarterClass.",
	"assets/variables.json.VS_DOTNET_TARGET_FRAMEWORK_VERSION": "Consente di specificare la versione del framework di destinazione .NET.",
	"assets/variables.json.VS_DPI_AWARE": "Impostare Strumento Manifesto -> Input e output -> Compatibilità con DPI nelle proprietà del progetto di destinazione di Visual Studio.",
	"assets/variables.json.VS_FILTER_PROPS": "Imposta il file delle proprietà di filtro da includere nel file di filtro del progetto di Visual Studio C++.",
	"assets/variables.json.VS_GLOBAL_KEYWORD": "Parola chiave del progetto Visual Studio.",
	"assets/variables.json.VS_GLOBAL_PROJECT_TYPES": "Tipo/i di progetto di Visual Studio.",
	"assets/variables.json.VS_GLOBAL_ROOTNAMESPACE": "Spazio dei nomi radice del progetto di Visual Studio.",
	"assets/variables.json.VS_GLOBAL_variable": "Variabile globale specifica del progetto di Visual Studio.",
	"assets/variables.json.VS_IOT_EXTENSIONS_VERSION": "Versione delle estensioni IoT di Windows 10 per Visual Studio",
	"assets/variables.json.VS_IOT_STARTUP_TASK": "Attività in background continua IoT di Windows 10 per Visual Studio",
	"assets/variables.json.VS_JUST_MY_CODE_DEBUGGING": "Abilita Just My Code per il debugger di Visual Studio.",
	"assets/variables.json.VS_KEYWORD": "Rimosso. In passato specificava la parola chiave del progetto Visual Studio per il generatore di Visual Studio 9 2008 e versioni precedenti; tuttavia, tali generatori sono stati tutti rimossi.",
	"assets/variables.json.VS_MOBILE_EXTENSIONS_VERSION": "Versione delle estensioni per dispositivi mobili di Windows 10 per Visual Studio",
	"assets/variables.json.VS_NO_COMPILE_BATCHING": "Disattiva la compilazione in batch per la destinazione. In genere MSBuild chiama il compilatore con più file c/cpp e il compilatore avvia i sottoprocessi per ogni file per rendere la compilazione parallela. Se si vuole che il compilatore venga richiamato con un file alla volta, impostare VS_NO_COMPILE_BATCHING su ON. Se questo flag è impostato, MSBuild chiamerà il compilatore con un file c/cpp alla volta. Utile quando si vuole usare uno strumento che sostituisce il compilatore, ad esempio uno strumento di memorizzazione nella cache della compilazione.",
	"assets/variables.json.VS_NO_SOLUTION_DEPLOY": "Consente di specificare che la destinazione non deve essere contrassegnata per la distribuzione in un dispositivo Windows CE o Windows Phone nella soluzione Visual Studio generata.",
	"assets/variables.json.VS_PACKAGE_REFERENCES": "Riferimenti al pacchetto Visual Studio per NuGet.",
	"assets/variables.json.VS_PLATFORM_TOOLSET": "Esegue l'override del set di strumenti della piattaforma usato per compilare una destinazione.",
	"assets/variables.json.VS_PROJECT_IMPORT": "Importazioni del progetto gestito di Visual Studio",
	"assets/variables.json.VS_SCC_AUXPATH": "Percorso ausiliario del controllo del codice sorgente di Visual Studio.",
	"assets/variables.json.VS_SCC_LOCALPATH": "Percorso locale del controllo del codice sorgente di Visual Studio.",
	"assets/variables.json.VS_SCC_PROJECTNAME": "Progetto del controllo del codice sorgente di Visual Studio.",
	"assets/variables.json.VS_SCC_PROVIDER": "Provider del controllo del codice sorgente di Visual Studio.",
	"assets/variables.json.VS_SDK_REFERENCES": "Riferimenti SDK del progetto di Visual Studio. Specificare un elenco di riferimenti SDK delimitati da punto e virgola da aggiungere a un progetto di Visual Studio generato, ad esempio Microsoft.AdMediatorWindows81, Version=1.0.",
	"assets/variables.json.VS_SOLUTION_DEPLOY": "Consente di specificare che la destinazione deve essere contrassegnata per la distribuzione quando non è destinata a Windows CE, Windows Phone o a un'applicazione di Windows Store.",
	"assets/variables.json.VS_SOURCE_SETTINGS_tool": "Consente di impostare i metadati di qualsiasi elemento su tutti i file non creati che usano <tool>.",
	"assets/variables.json.VS_USER_PROPS": "Consente di impostare il file delle proprietà utente da includere nel file di progetto di Visual Studio C++. Il percorso standard è $(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props, che nella maggior parte dei casi è uguale a %LOCALAPPDATA%\\\\Microsoft\\\\MSBuild\\\\v4.0\\\\Microsoft.Cpp.Win32.user.props o %LOCALAPPDATA%\\\\Microsoft\\\\MSBuild\\\\v4.0\\\\Microsoft.Cpp.x64.user.props.",
	"assets/variables.json.VS_USE_DEBUG_LIBRARIES": "Indicare ai Generatori di Visual Studio quali configurazioni vengono considerate configurazioni di debug. Controlla l'impostazione UseDebugLibraries in ogni configurazione di un file .vcxproj.",
	"assets/variables.json.VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION": "Versione minima della piattaforma di destinazione Windows di Visual Studio",
	"assets/variables.json.VS_WINRT_COMPONENT": "Contrassegna una destinazione come componente Windows Runtime per il generatore di Visual Studio. Compilare la destinazione con le estensioni del linguaggio C++/CX per Windows Runtime. Per le librerie SHARED e MODULE, consente anche di definire la macro del preprocessore _WINRT_DLL.",
	"assets/variables.json.VS_WINRT_EXTENSIONS": "Deprecato. In alternativa, usare VS_WINRT_COMPONENT. Questa proprietà è stata un'implementazione parziale sperimentale di quella.",
	"assets/variables.json.VS_WINRT_REFERENCES": "Riferimenti dei metadati di Windows Runtime per il progetto di Visual Studio",
	"assets/variables.json.WATCOM_RUNTIME_LIBRARY": "Consente di selezionare la libreria di runtime Watcom che verrà usata dai compilatori quando la destinazione è l'ABI Watcom.",
	"assets/variables.json.WIN32_EXECUTABLE": "Consente di compilare un eseguibile con un punto di ingresso WinMain in Windows.",
	"assets/variables.json.WINDOWS_EXPORT_ALL_SYMBOLS": "Questa proprietà viene implementata solo per strumenti compatibili con MS in Windows.",
	"assets/variables.json.XCODE_ATTRIBUTE_an-attribute": "Consente di impostare direttamente gli attributi della destinazione Xcode.",
	"assets/variables.json.XCODE_EMBED_FRAMEWORKS_CODE_SIGN_ON_COPY": "Indica al generatore Xcode di eseguire la firma del codice per tutti i framework e le librerie incorporati con la proprietà XCODE_EMBED_FRAMEWORKS <XCODE_EMBED_<type>>.",
	"assets/variables.json.XCODE_EMBED_FRAMEWORKS_REMOVE_HEADERS_ON_COPY": "Indica al generatore Xcode di rimuovere le intestazioni da tutti i framework incorporati con la proprietà XCODE_EMBED_FRAMEWORKS <XCODE_EMBED_<type>>.",
	"assets/variables.json.XCODE_EMBED_type": "Indica al generatore Xcode di incorporare l'elenco specificato di elementi nel bundle di destinazione. Con <type> si specifica la fase di compilazione incorporata da usare. Per il percorso di base di ogni elemento <type>, vedere la documentazione di Xcode.",
	"assets/variables.json.XCODE_EMBED_type_CODE_SIGN_ON_COPY": "Proprietà booleana usata solo dal generatore Xcode. Specifica se eseguire la firma del codice per gli elementi incorporati con la proprietà XCODE_EMBED_.",
	"assets/variables.json.XCODE_EMBED_type_PATH": "Questa proprietà viene usata solo dal generatore Xcode. Se definita, specifica il percorso relativo da usare quando si incorporano gli elementi specificati da XCODE_EMBED_. Il percorso è relativo al percorso base della fase di compilazione XXX incorporata associata a <type>. Per il percorso di base di ogni elemento <type>, vedere la documentazione di Xcode.",
	"assets/variables.json.XCODE_EMBED_type_REMOVE_HEADERS_ON_COPY": "Proprietà booleana usata solo dal generatore Xcode. Specifica se rimuovere le intestazioni da tutti i framework incorporati con la proprietà XCODE_EMBED_.",
	"assets/variables.json.XCODE_GENERATE_SCHEME": "Se è abilitata, il generatore di Xcode genererà i file dello schema. Tali file sono utili per richiamare le azioni di analisi, archiviazione, compilazione per test e test dalla riga di comando.",
	"assets/variables.json.XCODE_LINK_BUILD_PHASE_MODE": "Quando si usa il generatore Xcode, per specificare le librerie da collegare nel file di progetto Xcode si usa la fase di compilazione \"Link Binary With Libraries\" o direttamente come flag del linker. Il primo consente a Xcode di gestire i percorsi di compilazione, impostazione che potrebbe essere necessaria quando si creano archivi Xcode perché potrebbe usare percorsi di compilazione diversi per una compilazione standard.",
	"assets/variables.json.XCODE_PRODUCT_TYPE": "Consente di impostare l'attributo productType di Xcode sul relativo riferimento a una destinazione. CMake calcola un valore predefinito in base al tipo di destinazione, ma questa proprietà consente di indicarlo in modo esplicito.",
	"assets/variables.json.XCODE_SCHEME_ADDRESS_SANITIZER": "Indica se abilitare Address Sanitizer nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN": "Indica se abilitare Detect use of stack after return nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_ARGUMENTS": "Consente di specificare gli argomenti della riga di comando da aggiungere alla sezione Arguments dello schema Xcode generato.",
	"assets/variables.json.XCODE_SCHEME_DEBUG_AS_ROOT": "Indica se eseguire il debug della destinazione come 'root'.",
	"assets/variables.json.XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING": "Indica se abilitare l'opzione per consentire il debug quando si usa il browser versioni del documento nella sezione delle opzioni dello schema Xcode generato.",
	"assets/variables.json.XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER": "Indica se disabilitare Main Thread Checker nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS": "Indica se abilitare Dynamic Library Loads nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE": "Indica se abilitare l'utilizzo di Dynamic Linker API nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_ENABLE_GPU_API_VALIDATION": "Valore della proprietà per Metal: Convalida API nella sezione Opzioni dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE": "Valore della proprietà per Acquisizione frame GPU nella sezione Opzioni dello schema Xcode generato. I valori di esempio sono Metal e Disabled (Disabilitato).",
	"assets/variables.json.XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION": "Valore della proprietà per Metal: Convalida Shader nella sezione Opzioni dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_ENVIRONMENT": "Consente di specificare le variabili di ambiente da aggiungere alla sezione Arguments dello schema Xcode generato.",
	"assets/variables.json.XCODE_SCHEME_EXECUTABLE": "Consente di specificare il percorso dell'eseguibile nella sezione Info dello schema Xcode generato. Se non è impostato, il generatore di schemi selezionerà la destinazione corrente se è effettivamente eseguibile.",
	"assets/variables.json.XCODE_SCHEME_GUARD_MALLOC": "Indica se abilitare Guard Malloc nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_LAUNCH_CONFIGURATION": "Impostare la configurazione di compilazione per eseguire la destinazione.",
	"assets/variables.json.XCODE_SCHEME_LAUNCH_MODE": "Valore della proprietà per Launch nella sezione Info dello schema Xcode generato.",
	"assets/variables.json.XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP": "Indica se abilitare l'opzione Pause on issues di Main Thread Checker nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_MALLOC_GUARD_EDGES": "Indica se abilitare Malloc Guard Edges nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_MALLOC_SCRIBBLE": "Indica se abilitare Malloc Scribble nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_MALLOC_STACK": "Indica se abilitare Malloc Stack nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_THREAD_SANITIZER": "Indica se abilitare Thread Sanitizer nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_THREAD_SANITIZER_STOP": "Indica se abilitare Thread Sanitizer - Pause on issues nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER": "Indica se abilitare Undefined Behavior Sanitizer nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP": "Indica se abilitare l'opzione Pause on issues di Undefined Behavior Sanitizer nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_SCHEME_WORKING_DIRECTORY": "Consente di specificare la directory di lavoro delle azioni di esecuzione e creazione profilo nello schema Xcode generato. Se presenti nel valore, le espressioni del generatore verranno valutate.",
	"assets/variables.json.XCODE_SCHEME_ZOMBIE_OBJECTS": "Indica se abilitare Zombie Objects nella sezione Diagnostics dello schema generato di Xcode.",
	"assets/variables.json.XCODE_XCCONFIG": "Se impostato, il generatore Xcode registrerà il file specificato come file XCConfig a livello di destinazione. Per i file XCConfig globali, vedere la variabile CMAKE_XCODE_XCCONFIG.",
	"assets/variables.json.XCTEST": "Questa destinazione è un elemento CFBundle di XCTest nel Mac."
}
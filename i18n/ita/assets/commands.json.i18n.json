/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"assets/commands.json.add_compile_definitions": "Aggiunge le definizioni del preprocessore alla compilazione dei file di origine.",
	"assets/commands.json.add_compile_options": "Aggiunge le opzioni alla compilazione dei file di origine.",
	"assets/commands.json.add_custom_command": "Aggiunge una regola di compilazione personalizzata al sistema di compilazione generato.",
	"assets/commands.json.add_custom_target": "Aggiunge una destinazione senza output in modo che verrà sempre compilata.",
	"assets/commands.json.add_definitions": "Aggiunge i flag di definizione -D alla compilazione dei file di origine.",
	"assets/commands.json.add_dependencies": "Aggiunge una dipendenza tra le destinazioni di primo livello.",
	"assets/commands.json.add_executable": "Aggiunge un eseguibile al progetto usando i file di origine specificati.",
	"assets/commands.json.add_library": "Aggiunge una libreria in al progetto usando i file di origine specificati.",
	"assets/commands.json.add_link_options": "Aggiunge le opzioni relative al passaggio di collegamento per le destinazioni eseguibile, libreria condivisa o libreria di moduli nella directory corrente e quella sottostante aggiunte dopo la richiamata di questo comando.",
	"assets/commands.json.add_subdirectory": "Aggiunge una sottodirectory alla compilazione.",
	"assets/commands.json.add_test": "Aggiunge al progetto un test che verrà eseguito da ctest.",
	"assets/commands.json.aux_source_directory": "Trova tutti i file di origine presenti in una directory.",
	"assets/commands.json.block": "Consente di valutare un gruppo di comandi con una variabile dedicata e/o un ambito di criteri.",
	"assets/commands.json.break": "Consente di eseguire un'interruzione da un ciclo foreach o while di inclusione.",
	"assets/commands.json.build_command": "Consente di ottenere una riga di comando per compilare il progetto corrente. Viene usato soprattutto per finalità interne dal modulo CTest.",
	"assets/commands.json.build_name": "Non ammessa a partire dalla versione 3.0. Vedere i criteri CMake CMP0036.",
	"assets/commands.json.cmake_file_api": "Abilita l'interazione con l'API file CMake <cmake-file-api(7)>.",
	"assets/commands.json.cmake_host_system_information": "Eseguire query su varie informazioni sul sistema host.",
	"assets/commands.json.cmake_language": "Chiama meta-operazioni sui comandi CMake.",
	"assets/commands.json.cmake_minimum_required": "Richiede una versione minima di CMake.",
	"assets/commands.json.cmake_parse_arguments": "Analizza gli argomenti della funzione o della macro.",
	"assets/commands.json.cmake_path": "Questo comando viene usato per la modifica dei percorsi. Vengono gestiti solo gli aspetti sintattici dei percorsi e non vi è alcun tipo di interazione con eventuali file system sottostanti. Il percorso può rappresentare un percorso non esistente o anche un percorso che non può esistere nel file system o nella piattaforma corrente. Per le operazioni che interagiscono con il file system, vedere il comando file.",
	"assets/commands.json.cmake_policy": "Consente di gestire le impostazioni dei criteri di CMake. Per i criteri definiti, vedere il manuale cmake-policies.",
	"assets/commands.json.configure_file": "Consente di copiare un file in un altro percorso e di modificarne il contenuto.",
	"assets/commands.json.continue": "Consente di continuare tornando all'inizio di un ciclo foreach o while di inclusione.",
	"assets/commands.json.create_test_sourcelist": "Creare un programma di driver di test che collega molti test di piccole dimensioni in un unico eseguibile. È utile quando si compilano file eseguibili statici con librerie di grandi dimensioni per ridurre le dimensioni totali richieste.",
	"assets/commands.json.ctest_build": "Esegue il passaggio di compilazione di CTest come client del dashboard.",
	"assets/commands.json.ctest_configure": "Esegue il passaggio Configure di CTest come client del dashboard.",
	"assets/commands.json.ctest_coverage": "Esegue il passaggio Coverage di CTest come client del dashboard.",
	"assets/commands.json.ctest_empty_binary_directory": "Svuota la directory dei file binari",
	"assets/commands.json.ctest_memcheck": "Esegue il passaggio MemCheck di CTest come client del dashboard.",
	"assets/commands.json.ctest_read_custom_files": "Leggi i file CTestCustom.",
	"assets/commands.json.ctest_run_script": "Esegue uno script ctest -S",
	"assets/commands.json.ctest_sleep": "Passa alla modalità sospensione per un determinato intervallo di tempo",
	"assets/commands.json.ctest_start": "Avvia il test per un determinato modello",
	"assets/commands.json.ctest_submit": "Esegue il passaggio Submit di CTest come client del dashboard.",
	"assets/commands.json.ctest_test": "Esegue il passaggio Test di CTest come client del dashboard.",
	"assets/commands.json.ctest_update": "Esegue il passaggio Update di CTest come client del dashboard.",
	"assets/commands.json.ctest_upload": "Carica i file in un server del dashboard come client del dashboard.",
	"assets/commands.json.define_property": "Consente di definire e documentare le proprietà personalizzate.",
	"assets/commands.json.else": "Inizia la parte else di un blocco if.",
	"assets/commands.json.elseif": "Inizia una parte elseif di un blocco if.",
	"assets/commands.json.enable_language": "Abilita linguaggi (CXX/C/OBJC/OBJCXX/Fortran e così via)",
	"assets/commands.json.enable_testing": "Abilita il test per la directory e quelle sottostanti.",
	"assets/commands.json.endblock": "Termina un elenco di comandi in un blocco e rimuove gli ambiti creati dal comando Blocca.",
	"assets/commands.json.endforeach": "Termina un elenco di comandi in un blocco foreach.",
	"assets/commands.json.endfunction": "Termina un elenco di comandi in un blocco function.",
	"assets/commands.json.endif": "Termina un elenco di comandi in un blocco if.",
	"assets/commands.json.endmacro": "Termina un elenco di comandi in un blocco macro.",
	"assets/commands.json.endwhile": "Termina un elenco di comandi in un blocco while.",
	"assets/commands.json.execute_process": "Esegue uno o più processi figlio.",
	"assets/commands.json.exec_program": "Esegue un programma eseguibile durante l'elaborazione del file CMakeList.txt.",
	"assets/commands.json.export": "Esportare destinazioni o pacchetti per progetti esterni per usarli direttamente dall'albero di compilazione del progetto corrente, senza installazione.",
	"assets/commands.json.export_library_dependencies": "Non ammessa a partire dalla versione 3.0. Vedere i criteri CMake CMP0033.",
	"assets/commands.json.file": "Comando di manipolazione dei file.",
	"assets/commands.json.find_file": "Questo comando consente di trovare un percorso completo del file denominato.",
	"assets/commands.json.find_library": "Questo comando consente di trovare una libreria.",
	"assets/commands.json.find_package": "Trova un pacchetto (in genere fornito da un elemento esterno al progetto) e carica i dettagli specifici del pacchetto. Le chiamate a questo comando possono anche essere intercettate dai provider di dipendenze.",
	"assets/commands.json.find_path": "Questo comando consente di trovare un directory che contiene il file denominato.",
	"assets/commands.json.find_program": "Questo comando consente di trovare un programma.",
	"assets/commands.json.fltk_wrap_ui": "Consente di creare wrapper per le interfacce utente FLTK.",
	"assets/commands.json.foreach": "Consente di valutare un gruppo di comandi per ogni valore di un elenco.",
	"assets/commands.json.function": "Avvia la registrazione di una funzione per chiamarla successivamente come comando.",
	"assets/commands.json.get_cmake_property": "Ottiene una proprietà globale dell'istanza di CMake.",
	"assets/commands.json.get_directory_property": "Ottiene una proprietà dell'ambito DIRECTORY.",
	"assets/commands.json.get_filename_component": "Ottiene un componente specifico di un nome file completo.",
	"assets/commands.json.get_property": "Ottieni una proprietà.",
	"assets/commands.json.get_source_file_property": "Ottiene una proprietà per un file di origine.",
	"assets/commands.json.get_target_property": "Ottiene una proprietà da una destinazione.",
	"assets/commands.json.get_test_property": "Ottiene una proprietà del test.",
	"assets/commands.json.if": "Esegue in modo condizionale un gruppo di comandi.",
	"assets/commands.json.include": "Carica ed esegue il codice CMake da un file o un modulo.",
	"assets/commands.json.include_directories": "Aggiunge le directory di inclusione alla compilazione.",
	"assets/commands.json.include_external_msproject": "Include un file di progetto Microsoft esterno in un'area di lavoro.",
	"assets/commands.json.include_guard": "Fornisce un guard di inclusione per il file attualmente in fase di elaborazione in CMake.",
	"assets/commands.json.include_regular_expression": "Imposta l'espressione regolare utilizzata per il controllo delle dipendenze.",
	"assets/commands.json.install": "Consente di specificare le regole da eseguire in fase di installazione.",
	"assets/commands.json.install_files": "Il comando è stato sostituito dal comando install. Viene fornito per la compatibilità con il codice CMake meno recente. Il modulo FILES viene sostituito direttamente dal modulo FILES del comando install. Il modulo RegExp può essere espresso più chiaramente usando il modulo GLOB del comando file.",
	"assets/commands.json.install_programs": "Il comando è stato sostituito dal comando install. Viene fornito per la compatibilità con il codice CMake meno recente. Il modulo FILES viene sostituito direttamente dal modulo PROGRAMS del comando install. Il modulo RegExp può essere espresso più chiaramente usando il modulo GLOB del comando file.",
	"assets/commands.json.install_targets": "Questo comando è stato sostituito dal comando install. Viene fornito per la compatibilità con il codice CMake meno recente.",
	"assets/commands.json.link_directories": "Aggiungere le directory in cui il linker cercherà le librerie.",
	"assets/commands.json.link_libraries": "Collegare le raccolte a tutte le destinazioni aggiunte in seguito.",
	"assets/commands.json.list": "Operazioni su elenchi delimitati da punto e virgola.",
	"assets/commands.json.load_cache": "Carica i valori della cache CMake di un altro progetto.",
	"assets/commands.json.load_command": "Non ammessa a partire dalla versione 3.0. Vedere i criteri CMake CMP0031.",
	"assets/commands.json.macro": "Avvia la registrazione di una macro per chiamarla successivamente come comando",
	"assets/commands.json.make_directory": "Crea la directory specificata. È necessario specificare percorsi completi. Verranno create anche eventuali directory padre che non esistono. Usare con cautela.",
	"assets/commands.json.mark_as_advanced": "Contrassegna come avanzate le variabili memorizzate nella cache CMake.",
	"assets/commands.json.math": "Valuta un'espressione matematica.",
	"assets/commands.json.message": "Registra un messaggio.",
	"assets/commands.json.option": "Fornisce un'opzione booleana che l'utente può scegliere di selezionare.",
	"assets/commands.json.output_required_files": "Non ammessa a partire dalla versione 3.0. Vedere i criteri CMake CMP0032.",
	"assets/commands.json.project": "Consente di impostare il nome del progetto.",
	"assets/commands.json.qt_wrap_cpp": "Consente di creare manualmente wrapper Qt.",
	"assets/commands.json.qt_wrap_ui": "Consente di creare manualmente wrapper per le interfacce utente Qt.",
	"assets/commands.json.remove": "Rimuove VALUE dalla variabile VAR. Viene usato in genere per rimuovere le voci da un vettore, ad esempio un elenco di voci delimitato da punto e virgola. VALUE viene espanso.",
	"assets/commands.json.remove_definitions": "Rimuove i flag di definizione -D aggiunti da add_definitions.",
	"assets/commands.json.return": "Viene restituito da un file, una cartella o una funzione.",
	"assets/commands.json.separate_arguments": "Analizza gli argomenti della riga di comando in un elenco di voci delimitate da punto e virgola.",
	"assets/commands.json.set": "Consente di impostare una variabile di ambiente, normale o di cache su un valore specificato. Vedere la documentazione sulle variabili in cmake-language(7) per gli ambiti e l'interazione delle variabili normali e delle voci della cache.",
	"assets/commands.json.set_directory_properties": "Consente di impostare le proprietà della directory e delle sottodirectory correnti.",
	"assets/commands.json.set_property": "Consente di impostare una proprietà denominata in un ambito specificato.",
	"assets/commands.json.set_source_files_properties": "I file di origine possono includere proprietà che influiscono sulla modalità con cui vengono compilati.",
	"assets/commands.json.set_target_properties": "Le destinazioni possono includere proprietà che influiscono sulla modalità con cui vengono compilate.",
	"assets/commands.json.set_tests_properties": "Consente di impostare una proprietà dei test.",
	"assets/commands.json.site_name": "Consente di impostare la variabile specificata sul nome del computer.",
	"assets/commands.json.source_group": "Consente di definire un raggruppamento per i file di origine nella generazione di progetti IDE. Sono disponibili due diverse firme per creare gruppi di origine.",
	"assets/commands.json.string": "Operazioni di stringa.",
	"assets/commands.json.subdirs": "Aggiunge un elenco di sottodirectory alla compilazione.",
	"assets/commands.json.subdir_depends": "Non ammessa a partire dalla versione 3.0. Vedere i criteri CMake CMP0029.",
	"assets/commands.json.target_compile_definitions": "Consente di aggiungere definizioni di compilazione a una destinazione.",
	"assets/commands.json.target_compile_features": "Consente di aggiungere le funzionalità di del compilatore previste a una destinazione.",
	"assets/commands.json.target_compile_options": "Consente di aggiungere le opzioni di compilazione a una destinazione.",
	"assets/commands.json.target_include_directories": "Consente di aggiungere le directory di inclusione a una destinazione.",
	"assets/commands.json.target_link_directories": "Consente di aggiungere le directory di collegamento a una destinazione.",
	"assets/commands.json.target_link_libraries": "Consente di specificare le librerie o i flag da usare quando si collega una destinazione specifica e/o i relativi dipendenti. Saranno propagati i requisiti di utilizzo delle destinazioni della libreria collegata. I requisiti di utilizzo delle dipendenze di una destinazione influiscono sulla compilazione delle relative origini.",
	"assets/commands.json.target_link_options": "Aggiunge opzioni al passaggio di collegamento per una destinazione di eseguibile, libreria condivisa o libreria di moduli.",
	"assets/commands.json.target_precompile_headers": "Aggiunge un elenco dei file di intestazione da precompilare.",
	"assets/commands.json.target_sources": "Consente di aggiungere le origini a una destinazione.",
	"assets/commands.json.try_compile": "Prova a compilare il codice.",
	"assets/commands.json.try_run": "Prova a compilare e quindi a eseguire il codice.",
	"assets/commands.json.unset": "Annulla l'impostazione di una variabile, una variabile di cache o una variabile di ambiente.",
	"assets/commands.json.use_mangled_mesa": "Non ammessa a partire dalla versione 3.0. Vedere i criteri CMake CMP0030.",
	"assets/commands.json.utility_source": "Non ammessa a partire dalla versione 3.0. Vedere i criteri CMake CMP0034.",
	"assets/commands.json.variable_requires": "Non ammessa a partire dalla versione 3.0. Vedere i criteri CMake CMP0035.",
	"assets/commands.json.variable_watch": "Controlla la variabile di CMake per verificare se è stata modificata.",
	"assets/commands.json.while": "Consente di valutare un gruppo di comandi mentre una condizione è vera",
	"assets/commands.json.write_file": "Il primo argomento è il nome file, gli altri argomenti sono messaggi da scrivere. Se si specifica l'argomento APPEND, il messaggio verrà accodato."
}